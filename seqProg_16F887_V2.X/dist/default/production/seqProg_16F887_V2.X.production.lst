

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Thu Nov 18 00:57:59 2021

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     8                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     9                           	psect	strings,global,class=STRING,delta=2,noexec
    10                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
    11                           	psect	cinit,global,class=CODE,merge=1,delta=2
    12                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
    20                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    21                           	psect	inittext,global,class=CODE,delta=2
    22                           	psect	clrtext,global,class=CODE,delta=2
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    24                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	maintext,global,class=CODE,split=1,delta=2
    27                           	psect	text1,local,class=CODE,merge=1,delta=2
    28                           	psect	text2,local,class=CODE,merge=1,delta=2
    29                           	psect	text3,local,class=CODE,merge=1,delta=2
    30                           	psect	text4,local,class=CODE,merge=1,delta=2
    31                           	psect	text5,local,class=CODE,merge=1,delta=2
    32                           	psect	text6,local,class=CODE,merge=1,delta=2
    33                           	psect	text7,local,class=CODE,merge=1,delta=2
    34                           	psect	text8,local,class=CODE,merge=1,delta=2
    35                           	psect	text9,local,class=CODE,merge=1,delta=2
    36                           	psect	text10,local,class=CODE,merge=1,delta=2
    37                           	psect	text11,local,class=CODE,merge=1,delta=2
    38                           	psect	text12,local,class=CODE,merge=1,delta=2
    39                           	psect	text13,local,class=CODE,merge=1,delta=2
    40                           	psect	text14,local,class=CODE,merge=1,delta=2
    41                           	psect	text15,local,class=CODE,merge=1,delta=2
    42                           	psect	text16,local,class=CODE,merge=1,delta=2
    43                           	psect	text17,local,class=CODE,merge=1,delta=2
    44                           	psect	text18,local,class=CODE,merge=1,delta=2
    45                           	psect	text19,local,class=CODE,merge=1,delta=2
    46                           	psect	text20,local,class=CODE,merge=1,delta=2
    47                           	psect	text21,local,class=CODE,merge=1,delta=2
    48                           	psect	text22,local,class=CODE,merge=1,delta=2
    49                           	psect	text23,local,class=CODE,merge=1,delta=2
    50                           	psect	text24,local,class=CODE,merge=1,delta=2
    51                           	psect	text25,local,class=CODE,merge=1,delta=2
    52                           	psect	text26,local,class=CODE,merge=1,delta=2
    53                           	psect	text27,local,class=CODE,merge=1,delta=2
    54                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text29,local,class=CODE,merge=1,delta=2
    56                           	psect	text30,local,class=CODE,merge=1,delta=2
    57                           	psect	text31,local,class=CODE,merge=1,delta=2
    58                           	psect	text32,local,class=CODE,merge=1,delta=2
    59                           	psect	text33,local,class=CODE,merge=1,delta=2
    60                           	psect	text34,local,class=CODE,merge=1,delta=2
    61                           	psect	text35,local,class=CODE,merge=1,delta=2
    62                           	psect	text36,local,class=CODE,merge=1,delta=2
    63                           	psect	text37,local,class=CODE,merge=1,delta=2
    64                           	psect	text38,local,class=CODE,merge=1,delta=2
    65                           	psect	text39,local,class=CODE,merge=1,delta=2
    66                           	psect	text40,local,class=CODE,merge=1,delta=2
    67                           	psect	text41,local,class=CODE,merge=1,delta=2
    68                           	psect	text42,local,class=CODE,merge=1,delta=2
    69                           	psect	text43,local,class=CODE,merge=1,delta=2,group=1
    70                           	psect	text44,local,class=CODE,merge=1,delta=2
    71                           	psect	text45,local,class=CODE,merge=1,delta=2
    72                           	psect	text46,local,class=CODE,merge=1,delta=2
    73                           	psect	text47,local,class=CODE,merge=1,delta=2
    74                           	psect	text48,local,class=CODE,merge=1,delta=2
    75                           	psect	text49,local,class=CODE,merge=1,delta=2
    76                           	psect	text50,local,class=CODE,merge=1,delta=2
    77                           	psect	text51,local,class=CODE,merge=1,delta=2
    78                           	psect	text52,local,class=CODE,merge=1,delta=2
    79                           	psect	text53,local,class=CODE,merge=1,delta=2,group=1
    80                           	psect	text54,local,class=CODE,merge=1,delta=2
    81                           	psect	text55,local,class=CODE,merge=1,delta=2,group=1
    82                           	psect	text56,local,class=CODE,merge=1,delta=2
    83                           	psect	text57,local,class=CODE,merge=1,delta=2
    84                           	psect	text58,local,class=CODE,merge=1,delta=2
    85                           	psect	text59,local,class=CODE,merge=1,delta=2
    86                           	psect	text60,local,class=CODE,merge=1,delta=2
    87                           	psect	text61,local,class=CODE,merge=1,delta=2
    88                           	psect	text62,local,class=CODE,merge=1,delta=2
    89                           	psect	text63,local,class=CODE,merge=1,delta=2
    90                           	psect	text64,local,class=CODE,merge=1,delta=2
    91                           	psect	text65,local,class=CODE,merge=1,delta=2
    92                           	psect	text66,local,class=CODE,merge=1,delta=2
    93                           	psect	text67,local,class=CODE,merge=1,delta=2
    94                           	psect	text68,local,class=CODE,merge=1,delta=2
    95                           	psect	text69,local,class=CODE,merge=1,delta=2,group=1
    96                           	psect	text70,local,class=CODE,merge=1,delta=2
    97                           	psect	intentry,global,class=CODE,delta=2
    98                           	psect	text71,local,class=CODE,merge=1,delta=2
    99                           	psect	functab,global,class=ENTRY,delta=2
   100                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   101                           	psect	maintext_split_1,global,class=CODE,split=1,delta=2
   102                           	psect	maintext_split_2,global,class=CODE,split=1,delta=2
   103                           	dabs	1,0x7E,2
   104  0000                     
   105                           ; Version 2.20
   106                           ; Generated 12/02/2020 GMT
   107                           ; 
   108                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   109                           ; All rights reserved.
   110                           ; 
   111                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   112                           ; 
   113                           ; Redistribution and use in source and binary forms, with or without modification, are
   114                           ; permitted provided that the following conditions are met:
   115                           ; 
   116                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   117                           ;        conditions and the following disclaimer.
   118                           ; 
   119                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   120                           ;        of conditions and the following disclaimer in the documentation and/or other
   121                           ;        materials provided with the distribution.
   122                           ; 
   123                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   124                           ;        software without specific prior written permission.
   125                           ; 
   126                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   127                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   128                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   129                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   130                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   131                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   132                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   133                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   134                           ; 
   135                           ; 
   136                           ; Code-generator required, PIC16F887 Definitions
   137                           ; 
   138                           ; SFR Addresses
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  000E                     	;# 
   233  000F                     	;# 
   234  0010                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001D                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  0087                     	;# 
   256  0088                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  0105                     	;# 
   281  0107                     	;# 
   282  0108                     	;# 
   283  0109                     	;# 
   284  010C                     	;# 
   285  010C                     	;# 
   286  010D                     	;# 
   287  010E                     	;# 
   288  010F                     	;# 
   289  0185                     	;# 
   290  0187                     	;# 
   291  0188                     	;# 
   292  0189                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0000                     	;# 
   296  0001                     	;# 
   297  0002                     	;# 
   298  0003                     	;# 
   299  0004                     	;# 
   300  0005                     	;# 
   301  0006                     	;# 
   302  0007                     	;# 
   303  0008                     	;# 
   304  0009                     	;# 
   305  000A                     	;# 
   306  000B                     	;# 
   307  000C                     	;# 
   308  000D                     	;# 
   309  000E                     	;# 
   310  000E                     	;# 
   311  000F                     	;# 
   312  0010                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0013                     	;# 
   316  0014                     	;# 
   317  0015                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0017                     	;# 
   321  0018                     	;# 
   322  0019                     	;# 
   323  001A                     	;# 
   324  001B                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001D                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  0081                     	;# 
   331  0085                     	;# 
   332  0086                     	;# 
   333  0087                     	;# 
   334  0088                     	;# 
   335  0089                     	;# 
   336  008C                     	;# 
   337  008D                     	;# 
   338  008E                     	;# 
   339  008F                     	;# 
   340  0090                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0095                     	;# 
   348  0096                     	;# 
   349  0097                     	;# 
   350  0098                     	;# 
   351  0099                     	;# 
   352  009A                     	;# 
   353  009B                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  009F                     	;# 
   358  0105                     	;# 
   359  0107                     	;# 
   360  0108                     	;# 
   361  0109                     	;# 
   362  010C                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  0185                     	;# 
   368  0187                     	;# 
   369  0188                     	;# 
   370  0189                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373  0000                     	;# 
   374  0001                     	;# 
   375  0002                     	;# 
   376  0003                     	;# 
   377  0004                     	;# 
   378  0005                     	;# 
   379  0006                     	;# 
   380  0007                     	;# 
   381  0008                     	;# 
   382  0009                     	;# 
   383  000A                     	;# 
   384  000B                     	;# 
   385  000C                     	;# 
   386  000D                     	;# 
   387  000E                     	;# 
   388  000E                     	;# 
   389  000F                     	;# 
   390  0010                     	;# 
   391  0011                     	;# 
   392  0012                     	;# 
   393  0013                     	;# 
   394  0014                     	;# 
   395  0015                     	;# 
   396  0015                     	;# 
   397  0016                     	;# 
   398  0017                     	;# 
   399  0018                     	;# 
   400  0019                     	;# 
   401  001A                     	;# 
   402  001B                     	;# 
   403  001B                     	;# 
   404  001C                     	;# 
   405  001D                     	;# 
   406  001E                     	;# 
   407  001F                     	;# 
   408  0081                     	;# 
   409  0085                     	;# 
   410  0086                     	;# 
   411  0087                     	;# 
   412  0088                     	;# 
   413  0089                     	;# 
   414  008C                     	;# 
   415  008D                     	;# 
   416  008E                     	;# 
   417  008F                     	;# 
   418  0090                     	;# 
   419  0091                     	;# 
   420  0092                     	;# 
   421  0093                     	;# 
   422  0093                     	;# 
   423  0093                     	;# 
   424  0094                     	;# 
   425  0095                     	;# 
   426  0096                     	;# 
   427  0097                     	;# 
   428  0098                     	;# 
   429  0099                     	;# 
   430  009A                     	;# 
   431  009B                     	;# 
   432  009C                     	;# 
   433  009D                     	;# 
   434  009E                     	;# 
   435  009F                     	;# 
   436  0105                     	;# 
   437  0107                     	;# 
   438  0108                     	;# 
   439  0109                     	;# 
   440  010C                     	;# 
   441  010C                     	;# 
   442  010D                     	;# 
   443  010E                     	;# 
   444  010F                     	;# 
   445  0185                     	;# 
   446  0187                     	;# 
   447  0188                     	;# 
   448  0189                     	;# 
   449  018C                     	;# 
   450  018D                     	;# 
   451  0000                     	;# 
   452  0001                     	;# 
   453  0002                     	;# 
   454  0003                     	;# 
   455  0004                     	;# 
   456  0005                     	;# 
   457  0006                     	;# 
   458  0007                     	;# 
   459  0008                     	;# 
   460  0009                     	;# 
   461  000A                     	;# 
   462  000B                     	;# 
   463  000C                     	;# 
   464  000D                     	;# 
   465  000E                     	;# 
   466  000E                     	;# 
   467  000F                     	;# 
   468  0010                     	;# 
   469  0011                     	;# 
   470  0012                     	;# 
   471  0013                     	;# 
   472  0014                     	;# 
   473  0015                     	;# 
   474  0015                     	;# 
   475  0016                     	;# 
   476  0017                     	;# 
   477  0018                     	;# 
   478  0019                     	;# 
   479  001A                     	;# 
   480  001B                     	;# 
   481  001B                     	;# 
   482  001C                     	;# 
   483  001D                     	;# 
   484  001E                     	;# 
   485  001F                     	;# 
   486  0081                     	;# 
   487  0085                     	;# 
   488  0086                     	;# 
   489  0087                     	;# 
   490  0088                     	;# 
   491  0089                     	;# 
   492  008C                     	;# 
   493  008D                     	;# 
   494  008E                     	;# 
   495  008F                     	;# 
   496  0090                     	;# 
   497  0091                     	;# 
   498  0092                     	;# 
   499  0093                     	;# 
   500  0093                     	;# 
   501  0093                     	;# 
   502  0094                     	;# 
   503  0095                     	;# 
   504  0096                     	;# 
   505  0097                     	;# 
   506  0098                     	;# 
   507  0099                     	;# 
   508  009A                     	;# 
   509  009B                     	;# 
   510  009C                     	;# 
   511  009D                     	;# 
   512  009E                     	;# 
   513  009F                     	;# 
   514  0105                     	;# 
   515  0107                     	;# 
   516  0108                     	;# 
   517  0109                     	;# 
   518  010C                     	;# 
   519  010C                     	;# 
   520  010D                     	;# 
   521  010E                     	;# 
   522  010F                     	;# 
   523  0185                     	;# 
   524  0187                     	;# 
   525  0188                     	;# 
   526  0189                     	;# 
   527  018C                     	;# 
   528  018D                     	;# 
   529  0000                     	;# 
   530  0001                     	;# 
   531  0002                     	;# 
   532  0003                     	;# 
   533  0004                     	;# 
   534  0005                     	;# 
   535  0006                     	;# 
   536  0007                     	;# 
   537  0008                     	;# 
   538  0009                     	;# 
   539  000A                     	;# 
   540  000B                     	;# 
   541  000C                     	;# 
   542  000D                     	;# 
   543  000E                     	;# 
   544  000E                     	;# 
   545  000F                     	;# 
   546  0010                     	;# 
   547  0011                     	;# 
   548  0012                     	;# 
   549  0013                     	;# 
   550  0014                     	;# 
   551  0015                     	;# 
   552  0015                     	;# 
   553  0016                     	;# 
   554  0017                     	;# 
   555  0018                     	;# 
   556  0019                     	;# 
   557  001A                     	;# 
   558  001B                     	;# 
   559  001B                     	;# 
   560  001C                     	;# 
   561  001D                     	;# 
   562  001E                     	;# 
   563  001F                     	;# 
   564  0081                     	;# 
   565  0085                     	;# 
   566  0086                     	;# 
   567  0087                     	;# 
   568  0088                     	;# 
   569  0089                     	;# 
   570  008C                     	;# 
   571  008D                     	;# 
   572  008E                     	;# 
   573  008F                     	;# 
   574  0090                     	;# 
   575  0091                     	;# 
   576  0092                     	;# 
   577  0093                     	;# 
   578  0093                     	;# 
   579  0093                     	;# 
   580  0094                     	;# 
   581  0095                     	;# 
   582  0096                     	;# 
   583  0097                     	;# 
   584  0098                     	;# 
   585  0099                     	;# 
   586  009A                     	;# 
   587  009B                     	;# 
   588  009C                     	;# 
   589  009D                     	;# 
   590  009E                     	;# 
   591  009F                     	;# 
   592  0105                     	;# 
   593  0107                     	;# 
   594  0108                     	;# 
   595  0109                     	;# 
   596  010C                     	;# 
   597  010C                     	;# 
   598  010D                     	;# 
   599  010E                     	;# 
   600  010F                     	;# 
   601  0185                     	;# 
   602  0187                     	;# 
   603  0188                     	;# 
   604  0189                     	;# 
   605  018C                     	;# 
   606  018D                     	;# 
   607  0000                     	;# 
   608  0001                     	;# 
   609  0002                     	;# 
   610  0003                     	;# 
   611  0004                     	;# 
   612  0005                     	;# 
   613  0006                     	;# 
   614  0007                     	;# 
   615  0008                     	;# 
   616  0009                     	;# 
   617  000A                     	;# 
   618  000B                     	;# 
   619  000C                     	;# 
   620  000D                     	;# 
   621  000E                     	;# 
   622  000E                     	;# 
   623  000F                     	;# 
   624  0010                     	;# 
   625  0011                     	;# 
   626  0012                     	;# 
   627  0013                     	;# 
   628  0014                     	;# 
   629  0015                     	;# 
   630  0015                     	;# 
   631  0016                     	;# 
   632  0017                     	;# 
   633  0018                     	;# 
   634  0019                     	;# 
   635  001A                     	;# 
   636  001B                     	;# 
   637  001B                     	;# 
   638  001C                     	;# 
   639  001D                     	;# 
   640  001E                     	;# 
   641  001F                     	;# 
   642  0081                     	;# 
   643  0085                     	;# 
   644  0086                     	;# 
   645  0087                     	;# 
   646  0088                     	;# 
   647  0089                     	;# 
   648  008C                     	;# 
   649  008D                     	;# 
   650  008E                     	;# 
   651  008F                     	;# 
   652  0090                     	;# 
   653  0091                     	;# 
   654  0092                     	;# 
   655  0093                     	;# 
   656  0093                     	;# 
   657  0093                     	;# 
   658  0094                     	;# 
   659  0095                     	;# 
   660  0096                     	;# 
   661  0097                     	;# 
   662  0098                     	;# 
   663  0099                     	;# 
   664  009A                     	;# 
   665  009B                     	;# 
   666  009C                     	;# 
   667  009D                     	;# 
   668  009E                     	;# 
   669  009F                     	;# 
   670  0105                     	;# 
   671  0107                     	;# 
   672  0108                     	;# 
   673  0109                     	;# 
   674  010C                     	;# 
   675  010C                     	;# 
   676  010D                     	;# 
   677  010E                     	;# 
   678  010F                     	;# 
   679  0185                     	;# 
   680  0187                     	;# 
   681  0188                     	;# 
   682  0189                     	;# 
   683  018C                     	;# 
   684  018D                     	;# 
   685  0000                     	;# 
   686  0001                     	;# 
   687  0002                     	;# 
   688  0003                     	;# 
   689  0004                     	;# 
   690  0005                     	;# 
   691  0006                     	;# 
   692  0007                     	;# 
   693  0008                     	;# 
   694  0009                     	;# 
   695  000A                     	;# 
   696  000B                     	;# 
   697  000C                     	;# 
   698  000D                     	;# 
   699  000E                     	;# 
   700  000E                     	;# 
   701  000F                     	;# 
   702  0010                     	;# 
   703  0011                     	;# 
   704  0012                     	;# 
   705  0013                     	;# 
   706  0014                     	;# 
   707  0015                     	;# 
   708  0015                     	;# 
   709  0016                     	;# 
   710  0017                     	;# 
   711  0018                     	;# 
   712  0019                     	;# 
   713  001A                     	;# 
   714  001B                     	;# 
   715  001B                     	;# 
   716  001C                     	;# 
   717  001D                     	;# 
   718  001E                     	;# 
   719  001F                     	;# 
   720  0081                     	;# 
   721  0085                     	;# 
   722  0086                     	;# 
   723  0087                     	;# 
   724  0088                     	;# 
   725  0089                     	;# 
   726  008C                     	;# 
   727  008D                     	;# 
   728  008E                     	;# 
   729  008F                     	;# 
   730  0090                     	;# 
   731  0091                     	;# 
   732  0092                     	;# 
   733  0093                     	;# 
   734  0093                     	;# 
   735  0093                     	;# 
   736  0094                     	;# 
   737  0095                     	;# 
   738  0096                     	;# 
   739  0097                     	;# 
   740  0098                     	;# 
   741  0099                     	;# 
   742  009A                     	;# 
   743  009B                     	;# 
   744  009C                     	;# 
   745  009D                     	;# 
   746  009E                     	;# 
   747  009F                     	;# 
   748  0105                     	;# 
   749  0107                     	;# 
   750  0108                     	;# 
   751  0109                     	;# 
   752  010C                     	;# 
   753  010C                     	;# 
   754  010D                     	;# 
   755  010E                     	;# 
   756  010F                     	;# 
   757  0185                     	;# 
   758  0187                     	;# 
   759  0188                     	;# 
   760  0189                     	;# 
   761  018C                     	;# 
   762  018D                     	;# 
   763  0000                     	;# 
   764  0001                     	;# 
   765  0002                     	;# 
   766  0003                     	;# 
   767  0004                     	;# 
   768  0005                     	;# 
   769  0006                     	;# 
   770  0007                     	;# 
   771  0008                     	;# 
   772  0009                     	;# 
   773  000A                     	;# 
   774  000B                     	;# 
   775  000C                     	;# 
   776  000D                     	;# 
   777  000E                     	;# 
   778  000E                     	;# 
   779  000F                     	;# 
   780  0010                     	;# 
   781  0011                     	;# 
   782  0012                     	;# 
   783  0013                     	;# 
   784  0014                     	;# 
   785  0015                     	;# 
   786  0015                     	;# 
   787  0016                     	;# 
   788  0017                     	;# 
   789  0018                     	;# 
   790  0019                     	;# 
   791  001A                     	;# 
   792  001B                     	;# 
   793  001B                     	;# 
   794  001C                     	;# 
   795  001D                     	;# 
   796  001E                     	;# 
   797  001F                     	;# 
   798  0081                     	;# 
   799  0085                     	;# 
   800  0086                     	;# 
   801  0087                     	;# 
   802  0088                     	;# 
   803  0089                     	;# 
   804  008C                     	;# 
   805  008D                     	;# 
   806  008E                     	;# 
   807  008F                     	;# 
   808  0090                     	;# 
   809  0091                     	;# 
   810  0092                     	;# 
   811  0093                     	;# 
   812  0093                     	;# 
   813  0093                     	;# 
   814  0094                     	;# 
   815  0095                     	;# 
   816  0096                     	;# 
   817  0097                     	;# 
   818  0098                     	;# 
   819  0099                     	;# 
   820  009A                     	;# 
   821  009B                     	;# 
   822  009C                     	;# 
   823  009D                     	;# 
   824  009E                     	;# 
   825  009F                     	;# 
   826  0105                     	;# 
   827  0107                     	;# 
   828  0108                     	;# 
   829  0109                     	;# 
   830  010C                     	;# 
   831  010C                     	;# 
   832  010D                     	;# 
   833  010E                     	;# 
   834  010F                     	;# 
   835  0185                     	;# 
   836  0187                     	;# 
   837  0188                     	;# 
   838  0189                     	;# 
   839  018C                     	;# 
   840  018D                     	;# 
   841  0000                     	;# 
   842  0001                     	;# 
   843  0002                     	;# 
   844  0003                     	;# 
   845  0004                     	;# 
   846  0005                     	;# 
   847  0006                     	;# 
   848  0007                     	;# 
   849  0008                     	;# 
   850  0009                     	;# 
   851  000A                     	;# 
   852  000B                     	;# 
   853  000C                     	;# 
   854  000D                     	;# 
   855  000E                     	;# 
   856  000E                     	;# 
   857  000F                     	;# 
   858  0010                     	;# 
   859  0011                     	;# 
   860  0012                     	;# 
   861  0013                     	;# 
   862  0014                     	;# 
   863  0015                     	;# 
   864  0015                     	;# 
   865  0016                     	;# 
   866  0017                     	;# 
   867  0018                     	;# 
   868  0019                     	;# 
   869  001A                     	;# 
   870  001B                     	;# 
   871  001B                     	;# 
   872  001C                     	;# 
   873  001D                     	;# 
   874  001E                     	;# 
   875  001F                     	;# 
   876  0081                     	;# 
   877  0085                     	;# 
   878  0086                     	;# 
   879  0087                     	;# 
   880  0088                     	;# 
   881  0089                     	;# 
   882  008C                     	;# 
   883  008D                     	;# 
   884  008E                     	;# 
   885  008F                     	;# 
   886  0090                     	;# 
   887  0091                     	;# 
   888  0092                     	;# 
   889  0093                     	;# 
   890  0093                     	;# 
   891  0093                     	;# 
   892  0094                     	;# 
   893  0095                     	;# 
   894  0096                     	;# 
   895  0097                     	;# 
   896  0098                     	;# 
   897  0099                     	;# 
   898  009A                     	;# 
   899  009B                     	;# 
   900  009C                     	;# 
   901  009D                     	;# 
   902  009E                     	;# 
   903  009F                     	;# 
   904  0105                     	;# 
   905  0107                     	;# 
   906  0108                     	;# 
   907  0109                     	;# 
   908  010C                     	;# 
   909  010C                     	;# 
   910  010D                     	;# 
   911  010E                     	;# 
   912  010F                     	;# 
   913  0185                     	;# 
   914  0187                     	;# 
   915  0188                     	;# 
   916  0189                     	;# 
   917  018C                     	;# 
   918  018D                     	;# 
   919  0000                     	;# 
   920  0001                     	;# 
   921  0002                     	;# 
   922  0003                     	;# 
   923  0004                     	;# 
   924  0005                     	;# 
   925  0006                     	;# 
   926  0007                     	;# 
   927  0008                     	;# 
   928  0009                     	;# 
   929  000A                     	;# 
   930  000B                     	;# 
   931  000C                     	;# 
   932  000D                     	;# 
   933  000E                     	;# 
   934  000E                     	;# 
   935  000F                     	;# 
   936  0010                     	;# 
   937  0011                     	;# 
   938  0012                     	;# 
   939  0013                     	;# 
   940  0014                     	;# 
   941  0015                     	;# 
   942  0015                     	;# 
   943  0016                     	;# 
   944  0017                     	;# 
   945  0018                     	;# 
   946  0019                     	;# 
   947  001A                     	;# 
   948  001B                     	;# 
   949  001B                     	;# 
   950  001C                     	;# 
   951  001D                     	;# 
   952  001E                     	;# 
   953  001F                     	;# 
   954  0081                     	;# 
   955  0085                     	;# 
   956  0086                     	;# 
   957  0087                     	;# 
   958  0088                     	;# 
   959  0089                     	;# 
   960  008C                     	;# 
   961  008D                     	;# 
   962  008E                     	;# 
   963  008F                     	;# 
   964  0090                     	;# 
   965  0091                     	;# 
   966  0092                     	;# 
   967  0093                     	;# 
   968  0093                     	;# 
   969  0093                     	;# 
   970  0094                     	;# 
   971  0095                     	;# 
   972  0096                     	;# 
   973  0097                     	;# 
   974  0098                     	;# 
   975  0099                     	;# 
   976  009A                     	;# 
   977  009B                     	;# 
   978  009C                     	;# 
   979  009D                     	;# 
   980  009E                     	;# 
   981  009F                     	;# 
   982  0105                     	;# 
   983  0107                     	;# 
   984  0108                     	;# 
   985  0109                     	;# 
   986  010C                     	;# 
   987  010C                     	;# 
   988  010D                     	;# 
   989  010E                     	;# 
   990  010F                     	;# 
   991  0185                     	;# 
   992  0187                     	;# 
   993  0188                     	;# 
   994  0189                     	;# 
   995  018C                     	;# 
   996  018D                     	;# 
   997  0000                     	;# 
   998  0001                     	;# 
   999  0002                     	;# 
  1000  0003                     	;# 
  1001  0004                     	;# 
  1002  0005                     	;# 
  1003  0006                     	;# 
  1004  0007                     	;# 
  1005  0008                     	;# 
  1006  0009                     	;# 
  1007  000A                     	;# 
  1008  000B                     	;# 
  1009  000C                     	;# 
  1010  000D                     	;# 
  1011  000E                     	;# 
  1012  000E                     	;# 
  1013  000F                     	;# 
  1014  0010                     	;# 
  1015  0011                     	;# 
  1016  0012                     	;# 
  1017  0013                     	;# 
  1018  0014                     	;# 
  1019  0015                     	;# 
  1020  0015                     	;# 
  1021  0016                     	;# 
  1022  0017                     	;# 
  1023  0018                     	;# 
  1024  0019                     	;# 
  1025  001A                     	;# 
  1026  001B                     	;# 
  1027  001B                     	;# 
  1028  001C                     	;# 
  1029  001D                     	;# 
  1030  001E                     	;# 
  1031  001F                     	;# 
  1032  0081                     	;# 
  1033  0085                     	;# 
  1034  0086                     	;# 
  1035  0087                     	;# 
  1036  0088                     	;# 
  1037  0089                     	;# 
  1038  008C                     	;# 
  1039  008D                     	;# 
  1040  008E                     	;# 
  1041  008F                     	;# 
  1042  0090                     	;# 
  1043  0091                     	;# 
  1044  0092                     	;# 
  1045  0093                     	;# 
  1046  0093                     	;# 
  1047  0093                     	;# 
  1048  0094                     	;# 
  1049  0095                     	;# 
  1050  0096                     	;# 
  1051  0097                     	;# 
  1052  0098                     	;# 
  1053  0099                     	;# 
  1054  009A                     	;# 
  1055  009B                     	;# 
  1056  009C                     	;# 
  1057  009D                     	;# 
  1058  009E                     	;# 
  1059  009F                     	;# 
  1060  0105                     	;# 
  1061  0107                     	;# 
  1062  0108                     	;# 
  1063  0109                     	;# 
  1064  010C                     	;# 
  1065  010C                     	;# 
  1066  010D                     	;# 
  1067  010E                     	;# 
  1068  010F                     	;# 
  1069  0185                     	;# 
  1070  0187                     	;# 
  1071  0188                     	;# 
  1072  0189                     	;# 
  1073  018C                     	;# 
  1074  018D                     	;# 
  1075                           
  1076 ;; Function _buscar_receita is unused but had its address taken
  1077  0000                     
  1078 ;; Function _deletar_receita is unused but had its address taken
  1079  0000                     
  1080 ;; Function _receita_livre is unused but had its address taken
  1081  0000                     
  1082 ;; Function _formatar_receitas is unused but had its address taken
  1083  0000                     
  1084 ;; Function _rxEUSART is unused but had its address taken
  1085  0000                     
  1086 ;; Function _rxStatusEUSART is unused but had its address taken
  1087  0000                     
  1088 ;; Function _rxErrorEUSART is unused but had its address taken
  1089  0000                     
  1090 ;; Function _rxResetErrorEUSART is unused but had its address taken
  1091  0000                     
  1092 ;; Function _search is unused but had its address taken
  1093  0000                     
  1094 ;; Function _wifi_receive is unused but had its address taken
  1095  0000                     
  1096 ;; Function _Wifi_connect is unused but had its address taken
  1097  0000                     
  1098 ;; Function _Wifi_scan is unused but had its address taken
  1099  0000                     
  1100 ;; Function _Wifi_ip is unused but had its address taken
  1101  0000                     
  1102 ;; Function _Wifi_autoconnect is unused but had its address taken
  1103  0000                     
  1104 ;; Function _Wifi_config_servidor is unused but had its address taken
  1105  0000                     
  1106 ;; Function _Wifi_cipsend is unused but had its address taken
  1107  0000                     
  1108                           	psect	idataCOMMON
  1109  0003                     __pidataCOMMON:
  1110                           
  1111                           ;initializer for _indice_passos
  1112  0003  3402               	retlw	2
  1113                           
  1114                           	psect	idataBANK0
  1115  1A1B                     __pidataBANK0:
  1116                           
  1117                           ;initializer for _eusart
  1118  1A1B  3400               	retlw	0
  1119  1A1C  3400               	retlw	0
  1120  1A1D  3400               	retlw	0
  1121  1A1E  3400               	retlw	0
  1122  1A1F  3401               	retlw	low (fp__txEUSART-fpbase)
  1123  1A20  3404               	retlw	low (fp__txStatusEUSART-fpbase)
  1124  1A21  341F               	retlw	low (fp__initEUSART-fpbase)
  1125  1A22  3400               	retlw	0
  1126                           
  1127                           ;initializer for _ind_print
  1128  1A23  3402               	retlw	2
  1129                           
  1130                           ;initializer for _ind_fila
  1131  1A24  3402               	retlw	2
  1132                           
  1133                           	psect	idataBANK1
  1134  1A11                     __pidataBANK1:
  1135                           
  1136                           ;initializer for _IHM
  1137  1A11  3413               	retlw	low (fp__dispLCD_init-fpbase)
  1138  1A12  3416               	retlw	low (fp__dispLCD_str-fpbase)
  1139  1A13  340D               	retlw	low (fp__dispLCD-fpbase)
  1140  1A14  3419               	retlw	low (fp__dispLCD_num-fpbase)
  1141  1A15  3410               	retlw	low (fp__dispLCD_clr-fpbase)
  1142                           
  1143                           ;initializer for _EEPROM
  1144  1A16  341C               	retlw	low (fp__salvar_receita-fpbase)
  1145  1A17  3400               	retlw	0
  1146  1A18  3400               	retlw	0
  1147  1A19  3400               	retlw	0
  1148  1A1A  3400               	retlw	0
  1149                           
  1150                           	psect	idataBANK2
  1151  1BF4                     __pidataBANK2:
  1152                           
  1153                           ;initializer for Wifi_connect@F1388
  1154  1BF4  3441               	retlw	65
  1155  1BF5  3454               	retlw	84
  1156  1BF6  342B               	retlw	43
  1157  1BF7  3443               	retlw	67
  1158  1BF8  3457               	retlw	87
  1159  1BF9  344A               	retlw	74
  1160  1BFA  3441               	retlw	65
  1161  1BFB  3450               	retlw	80
  1162  1BFC  343D               	retlw	61
  1163  1BFD  3422               	retlw	34
  1164  1BFE  3400               	retlw	0
  1165  1BFF  3400               	retlw	0
  1166  1C00  3400               	retlw	0
  1167  1C01  3400               	retlw	0
  1168  1C02  3400               	retlw	0
  1169  1C03  3400               	retlw	0
  1170  1C04  3400               	retlw	0
  1171  1C05  3400               	retlw	0
  1172  1C06  3400               	retlw	0
  1173  1C07  3400               	retlw	0
  1174  1C08  3400               	retlw	0
  1175  1C09  3400               	retlw	0
  1176  1C0A  3400               	retlw	0
  1177  1C0B  3400               	retlw	0
  1178  1C0C  3400               	retlw	0
  1179  1C0D  3400               	retlw	0
  1180  1C0E  3400               	retlw	0
  1181  1C0F  3400               	retlw	0
  1182  1C10  3400               	retlw	0
  1183  1C11  3400               	retlw	0
  1184  1C12  3400               	retlw	0
  1185  1C13  3400               	retlw	0
  1186  1C14  3400               	retlw	0
  1187  1C15  3400               	retlw	0
  1188  1C16  3400               	retlw	0
  1189  1C17  3400               	retlw	0
  1190  1C18  3400               	retlw	0
  1191  1C19  3400               	retlw	0
  1192  1C1A  3400               	retlw	0
  1193  1C1B  3400               	retlw	0
  1194                           
  1195                           	psect	idataBANK3
  1196  1390                     __pidataBANK3:
  1197                           
  1198                           ;initializer for Wifi_cipsend@F1398
  1199  1390  3441               	retlw	65
  1200  1391  3454               	retlw	84
  1201  1392  342B               	retlw	43
  1202  1393  3443               	retlw	67
  1203  1394  3449               	retlw	73
  1204  1395  3450               	retlw	80
  1205  1396  3453               	retlw	83
  1206  1397  3445               	retlw	69
  1207  1398  344E               	retlw	78
  1208  1399  3444               	retlw	68
  1209  139A  343D               	retlw	61
  1210  139B  3422               	retlw	34
  1211  139C  3400               	retlw	0
  1212  139D  3400               	retlw	0
  1213  139E  3400               	retlw	0
  1214  139F  3400               	retlw	0
  1215  13A0  3400               	retlw	0
  1216  13A1  3400               	retlw	0
  1217  13A2  3400               	retlw	0
  1218  13A3  3400               	retlw	0
  1219  13A4  3400               	retlw	0
  1220  13A5  3400               	retlw	0
  1221  13A6  3400               	retlw	0
  1222  13A7  3400               	retlw	0
  1223  13A8  3400               	retlw	0
  1224  13A9  3400               	retlw	0
  1225  13AA  3400               	retlw	0
  1226  13AB  3400               	retlw	0
  1227  13AC  3400               	retlw	0
  1228  13AD  3400               	retlw	0
  1229                           
  1230                           ;initializer for main@F1614
  1231  13AE  344D               	retlw	77
  1232  13AF  3475               	retlw	117
  1233  13B0  346E               	retlw	110
  1234  13B1  3464               	retlw	100
  1235  13B2  346F               	retlw	111
  1236  13B3  3420               	retlw	32
  1237  13B4  3461               	retlw	97
  1238  13B5  346F               	retlw	111
  1239  13B6  3420               	retlw	32
  1240  13B7  3473               	retlw	115
  1241  13B8  3465               	retlw	101
  1242  13B9  3475               	retlw	117
  1243  13BA  3420               	retlw	32
  1244  13BB  3463               	retlw	99
  1245  13BC  346F               	retlw	111
  1246  13BD  346D               	retlw	109
  1247  13BE  3461               	retlw	97
  1248  13BF  346E               	retlw	110
  1249  13C0  3464               	retlw	100
  1250  13C1  346F               	retlw	111
  1251                           
  1252                           ;initializer for _teclas
  1253  13C2  3431               	retlw	49
  1254  13C3  3432               	retlw	50
  1255  13C4  3433               	retlw	51
  1256  13C5  3441               	retlw	65
  1257  13C6  3434               	retlw	52
  1258  13C7  3435               	retlw	53
  1259  13C8  3436               	retlw	54
  1260  13C9  3442               	retlw	66
  1261  13CA  3437               	retlw	55
  1262  13CB  3438               	retlw	56
  1263  13CC  3439               	retlw	57
  1264  13CD  3443               	retlw	67
  1265  13CE  342A               	retlw	42
  1266  13CF  3430               	retlw	48
  1267  13D0  3423               	retlw	35
  1268  13D1  3444               	retlw	68
  1269                           
  1270                           ;initializer for _wifi
  1271  13D2  3422               	retlw	low (fp__wifi_init-fpbase)
  1272  13D3  3407               	retlw	low (fp__wifi_send-fpbase)
  1273  13D4  3400               	retlw	0
  1274  13D5  340A               	retlw	low (fp__Wifi_mode-fpbase)
  1275  13D6  3400               	retlw	0
  1276  13D7  3400               	retlw	0
  1277  13D8  3400               	retlw	0
  1278  13D9  3400               	retlw	0
  1279  13DA  3400               	retlw	0
  1280  13DB  3400               	retlw	0
  1281  0019                     _TXREG	set	25
  1282  0018                     _RCSTAbits	set	24
  1283  001A                     _RCREG	set	26
  1284  0013                     _SSPBUF	set	19
  1285  0014                     _SSPCONbits	set	20
  1286  000C                     _PIR1bits	set	12
  1287  0010                     _T1CONbits	set	16
  1288  000E                     _TMR1L	set	14
  1289  000F                     _TMR1H	set	15
  1290  0008                     _PORTD	set	8
  1291  0005                     _SERIALIO	set	5
  1292  0005                     _PORTAbits	set	5
  1293  000B                     _INTCONbits	set	11
  1294  0006                     _LCDbits	set	6
  1295  0099                     _SPBRbits	set	153
  1296  0098                     _TXSTAbits	set	152
  1297  0091                     _SSPCON2bits	set	145
  1298  0094                     _SSPSTATbits	set	148
  1299  0093                     _SSPADD	set	147
  1300  0087                     _TRISCbits	set	135
  1301  008C                     _PIE1bits	set	140
  1302  0088                     _TRISD	set	136
  1303  0085                     _TRISAbits	set	133
  1304  0086                     _TRISBbits	set	134
  1305  010C                     _EEDAT	set	268
  1306  010D                     _EEADR	set	269
  1307  010F                     _EEADRH	set	271
  1308  0187                     _BAUDCTLbits	set	391
  1309  0188                     _ANSELbits	set	392
  1310  018D                     _EECON2	set	397
  1311  018C                     _EECON1bits	set	396
  1312  0189                     _ANSELH	set	393
  1313                           
  1314                           	psect	strings
  1315  1800                     __pstrings:
  1316  1800                     stringtab:
  1317  1800                     __stringtab:
  1318                           
  1319                           ;	String table - string pointers are 2 bytes each
  1320  1800  1BFF               	btfsc	btemp+1,7
  1321  1801  280A               	ljmp	stringcode
  1322  1802  1383               	bcf	3,7
  1323  1803  187F               	btfsc	btemp+1,0
  1324  1804  1783               	bsf	3,7
  1325  1805  0800               	movf	0,w
  1326  1806  0A84               	incf	4,f
  1327  1807  1903               	skipnz
  1328  1808  0AFF               	incf	btemp+1,f
  1329  1809  0008               	return
  1330  180A                     stringcode:
  1331  180A  087F               	movf	btemp+1,w
  1332  180B  397F               	andlw	127
  1333  180C  008A               	movwf	10
  1334  180D  0804               	movf	4,w
  1335  180E  0A84               	incf	4,f
  1336  180F  1903               	skipnz
  1337  1810  0AFF               	incf	btemp+1,f
  1338  1811  0082               	movwf	2
  1339  1812                     __stringbase:
  1340  1812                     __end_of__stringtab:
  1341                           
  1342                           	psect	stringtext
  1343  1000                     __pstringtext:
  1344  1000                     STR_4:
  1345  1000  3431               	retlw	49	;'1'
  1346  1001  343A               	retlw	58	;':'
  1347  1002  3420               	retlw	32	;' '
  1348  1003  3449               	retlw	73	;'I'
  1349  1004  344E               	retlw	78	;'N'
  1350  1005  3453               	retlw	83	;'S'
  1351  1006  3445               	retlw	69	;'E'
  1352  1007  3452               	retlw	82	;'R'
  1353  1008  3449               	retlw	73	;'I'
  1354  1009  3452               	retlw	82	;'R'
  1355  100A  3420               	retlw	32	;' '
  1356  100B  3453               	retlw	83	;'S'
  1357  100C  3445               	retlw	69	;'E'
  1358  100D  3451               	retlw	81	;'Q'
  1359  100E  3455               	retlw	85	;'U'
  1360  100F  3445               	retlw	69	;'E'
  1361  1010  344E               	retlw	78	;'N'
  1362  1011  3443               	retlw	67	;'C'
  1363  1012  3449               	retlw	73	;'I'
  1364  1013  3441               	retlw	65	;'A'
  1365  1014  340A               	retlw	10
  1366  1015  3432               	retlw	50	;'2'
  1367  1016  343A               	retlw	58	;':'
  1368  1017  3420               	retlw	32	;' '
  1369  1018  3442               	retlw	66	;'B'
  1370  1019  3455               	retlw	85	;'U'
  1371  101A  3453               	retlw	83	;'S'
  1372  101B  3443               	retlw	67	;'C'
  1373  101C  3441               	retlw	65	;'A'
  1374  101D  3452               	retlw	82	;'R'
  1375  101E  3420               	retlw	32	;' '
  1376  101F  3453               	retlw	83	;'S'
  1377  1020  3445               	retlw	69	;'E'
  1378  1021  3451               	retlw	81	;'Q'
  1379  1022  3455               	retlw	85	;'U'
  1380  1023  3445               	retlw	69	;'E'
  1381  1024  344E               	retlw	78	;'N'
  1382  1025  3443               	retlw	67	;'C'
  1383  1026  3449               	retlw	73	;'I'
  1384  1027  3441               	retlw	65	;'A'
  1385  1028  340A               	retlw	10
  1386  1029  3433               	retlw	51	;'3'
  1387  102A  343A               	retlw	58	;':'
  1388  102B  3420               	retlw	32	;' '
  1389  102C  3452               	retlw	82	;'R'
  1390  102D  3445               	retlw	69	;'E'
  1391  102E  3450               	retlw	80	;'P'
  1392  102F  3445               	retlw	69	;'E'
  1393  1030  3454               	retlw	84	;'T'
  1394  1031  3449               	retlw	73	;'I'
  1395  1032  3452               	retlw	82	;'R'
  1396  1033  3420               	retlw	32	;' '
  1397  1034  3455               	retlw	85	;'U'
  1398  1035  344C               	retlw	76	;'L'
  1399  1036  3454               	retlw	84	;'T'
  1400  1037  342E               	retlw	46	;'.'
  1401  1038  3420               	retlw	32	;' '
  1402  1039  3453               	retlw	83	;'S'
  1403  103A  3445               	retlw	69	;'E'
  1404  103B  3451               	retlw	81	;'Q'
  1405  103C  3455               	retlw	85	;'U'
  1406  103D  340A               	retlw	10
  1407  103E  3434               	retlw	52	;'4'
  1408  103F  343A               	retlw	58	;':'
  1409  1040  3420               	retlw	32	;' '
  1410  1041  3443               	retlw	67	;'C'
  1411  1042  344F               	retlw	79	;'O'
  1412  1043  344E               	retlw	78	;'N'
  1413  1044  3446               	retlw	70	;'F'
  1414  1045  3449               	retlw	73	;'I'
  1415  1046  3447               	retlw	71	;'G'
  1416  1047  3455               	retlw	85	;'U'
  1417  1048  3452               	retlw	82	;'R'
  1418  1049  3441               	retlw	65	;'A'
  1419  104A  3443               	retlw	67	;'C'
  1420  104B  344F               	retlw	79	;'O'
  1421  104C  3445               	retlw	69	;'E'
  1422  104D  3453               	retlw	83	;'S'
  1423  104E  3420               	retlw	32	;' '
  1424  104F  3420               	retlw	32	;' '
  1425  1050  3420               	retlw	32	;' '
  1426  1051  3420               	retlw	32	;' '
  1427  1052  3400               	retlw	0
  1428  1053                     STR_16:
  1429  1053  3420               	retlw	32	;' '
  1430  1054  3445               	retlw	69	;'E'
  1431  1055  3453               	retlw	83	;'S'
  1432  1056  3443               	retlw	67	;'C'
  1433  1057  344F               	retlw	79	;'O'
  1434  1058  344C               	retlw	76	;'L'
  1435  1059  3448               	retlw	72	;'H'
  1436  105A  3441               	retlw	65	;'A'
  1437  105B  3420               	retlw	32	;' '
  1438  105C  3441               	retlw	65	;'A'
  1439  105D  3420               	retlw	32	;' '
  1440  105E  344D               	retlw	77	;'M'
  1441  105F  3445               	retlw	69	;'E'
  1442  1060  344D               	retlw	77	;'M'
  1443  1061  344F               	retlw	79	;'O'
  1444  1062  3452               	retlw	82	;'R'
  1445  1063  3449               	retlw	73	;'I'
  1446  1064  3441               	retlw	65	;'A'
  1447  1065  340A               	retlw	10
  1448  1066  3420               	retlw	32	;' '
  1449  1067  3451               	retlw	81	;'Q'
  1450  1068  3455               	retlw	85	;'U'
  1451  1069  3445               	retlw	69	;'E'
  1452  106A  3420               	retlw	32	;' '
  1453  106B  3444               	retlw	68	;'D'
  1454  106C  3445               	retlw	69	;'E'
  1455  106D  3453               	retlw	83	;'S'
  1456  106E  3445               	retlw	69	;'E'
  1457  106F  344A               	retlw	74	;'J'
  1458  1070  3441               	retlw	65	;'A'
  1459  1071  3420               	retlw	32	;' '
  1460  1072  3453               	retlw	83	;'S'
  1461  1073  3441               	retlw	65	;'A'
  1462  1074  344C               	retlw	76	;'L'
  1463  1075  3456               	retlw	86	;'V'
  1464  1076  3441               	retlw	65	;'A'
  1465  1077  3452               	retlw	82	;'R'
  1466  1078  340A               	retlw	10
  1467  1079  3420               	retlw	32	;' '
  1468  107A  3430               	retlw	48	;'0'
  1469  107B  3420               	retlw	32	;' '
  1470  107C  3420               	retlw	32	;' '
  1471  107D  3420               	retlw	32	;' '
  1472  107E  3431               	retlw	49	;'1'
  1473  107F  3420               	retlw	32	;' '
  1474  1080  3420               	retlw	32	;' '
  1475  1081  3420               	retlw	32	;' '
  1476  1082  3432               	retlw	50	;'2'
  1477  1083  3420               	retlw	32	;' '
  1478  1084  3420               	retlw	32	;' '
  1479  1085  3420               	retlw	32	;' '
  1480  1086  3433               	retlw	51	;'3'
  1481  1087  3420               	retlw	32	;' '
  1482  1088  3420               	retlw	32	;' '
  1483  1089  3420               	retlw	32	;' '
  1484  108A  3434               	retlw	52	;'4'
  1485  108B  340A               	retlw	10
  1486  108C  3420               	retlw	32	;' '
  1487  108D  3435               	retlw	53	;'5'
  1488  108E  3420               	retlw	32	;' '
  1489  108F  3420               	retlw	32	;' '
  1490  1090  3420               	retlw	32	;' '
  1491  1091  3436               	retlw	54	;'6'
  1492  1092  3420               	retlw	32	;' '
  1493  1093  3420               	retlw	32	;' '
  1494  1094  3420               	retlw	32	;' '
  1495  1095  3437               	retlw	55	;'7'
  1496  1096  3420               	retlw	32	;' '
  1497  1097  3420               	retlw	32	;' '
  1498  1098  3420               	retlw	32	;' '
  1499  1099  3438               	retlw	56	;'8'
  1500  109A  3420               	retlw	32	;' '
  1501  109B  3420               	retlw	32	;' '
  1502  109C  3420               	retlw	32	;' '
  1503  109D  3439               	retlw	57	;'9'
  1504  109E  3420               	retlw	32	;' '
  1505  109F  3420               	retlw	32	;' '
  1506  10A0  3400               	retlw	0
  1507  10A1                     STR_15:
  1508  10A1  3420               	retlw	32	;' '
  1509  10A2  3420               	retlw	32	;' '
  1510  10A3  3420               	retlw	32	;' '
  1511  10A4  3420               	retlw	32	;' '
  1512  10A5  3444               	retlw	68	;'D'
  1513  10A6  3445               	retlw	69	;'E'
  1514  10A7  3453               	retlw	83	;'S'
  1515  10A8  3445               	retlw	69	;'E'
  1516  10A9  344A               	retlw	74	;'J'
  1517  10AA  3441               	retlw	65	;'A'
  1518  10AB  3420               	retlw	32	;' '
  1519  10AC  3453               	retlw	83	;'S'
  1520  10AD  3441               	retlw	65	;'A'
  1521  10AE  344C               	retlw	76	;'L'
  1522  10AF  3456               	retlw	86	;'V'
  1523  10B0  3441               	retlw	65	;'A'
  1524  10B1  3452               	retlw	82	;'R'
  1525  10B2  3420               	retlw	32	;' '
  1526  10B3  3420               	retlw	32	;' '
  1527  10B4  3420               	retlw	32	;' '
  1528  10B5  340A               	retlw	10
  1529  10B6  3420               	retlw	32	;' '
  1530  10B7  3420               	retlw	32	;' '
  1531  10B8  3420               	retlw	32	;' '
  1532  10B9  3420               	retlw	32	;' '
  1533  10BA  3420               	retlw	32	;' '
  1534  10BB  3453               	retlw	83	;'S'
  1535  10BC  3445               	retlw	69	;'E'
  1536  10BD  3451               	retlw	81	;'Q'
  1537  10BE  3455               	retlw	85	;'U'
  1538  10BF  3445               	retlw	69	;'E'
  1539  10C0  344E               	retlw	78	;'N'
  1540  10C1  3443               	retlw	67	;'C'
  1541  10C2  3449               	retlw	73	;'I'
  1542  10C3  3441               	retlw	65	;'A'
  1543  10C4  3420               	retlw	32	;' '
  1544  10C5  343F               	retlw	63	;'?'
  1545  10C6  3420               	retlw	32	;' '
  1546  10C7  3420               	retlw	32	;' '
  1547  10C8  340A               	retlw	10
  1548  10C9  340A               	retlw	10
  1549  10CA  3423               	retlw	35	;'#'
  1550  10CB  3420               	retlw	32	;' '
  1551  10CC  342D               	retlw	45	;'-'
  1552  10CD  3420               	retlw	32	;' '
  1553  10CE  3453               	retlw	83	;'S'
  1554  10CF  3449               	retlw	73	;'I'
  1555  10D0  344D               	retlw	77	;'M'
  1556  10D1  3420               	retlw	32	;' '
  1557  10D2  3420               	retlw	32	;' '
  1558  10D3  3420               	retlw	32	;' '
  1559  10D4  3420               	retlw	32	;' '
  1560  10D5  3420               	retlw	32	;' '
  1561  10D6  3420               	retlw	32	;' '
  1562  10D7  342A               	retlw	42	;'*'
  1563  10D8  3420               	retlw	32	;' '
  1564  10D9  342D               	retlw	45	;'-'
  1565  10DA  3420               	retlw	32	;' '
  1566  10DB  344E               	retlw	78	;'N'
  1567  10DC  3441               	retlw	65	;'A'
  1568  10DD  344F               	retlw	79	;'O'
  1569  10DE  3400               	retlw	0
  1570  10DF                     STR_24:
  1571  10DF  3441               	retlw	65	;'A'
  1572  10E0  3454               	retlw	84	;'T'
  1573  10E1  342B               	retlw	43	;'+'
  1574  10E2  3443               	retlw	67	;'C'
  1575  10E3  3457               	retlw	87	;'W'
  1576  10E4  3453               	retlw	83	;'S'
  1577  10E5  3441               	retlw	65	;'A'
  1578  10E6  3450               	retlw	80	;'P'
  1579  10E7  343D               	retlw	61	;'='
  1580  10E8  3422               	retlw	34	;'"'
  1581  10E9  3457               	retlw	87	;'W'
  1582  10EA  3469               	retlw	105	;'i'
  1583  10EB  3472               	retlw	114	;'r'
  1584  10EC  3465               	retlw	101	;'e'
  1585  10ED  346C               	retlw	108	;'l'
  1586  10EE  3465               	retlw	101	;'e'
  1587  10EF  3473               	retlw	115	;'s'
  1588  10F0  3473               	retlw	115	;'s'
  1589  10F1  3422               	retlw	34	;'"'
  1590  10F2  342C               	retlw	44	;','
  1591  10F3  3422               	retlw	34	;'"'
  1592  10F4  342A               	retlw	42	;'*'
  1593  10F5  342A               	retlw	42	;'*'
  1594  10F6  342A               	retlw	42	;'*'
  1595  10F7  342A               	retlw	42	;'*'
  1596  10F8  342A               	retlw	42	;'*'
  1597  10F9  342A               	retlw	42	;'*'
  1598  10FA  342A               	retlw	42	;'*'
  1599  10FB  342A               	retlw	42	;'*'
  1600  10FC  3422               	retlw	34	;'"'
  1601  10FD  342C               	retlw	44	;','
  1602  10FE  3431               	retlw	49	;'1'
  1603  10FF  342C               	retlw	44	;','
  1604  1100  3432               	retlw	50	;'2'
  1605  1101  342C               	retlw	44	;','
  1606  1102  3434               	retlw	52	;'4'
  1607  1103  342C               	retlw	44	;','
  1608  1104  3430               	retlw	48	;'0'
  1609  1105  340D               	retlw	13
  1610  1106  340A               	retlw	10
  1611  1107  3400               	retlw	0
  1612  1108                     STR_34:
  1613  1108  3441               	retlw	65	;'A'
  1614  1109  3454               	retlw	84	;'T'
  1615  110A  342B               	retlw	43	;'+'
  1616  110B  3443               	retlw	67	;'C'
  1617  110C  3449               	retlw	73	;'I'
  1618  110D  3450               	retlw	80	;'P'
  1619  110E  3453               	retlw	83	;'S'
  1620  110F  3454               	retlw	84	;'T'
  1621  1110  3441               	retlw	65	;'A'
  1622  1111  3452               	retlw	82	;'R'
  1623  1112  3454               	retlw	84	;'T'
  1624  1113  343D               	retlw	61	;'='
  1625  1114  3422               	retlw	34	;'"'
  1626  1115  3454               	retlw	84	;'T'
  1627  1116  3443               	retlw	67	;'C'
  1628  1117  3450               	retlw	80	;'P'
  1629  1118  3422               	retlw	34	;'"'
  1630  1119  342C               	retlw	44	;','
  1631  111A  3422               	retlw	34	;'"'
  1632  111B  3431               	retlw	49	;'1'
  1633  111C  3439               	retlw	57	;'9'
  1634  111D  3432               	retlw	50	;'2'
  1635  111E  342E               	retlw	46	;'.'
  1636  111F  3431               	retlw	49	;'1'
  1637  1120  3436               	retlw	54	;'6'
  1638  1121  3438               	retlw	56	;'8'
  1639  1122  342E               	retlw	46	;'.'
  1640  1123  3434               	retlw	52	;'4'
  1641  1124  342E               	retlw	46	;'.'
  1642  1125  3431               	retlw	49	;'1'
  1643  1126  3422               	retlw	34	;'"'
  1644  1127  342C               	retlw	44	;','
  1645  1128  3422               	retlw	34	;'"'
  1646  1129  3433               	retlw	51	;'3'
  1647  112A  3433               	retlw	51	;'3'
  1648  112B  3433               	retlw	51	;'3'
  1649  112C  3422               	retlw	34	;'"'
  1650  112D  340D               	retlw	13
  1651  112E  340A               	retlw	10
  1652  112F  3400               	retlw	0
  1653  1130                     STR_33:
  1654  1130  3441               	retlw	65	;'A'
  1655  1131  3454               	retlw	84	;'T'
  1656  1132  342B               	retlw	43	;'+'
  1657  1133  3443               	retlw	67	;'C'
  1658  1134  3449               	retlw	73	;'I'
  1659  1135  3450               	retlw	80	;'P'
  1660  1136  3453               	retlw	83	;'S'
  1661  1137  3445               	retlw	69	;'E'
  1662  1138  3452               	retlw	82	;'R'
  1663  1139  3456               	retlw	86	;'V'
  1664  113A  3445               	retlw	69	;'E'
  1665  113B  3452               	retlw	82	;'R'
  1666  113C  343D               	retlw	61	;'='
  1667  113D  3431               	retlw	49	;'1'
  1668  113E  342C               	retlw	44	;','
  1669  113F  3433               	retlw	51	;'3'
  1670  1140  3433               	retlw	51	;'3'
  1671  1141  3433               	retlw	51	;'3'
  1672  1142  340D               	retlw	13
  1673  1143  340A               	retlw	10
  1674  1144  3400               	retlw	0
  1675  1145                     STR_13:
  1676  1145  3443               	retlw	67	;'C'
  1677  1146  3469               	retlw	105	;'i'
  1678  1147  3463               	retlw	99	;'c'
  1679  1148  346C               	retlw	108	;'l'
  1680  1149  346F               	retlw	111	;'o'
  1681  114A  3473               	retlw	115	;'s'
  1682  114B  343A               	retlw	58	;':'
  1683  114C  3420               	retlw	32	;' '
  1684  114D  3420               	retlw	32	;' '
  1685  114E  3420               	retlw	32	;' '
  1686  114F  3420               	retlw	32	;' '
  1687  1150  3420               	retlw	32	;' '
  1688  1151  3420               	retlw	32	;' '
  1689  1152  3420               	retlw	32	;' '
  1690  1153  3420               	retlw	32	;' '
  1691  1154  3420               	retlw	32	;' '
  1692  1155  3420               	retlw	32	;' '
  1693  1156  3420               	retlw	32	;' '
  1694  1157  3420               	retlw	32	;' '
  1695  1158  3420               	retlw	32	;' '
  1696  1159  3400               	retlw	0
  1697  115A                     STR_11:
  1698  115A  343C               	retlw	60	;'<'
  1699  115B  3420               	retlw	32	;' '
  1700  115C  3420               	retlw	32	;' '
  1701  115D  342F               	retlw	47	;'/'
  1702  115E  3420               	retlw	32	;' '
  1703  115F  3420               	retlw	32	;' '
  1704  1160  343E               	retlw	62	;'>'
  1705  1161  3420               	retlw	32	;' '
  1706  1162  3463               	retlw	99	;'c'
  1707  1163  343A               	retlw	58	;':'
  1708  1164  3420               	retlw	32	;' '
  1709  1165  3420               	retlw	32	;' '
  1710  1166  3420               	retlw	32	;' '
  1711  1167  3420               	retlw	32	;' '
  1712  1168  3420               	retlw	32	;' '
  1713  1169  3420               	retlw	32	;' '
  1714  116A  3420               	retlw	32	;' '
  1715  116B  3420               	retlw	32	;' '
  1716  116C  3420               	retlw	32	;' '
  1717  116D  3420               	retlw	32	;' '
  1718  116E  3400               	retlw	0
  1719  116F                     STR_20:
  1720  116F  3420               	retlw	32	;' '
  1721  1170  3420               	retlw	32	;' '
  1722  1171  3420               	retlw	32	;' '
  1723  1172  3420               	retlw	32	;' '
  1724  1173  3420               	retlw	32	;' '
  1725  1174  3420               	retlw	32	;' '
  1726  1175  3420               	retlw	32	;' '
  1727  1176  3420               	retlw	32	;' '
  1728  1177  3453               	retlw	83	;'S'
  1729  1178  3441               	retlw	65	;'A'
  1730  1179  344C               	retlw	76	;'L'
  1731  117A  3456               	retlw	86	;'V'
  1732  117B  3441               	retlw	65	;'A'
  1733  117C  3420               	retlw	32	;' '
  1734  117D  3420               	retlw	32	;' '
  1735  117E  3420               	retlw	32	;' '
  1736  117F  3420               	retlw	32	;' '
  1737  1180  3420               	retlw	32	;' '
  1738  1181  3420               	retlw	32	;' '
  1739  1182  3420               	retlw	32	;' '
  1740  1183  3400               	retlw	0
  1741  1184                     STR_3:
  1742  1184  3420               	retlw	32	;' '
  1743  1185  3420               	retlw	32	;' '
  1744  1186  3420               	retlw	32	;' '
  1745  1187  3420               	retlw	32	;' '
  1746  1188  3420               	retlw	32	;' '
  1747  1189  3420               	retlw	32	;' '
  1748  118A  3453               	retlw	83	;'S'
  1749  118B  3445               	retlw	69	;'E'
  1750  118C  3447               	retlw	71	;'G'
  1751  118D  3447               	retlw	71	;'G'
  1752  118E  3454               	retlw	84	;'T'
  1753  118F  3454               	retlw	84	;'T'
  1754  1190  3449               	retlw	73	;'I'
  1755  1191  3420               	retlw	32	;' '
  1756  1192  3420               	retlw	32	;' '
  1757  1193  3420               	retlw	32	;' '
  1758  1194  3420               	retlw	32	;' '
  1759  1195  3420               	retlw	32	;' '
  1760  1196  3420               	retlw	32	;' '
  1761  1197  3420               	retlw	32	;' '
  1762  1198  3400               	retlw	0
  1763  1199                     STR_10:
  1764  1199  3420               	retlw	32	;' '
  1765  119A  3420               	retlw	32	;' '
  1766  119B  3420               	retlw	32	;' '
  1767  119C  3420               	retlw	32	;' '
  1768  119D  3420               	retlw	32	;' '
  1769  119E  3420               	retlw	32	;' '
  1770  119F  3420               	retlw	32	;' '
  1771  11A0  345B               	retlw	91	;'['
  1772  11A1  3420               	retlw	32	;' '
  1773  11A2  3420               	retlw	32	;' '
  1774  11A3  3420               	retlw	32	;' '
  1775  11A4  3420               	retlw	32	;' '
  1776  11A5  345D               	retlw	93	;']'
  1777  11A6  3420               	retlw	32	;' '
  1778  11A7  3420               	retlw	32	;' '
  1779  11A8  3420               	retlw	32	;' '
  1780  11A9  3420               	retlw	32	;' '
  1781  11AA  3420               	retlw	32	;' '
  1782  11AB  3420               	retlw	32	;' '
  1783  11AC  3420               	retlw	32	;' '
  1784  11AD  3400               	retlw	0
  1785  11AE                     STR_19:
  1786  11AE  3420               	retlw	32	;' '
  1787  11AF  3420               	retlw	32	;' '
  1788  11B0  3420               	retlw	32	;' '
  1789  11B1  3420               	retlw	32	;' '
  1790  11B2  3420               	retlw	32	;' '
  1791  11B3  3420               	retlw	32	;' '
  1792  11B4  3453               	retlw	83	;'S'
  1793  11B5  3445               	retlw	69	;'E'
  1794  11B6  3451               	retlw	81	;'Q'
  1795  11B7  3455               	retlw	85	;'U'
  1796  11B8  3445               	retlw	69	;'E'
  1797  11B9  344E               	retlw	78	;'N'
  1798  11BA  3443               	retlw	67	;'C'
  1799  11BB  3449               	retlw	73	;'I'
  1800  11BC  3441               	retlw	65	;'A'
  1801  11BD  3420               	retlw	32	;' '
  1802  11BE  3420               	retlw	32	;' '
  1803  11BF  3420               	retlw	32	;' '
  1804  11C0  3420               	retlw	32	;' '
  1805  11C1  3420               	retlw	32	;' '
  1806  11C2  3400               	retlw	0
  1807  11C3                     STR_6:
  1808  11C3  3420               	retlw	32	;' '
  1809  11C4  3420               	retlw	32	;' '
  1810  11C5  3420               	retlw	32	;' '
  1811  11C6  3420               	retlw	32	;' '
  1812  11C7  3420               	retlw	32	;' '
  1813  11C8  3444               	retlw	68	;'D'
  1814  11C9  344F               	retlw	79	;'O'
  1815  11CA  3420               	retlw	32	;' '
  1816  11CB  3453               	retlw	83	;'S'
  1817  11CC  3449               	retlw	73	;'I'
  1818  11CD  3453               	retlw	83	;'S'
  1819  11CE  3454               	retlw	84	;'T'
  1820  11CF  3445               	retlw	69	;'E'
  1821  11D0  344D               	retlw	77	;'M'
  1822  11D1  3441               	retlw	65	;'A'
  1823  11D2  3420               	retlw	32	;' '
  1824  11D3  3420               	retlw	32	;' '
  1825  11D4  3420               	retlw	32	;' '
  1826  11D5  3420               	retlw	32	;' '
  1827  11D6  3420               	retlw	32	;' '
  1828  11D7  3400               	retlw	0
  1829  11D8                     STR_7:
  1830  11D8  3420               	retlw	32	;' '
  1831  11D9  3420               	retlw	32	;' '
  1832  11DA  3420               	retlw	32	;' '
  1833  11DB  3441               	retlw	65	;'A'
  1834  11DC  3420               	retlw	32	;' '
  1835  11DD  3420               	retlw	32	;' '
  1836  11DE  3420               	retlw	32	;' '
  1837  11DF  3442               	retlw	66	;'B'
  1838  11E0  3420               	retlw	32	;' '
  1839  11E1  3420               	retlw	32	;' '
  1840  11E2  3420               	retlw	32	;' '
  1841  11E3  3443               	retlw	67	;'C'
  1842  11E4  3420               	retlw	32	;' '
  1843  11E5  3420               	retlw	32	;' '
  1844  11E6  3420               	retlw	32	;' '
  1845  11E7  3444               	retlw	68	;'D'
  1846  11E8  3420               	retlw	32	;' '
  1847  11E9  3420               	retlw	32	;' '
  1848  11EA  3420               	retlw	32	;' '
  1849  11EB  3420               	retlw	32	;' '
  1850  11EC  3400               	retlw	0
  1851  11ED                     STR_5:
  1852  11ED  3420               	retlw	32	;' '
  1853  11EE  3420               	retlw	32	;' '
  1854  11EF  3420               	retlw	32	;' '
  1855  11F0  3441               	retlw	65	;'A'
  1856  11F1  344A               	retlw	74	;'J'
  1857  11F2  3455               	retlw	85	;'U'
  1858  11F3  3453               	retlw	83	;'S'
  1859  11F4  3454               	retlw	84	;'T'
  1860  11F5  3445               	retlw	69	;'E'
  1861  11F6  3420               	retlw	32	;' '
  1862  11F7  344F               	retlw	79	;'O'
  1863  11F8  3420               	retlw	32	;' '
  1864  11F9  3449               	retlw	73	;'I'
  1865  11FA  344E               	retlw	78	;'N'
  1866  11FB  3449               	retlw	73	;'I'
  1867  11FC  3443               	retlw	67	;'C'
  1868  11FD  3449               	retlw	73	;'I'
  1869  11FE  344F               	retlw	79	;'O'
  1870  11FF  3420               	retlw	32	;' '
  1871  1200  3420               	retlw	32	;' '
  1872  1201  3400               	retlw	0
  1873  1202                     STR_8:
  1874  1202  3420               	retlw	32	;' '
  1875  1203  3420               	retlw	32	;' '
  1876  1204  3449               	retlw	73	;'I'
  1877  1205  344E               	retlw	78	;'N'
  1878  1206  3453               	retlw	83	;'S'
  1879  1207  3449               	retlw	73	;'I'
  1880  1208  3452               	retlw	82	;'R'
  1881  1209  3441               	retlw	65	;'A'
  1882  120A  3420               	retlw	32	;' '
  1883  120B  344F               	retlw	79	;'O'
  1884  120C  3453               	retlw	83	;'S'
  1885  120D  3420               	retlw	32	;' '
  1886  120E  3450               	retlw	80	;'P'
  1887  120F  3441               	retlw	65	;'A'
  1888  1210  3453               	retlw	83	;'S'
  1889  1211  3453               	retlw	83	;'S'
  1890  1212  344F               	retlw	79	;'O'
  1891  1213  3453               	retlw	83	;'S'
  1892  1214  3420               	retlw	32	;' '
  1893  1215  3420               	retlw	32	;' '
  1894  1216  3400               	retlw	0
  1895  1217                     STR_14:
  1896  1217  3430               	retlw	48	;'0'
  1897  1218  3420               	retlw	32	;' '
  1898  1219  342D               	retlw	45	;'-'
  1899  121A  3420               	retlw	32	;' '
  1900  121B  3443               	retlw	67	;'C'
  1901  121C  3469               	retlw	105	;'i'
  1902  121D  3463               	retlw	99	;'c'
  1903  121E  346C               	retlw	108	;'l'
  1904  121F  346F               	retlw	111	;'o'
  1905  1220  3420               	retlw	32	;' '
  1906  1221  3463               	retlw	99	;'c'
  1907  1222  346F               	retlw	111	;'o'
  1908  1223  346E               	retlw	110	;'n'
  1909  1224  3474               	retlw	116	;'t'
  1910  1225  3469               	retlw	105	;'i'
  1911  1226  346E               	retlw	110	;'n'
  1912  1227  3475               	retlw	117	;'u'
  1913  1228  346F               	retlw	111	;'o'
  1914  1229  3420               	retlw	32	;' '
  1915  122A  3420               	retlw	32	;' '
  1916  122B  3400               	retlw	0
  1917  122C                     STR_21:
  1918  122C  3463               	retlw	99	;'c'
  1919  122D  346F               	retlw	111	;'o'
  1920  122E  346E               	retlw	110	;'n'
  1921  122F  3466               	retlw	102	;'f'
  1922  1230  3469               	retlw	105	;'i'
  1923  1231  3467               	retlw	103	;'g'
  1924  1232  3420               	retlw	32	;' '
  1925  1233  3463               	retlw	99	;'c'
  1926  1234  346F               	retlw	111	;'o'
  1927  1235  346E               	retlw	110	;'n'
  1928  1236  3474               	retlw	116	;'t'
  1929  1237  3472               	retlw	114	;'r'
  1930  1238  346C               	retlw	108	;'l'
  1931  1239  343A               	retlw	58	;':'
  1932  123A  3420               	retlw	32	;' '
  1933  123B  3420               	retlw	32	;' '
  1934  123C  3420               	retlw	32	;' '
  1935  123D  3420               	retlw	32	;' '
  1936  123E  3420               	retlw	32	;' '
  1937  123F  3425               	retlw	37	;'%'
  1938  1240  3400               	retlw	0
  1939  1241                     STR_12:
  1940  1241  3463               	retlw	99	;'c'
  1941  1242  346F               	retlw	111	;'o'
  1942  1243  346E               	retlw	110	;'n'
  1943  1244  3466               	retlw	102	;'f'
  1944  1245  3469               	retlw	105	;'i'
  1945  1246  3467               	retlw	103	;'g'
  1946  1247  3420               	retlw	32	;' '
  1947  1248  3474               	retlw	116	;'t'
  1948  1249  3465               	retlw	101	;'e'
  1949  124A  346D               	retlw	109	;'m'
  1950  124B  3470               	retlw	112	;'p'
  1951  124C  346F               	retlw	111	;'o'
  1952  124D  343A               	retlw	58	;':'
  1953  124E  3420               	retlw	32	;' '
  1954  124F  3420               	retlw	32	;' '
  1955  1250  3420               	retlw	32	;' '
  1956  1251  3420               	retlw	32	;' '
  1957  1252  3420               	retlw	32	;' '
  1958  1253  3420               	retlw	32	;' '
  1959  1254  3473               	retlw	115	;'s'
  1960  1255  3400               	retlw	0
  1961  1256                     STR_30:
  1962  1256  3441               	retlw	65	;'A'
  1963  1257  3454               	retlw	84	;'T'
  1964  1258  342B               	retlw	43	;'+'
  1965  1259  3443               	retlw	67	;'C'
  1966  125A  3457               	retlw	87	;'W'
  1967  125B  3441               	retlw	65	;'A'
  1968  125C  3455               	retlw	85	;'U'
  1969  125D  3454               	retlw	84	;'T'
  1970  125E  344F               	retlw	79	;'O'
  1971  125F  3443               	retlw	67	;'C'
  1972  1260  344F               	retlw	79	;'O'
  1973  1261  344E               	retlw	78	;'N'
  1974  1262  344E               	retlw	78	;'N'
  1975  1263  343D               	retlw	61	;'='
  1976  1264  3430               	retlw	48	;'0'
  1977  1265  340D               	retlw	13
  1978  1266  340A               	retlw	10
  1979  1267  3400               	retlw	0
  1980  1268                     STR_31:
  1981  1268  3441               	retlw	65	;'A'
  1982  1269  3454               	retlw	84	;'T'
  1983  126A  342B               	retlw	43	;'+'
  1984  126B  3443               	retlw	67	;'C'
  1985  126C  3449               	retlw	73	;'I'
  1986  126D  3450               	retlw	80	;'P'
  1987  126E  344D               	retlw	77	;'M'
  1988  126F  344F               	retlw	79	;'O'
  1989  1270  3444               	retlw	68	;'D'
  1990  1271  3445               	retlw	69	;'E'
  1991  1272  343D               	retlw	61	;'='
  1992  1273  3430               	retlw	48	;'0'
  1993  1274  340D               	retlw	13
  1994  1275  340A               	retlw	10
  1995  1276  3400               	retlw	0
  1996  1277                     STR_27:
  1997  1277  3441               	retlw	65	;'A'
  1998  1278  3454               	retlw	84	;'T'
  1999  1279  342B               	retlw	43	;'+'
  2000  127A  3443               	retlw	67	;'C'
  2001  127B  3457               	retlw	87	;'W'
  2002  127C  344D               	retlw	77	;'M'
  2003  127D  344F               	retlw	79	;'O'
  2004  127E  3444               	retlw	68	;'D'
  2005  127F  3445               	retlw	69	;'E'
  2006  1280  343D               	retlw	61	;'='
  2007  1281  3430               	retlw	48	;'0'
  2008  1282  340D               	retlw	13
  2009  1283  340A               	retlw	10
  2010  1284  3400               	retlw	0
  2011  1285                     STR_22:
  2012  1285  3441               	retlw	65	;'A'
  2013  1286  3454               	retlw	84	;'T'
  2014  1287  342B               	retlw	43	;'+'
  2015  1288  3443               	retlw	67	;'C'
  2016  1289  3457               	retlw	87	;'W'
  2017  128A  344D               	retlw	77	;'M'
  2018  128B  344F               	retlw	79	;'O'
  2019  128C  3444               	retlw	68	;'D'
  2020  128D  3445               	retlw	69	;'E'
  2021  128E  343D               	retlw	61	;'='
  2022  128F  3431               	retlw	49	;'1'
  2023  1290  340D               	retlw	13
  2024  1291  340A               	retlw	10
  2025  1292  3400               	retlw	0
  2026  1293                     STR_32:
  2027  1293  3441               	retlw	65	;'A'
  2028  1294  3454               	retlw	84	;'T'
  2029  1295  342B               	retlw	43	;'+'
  2030  1296  3443               	retlw	67	;'C'
  2031  1297  3449               	retlw	73	;'I'
  2032  1298  3450               	retlw	80	;'P'
  2033  1299  344D               	retlw	77	;'M'
  2034  129A  3455               	retlw	85	;'U'
  2035  129B  3458               	retlw	88	;'X'
  2036  129C  343D               	retlw	61	;'='
  2037  129D  3431               	retlw	49	;'1'
  2038  129E  340D               	retlw	13
  2039  129F  340A               	retlw	10
  2040  12A0  3400               	retlw	0
  2041  12A1                     STR_23:
  2042  12A1  3441               	retlw	65	;'A'
  2043  12A2  3454               	retlw	84	;'T'
  2044  12A3  342B               	retlw	43	;'+'
  2045  12A4  3443               	retlw	67	;'C'
  2046  12A5  3457               	retlw	87	;'W'
  2047  12A6  344D               	retlw	77	;'M'
  2048  12A7  344F               	retlw	79	;'O'
  2049  12A8  3444               	retlw	68	;'D'
  2050  12A9  3445               	retlw	69	;'E'
  2051  12AA  343D               	retlw	61	;'='
  2052  12AB  3432               	retlw	50	;'2'
  2053  12AC  340D               	retlw	13
  2054  12AD  340A               	retlw	10
  2055  12AE  3400               	retlw	0
  2056  12AF                     STR_25:
  2057  12AF  3441               	retlw	65	;'A'
  2058  12B0  3454               	retlw	84	;'T'
  2059  12B1  342B               	retlw	43	;'+'
  2060  12B2  3443               	retlw	67	;'C'
  2061  12B3  3457               	retlw	87	;'W'
  2062  12B4  344D               	retlw	77	;'M'
  2063  12B5  344F               	retlw	79	;'O'
  2064  12B6  3444               	retlw	68	;'D'
  2065  12B7  3445               	retlw	69	;'E'
  2066  12B8  343D               	retlw	61	;'='
  2067  12B9  3433               	retlw	51	;'3'
  2068  12BA  340D               	retlw	13
  2069  12BB  340A               	retlw	10
  2070  12BC  3400               	retlw	0
  2071  12BD                     STR_35:
  2072  12BD  3441               	retlw	65	;'A'
  2073  12BE  3454               	retlw	84	;'T'
  2074  12BF  342B               	retlw	43	;'+'
  2075  12C0  3443               	retlw	67	;'C'
  2076  12C1  3449               	retlw	73	;'I'
  2077  12C2  3450               	retlw	80	;'P'
  2078  12C3  3443               	retlw	67	;'C'
  2079  12C4  344C               	retlw	76	;'L'
  2080  12C5  344F               	retlw	79	;'O'
  2081  12C6  3453               	retlw	83	;'S'
  2082  12C7  3445               	retlw	69	;'E'
  2083  12C8  340D               	retlw	13
  2084  12C9  340A               	retlw	10
  2085  12CA  3400               	retlw	0
  2086  12CB                     STR_28:
  2087  12CB  3441               	retlw	65	;'A'
  2088  12CC  3454               	retlw	84	;'T'
  2089  12CD  342B               	retlw	43	;'+'
  2090  12CE  3443               	retlw	67	;'C'
  2091  12CF  3457               	retlw	87	;'W'
  2092  12D0  344C               	retlw	76	;'L'
  2093  12D1  3441               	retlw	65	;'A'
  2094  12D2  3450               	retlw	80	;'P'
  2095  12D3  340D               	retlw	13
  2096  12D4  340A               	retlw	10
  2097  12D5  3400               	retlw	0
  2098  12D6                     STR_29:
  2099  12D6  3441               	retlw	65	;'A'
  2100  12D7  3454               	retlw	84	;'T'
  2101  12D8  342B               	retlw	43	;'+'
  2102  12D9  3443               	retlw	67	;'C'
  2103  12DA  3449               	retlw	73	;'I'
  2104  12DB  3446               	retlw	70	;'F'
  2105  12DC  3453               	retlw	83	;'S'
  2106  12DD  3452               	retlw	82	;'R'
  2107  12DE  340D               	retlw	13
  2108  12DF  340A               	retlw	10
  2109  12E0  3400               	retlw	0
  2110  12E1                     STR_9:
  2111  12E1  343C               	retlw	60	;'<'
  2112  12E2  3420               	retlw	32	;' '
  2113  12E3  3420               	retlw	32	;' '
  2114  12E4  342F               	retlw	47	;'/'
  2115  12E5  3420               	retlw	32	;' '
  2116  12E6  3420               	retlw	32	;' '
  2117  12E7  343E               	retlw	62	;'>'
  2118  12E8  3400               	retlw	0
  2119  12E9                     STR_1:
  2120  12E9  34FF               	retlw	-1
  2121  12EA  3400               	retlw	0
  2122  12E9                     
  2123                           	psect	cinit
  2124  000F                     start_initialization:	
  2125                           ; #config settings
  2126                           
  2127  000F                     __initialization:
  2128                           
  2129                           ; Initialize objects allocated to BANK3
  2130  000F  1783               	bsf	3,7	;select IRP bank2
  2131  0010  30DC               	movlw	low (__pdataBANK3+76)
  2132  0011  00FD               	movwf	btemp+-1
  2133  0012  3013               	movlw	high __pidataBANK3
  2134  0013  00FE               	movwf	btemp
  2135  0014  3090               	movlw	low __pidataBANK3
  2136  0015  00FF               	movwf	btemp+1
  2137  0016  3090               	movlw	low __pdataBANK3
  2138  0017  0084               	movwf	4
  2139  0018  160A  118A  22EF  120A  118A  	fcall	init_ram0
  2140                           
  2141                           ; Initialize objects allocated to BANK2
  2142  001D  3038               	movlw	low (__pdataBANK2+40)
  2143  001E  00FD               	movwf	btemp+-1
  2144  001F  301B               	movlw	high __pidataBANK2
  2145  0020  00FE               	movwf	btemp
  2146  0021  30F4               	movlw	low __pidataBANK2
  2147  0022  00FF               	movwf	btemp+1
  2148  0023  3010               	movlw	low __pdataBANK2
  2149  0024  0084               	movwf	4
  2150  0025  160A  118A  22EF  120A  118A  	fcall	init_ram0
  2151                           
  2152                           ; Initialize objects allocated to BANK1
  2153  002A  1383               	bcf	3,7	;select IRP bank0
  2154  002B  30EC               	movlw	low (__pdataBANK1+10)
  2155  002C  00FD               	movwf	btemp+-1
  2156  002D  301A               	movlw	high __pidataBANK1
  2157  002E  00FE               	movwf	btemp
  2158  002F  3011               	movlw	low __pidataBANK1
  2159  0030  00FF               	movwf	btemp+1
  2160  0031  30E2               	movlw	low __pdataBANK1
  2161  0032  0084               	movwf	4
  2162  0033  160A  118A  22EF  120A  118A  	fcall	init_ram0
  2163                           
  2164                           ; Initialize objects allocated to BANK0
  2165  0038  306E               	movlw	low (__pdataBANK0+10)
  2166  0039  00FD               	movwf	btemp+-1
  2167  003A  301A               	movlw	high __pidataBANK0
  2168  003B  00FE               	movwf	btemp
  2169  003C  301B               	movlw	low __pidataBANK0
  2170  003D  00FF               	movwf	btemp+1
  2171  003E  3064               	movlw	low __pdataBANK0
  2172  003F  0084               	movwf	4
  2173  0040  160A  118A  22EF  120A  118A  	fcall	init_ram0
  2174                           
  2175                           ; Initialize objects allocated to COMMON
  2176  0045  120A  118A  2003  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
  2177  004A  00FA               	movwf	__pdataCOMMON& (0+127)
  2178                           
  2179                           ; Clear objects allocated to BANK2
  2180  004B  1783               	bsf	3,7	;select IRP bank2
  2181  004C  3038               	movlw	low __pbssBANK2
  2182  004D  0084               	movwf	4
  2183  004E  3056               	movlw	low (__pbssBANK2+30)
  2184  004F  160A  158A  21E3  120A  118A  	fcall	clear_ram0
  2185                           
  2186                           ; Clear objects allocated to BANK1
  2187  0054  1683               	bsf	3,5	;RP0=1, select bank1
  2188  0055  1303               	bcf	3,6	;RP1=0, select bank1
  2189  0056  01EC               	clrf	__pbssBANK1& (0+127)
  2190  0057  01ED               	clrf	(__pbssBANK1+1)& (0+127)
  2191                           
  2192                           ; Clear objects allocated to BANK0
  2193  0058  1383               	bcf	3,7	;select IRP bank0
  2194  0059  3044               	movlw	low __pbssBANK0
  2195  005A  0084               	movwf	4
  2196  005B  3064               	movlw	low (__pbssBANK0+32)
  2197  005C  160A  158A  21E3  120A  118A  	fcall	clear_ram0
  2198                           
  2199                           ; Clear objects allocated to COMMON
  2200  0061  01F6               	clrf	__pbssCOMMON& (0+127)
  2201  0062  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
  2202  0063  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
  2203  0064  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
  2204  0065                     end_of_initialization:	
  2205                           ;End of C runtime variable initialization code
  2206                           
  2207  0065                     __end_of__initialization:
  2208  0065  0183               	clrf	3
  2209  0066  120A  118A  2C3E   	ljmp	_main	;jump to C main() function
  2210                           
  2211                           	psect	bssCOMMON
  2212  0076                     __pbssCOMMON:
  2213  0076                     _cont_ciclos:
  2214  0076                     	ds	2
  2215  0078                     _d:
  2216  0078                     	ds	1
  2217  0079                     _atuador:
  2218  0079                     	ds	1
  2219                           
  2220                           	psect	dataCOMMON
  2221  007A                     __pdataCOMMON:
  2222  007A                     _indice_passos:
  2223  007A                     	ds	1
  2224                           
  2225                           	psect	bssBANK0
  2226  0044                     __pbssBANK0:
  2227  0044                     _t1cont:
  2228  0044                     	ds	4
  2229  0048                     salva_atuadores_init@F108:
  2230  0048                     	ds	4
  2231  004C                     _ciclos:
  2232  004C                     	ds	2
  2233  004E                     _teclaAnterior:
  2234  004E                     	ds	1
  2235  004F                     _lenSerialIO:
  2236  004F                     	ds	1
  2237  0050                     _ptrSerialOut:
  2238  0050                     	ds	1
  2239  0051                     _ptrSerialIn:
  2240  0051                     	ds	1
  2241  0052                     _fila:
  2242  0052                     	ds	18
  2243                           
  2244                           	psect	dataBANK0
  2245  0064                     __pdataBANK0:
  2246  0064                     _eusart:
  2247  0064                     	ds	8
  2248  006C                     _ind_print:
  2249  006C                     	ds	1
  2250  006D                     _ind_fila:
  2251  006D                     	ds	1
  2252                           
  2253                           	psect	bssBANK1
  2254  00EC                     __pbssBANK1:
  2255  00EC                     main@F1590:
  2256  00EC                     	ds	1
  2257  00ED                     main@F1588:
  2258  00ED                     	ds	1
  2259                           
  2260                           	psect	dataBANK1
  2261  00E2                     __pdataBANK1:
  2262  00E2                     _IHM:
  2263  00E2                     	ds	5
  2264  00E7                     _EEPROM:
  2265  00E7                     	ds	5
  2266                           
  2267                           	psect	dataBANK3
  2268  0190                     __pdataBANK3:
  2269  0190                     Wifi_cipsend@F1398:
  2270  0190                     	ds	30
  2271  01AE                     main@F1614:
  2272  01AE                     	ds	20
  2273  01C2                     _teclas:
  2274  01C2                     	ds	16
  2275  01D2                     _wifi:
  2276  01D2                     	ds	10
  2277                           
  2278                           	psect	bssBANK2
  2279  0138                     __pbssBANK2:
  2280  0138                     Wifi_cipsend@F1401:
  2281  0138                     	ds	30
  2282                           
  2283                           	psect	dataBANK2
  2284  0110                     __pdataBANK2:
  2285  0110                     Wifi_connect@F1388:
  2286  0110                     	ds	40
  2287                           
  2288                           	psect	inittext
  2289  12EB                     init_fetch0:	
  2290                           ;	Called with low address in FSR and high address in W
  2291                           
  2292  12EB  087E               	movf	btemp,w
  2293  12EC  008A               	movwf	10
  2294  12ED  087F               	movf	btemp+1,w
  2295  12EE  0082               	movwf	2
  2296  12EF                     init_ram0:	
  2297                           ;Called with:
  2298                           ;	high address of idata address in btemp 
  2299                           ;	low address of idata address in btemp+1 
  2300                           ;	low address of data in FSR
  2301                           ;	high address + 1 of data in btemp-1
  2302                           
  2303  12EF  160A  118A  22EB  160A  118A  	fcall	init_fetch0
  2304  12F4  0080               	movwf	0
  2305  12F5  0A84               	incf	4,f
  2306  12F6  0804               	movf	4,w
  2307  12F7  067D               	xorwf	btemp+-1,w
  2308  12F8  1903               	btfsc	3,2
  2309  12F9  3400               	retlw	0
  2310  12FA  0AFF               	incf	btemp+1,f
  2311  12FB  1903               	btfsc	3,2
  2312  12FC  0AFE               	incf	btemp,f
  2313  12FD  2AEF               	goto	init_ram0
  2314                           
  2315                           	psect	clrtext
  2316  19E3                     clear_ram0:	
  2317                           ;	Called with FSR containing the base address, and
  2318                           ;	W with the last address+1
  2319                           
  2320  19E3  0064               	clrwdt	;clear the watchdog before getting into this loop
  2321  19E4                     clrloop0:
  2322  19E4  0180               	clrf	0	;clear RAM location pointed to by FSR
  2323  19E5  0A84               	incf	4,f	;increment pointer
  2324  19E6  0604               	xorwf	4,w	;XOR with final address
  2325  19E7  1903               	btfsc	3,2	;have we reached the end yet?
  2326  19E8  3400               	retlw	0	;all done for this memory range, return
  2327  19E9  0604               	xorwf	4,w	;XOR again to restore value
  2328  19EA  29E4               	goto	clrloop0	;do the next byte
  2329                           
  2330                           	psect	cstackBANK1
  2331  00A0                     __pcstackBANK1:
  2332  00A0                     ??_main:
  2333                           
  2334                           ; 1 bytes @ 0x0
  2335  00A0                     	ds	4
  2336  00A4                     main@lema:
  2337                           
  2338                           ; 20 bytes @ 0x4
  2339  00A4                     	ds	20
  2340  00B8                     main@contPassos:
  2341                           
  2342                           ; 1 bytes @ 0x18
  2343  00B8                     	ds	1
  2344  00B9                     main@auxPasso:
  2345                           
  2346                           ; 1 bytes @ 0x19
  2347  00B9                     	ds	1
  2348  00BA                     main@aux:
  2349                           
  2350                           ; 1 bytes @ 0x1A
  2351  00BA                     	ds	1
  2352  00BB                     _main$991:
  2353                           
  2354                           ; 2 bytes @ 0x1B
  2355  00BB                     	ds	2
  2356  00BD                     _main$992:
  2357                           
  2358                           ; 2 bytes @ 0x1D
  2359  00BD                     	ds	2
  2360  00BF                     _main$993:
  2361                           
  2362                           ; 2 bytes @ 0x1F
  2363  00BF                     	ds	2
  2364  00C1                     _main$994:
  2365                           
  2366                           ; 2 bytes @ 0x21
  2367  00C1                     	ds	2
  2368  00C3                     _main$995:
  2369                           
  2370                           ; 2 bytes @ 0x23
  2371  00C3                     	ds	2
  2372  00C5                     _main$996:
  2373                           
  2374                           ; 2 bytes @ 0x25
  2375  00C5                     	ds	2
  2376  00C7                     _main$997:
  2377                           
  2378                           ; 2 bytes @ 0x27
  2379  00C7                     	ds	2
  2380  00C9                     _main$998:
  2381                           
  2382                           ; 2 bytes @ 0x29
  2383  00C9                     	ds	2
  2384  00CB                     _main$1003:
  2385                           
  2386                           ; 2 bytes @ 0x2B
  2387  00CB                     	ds	2
  2388  00CD                     main@init_cond:
  2389                           
  2390                           ; 1 bytes @ 0x2D
  2391  00CD                     	ds	1
  2392  00CE                     main@vetorOut:
  2393                           
  2394                           ; 1 bytes @ 0x2E
  2395  00CE                     	ds	1
  2396  00CF                     main@i_980:
  2397                           
  2398                           ; 1 bytes @ 0x2F
  2399  00CF                     	ds	1
  2400  00D0                     main@vetorIn:
  2401                           
  2402                           ; 1 bytes @ 0x30
  2403  00D0                     	ds	1
  2404  00D1                     main@meAtuadores:
  2405                           
  2406                           ; 1 bytes @ 0x31
  2407  00D1                     	ds	1
  2408  00D2                     main@ptr:
  2409                           
  2410                           ; 1 bytes @ 0x32
  2411  00D2                     	ds	1
  2412  00D3                     main@i:
  2413                           
  2414                           ; 1 bytes @ 0x33
  2415  00D3                     	ds	1
  2416  00D4                     main@j:
  2417                           
  2418                           ; 1 bytes @ 0x34
  2419  00D4                     	ds	1
  2420  00D5                     main@i_974:
  2421                           
  2422                           ; 1 bytes @ 0x35
  2423  00D5                     	ds	1
  2424  00D6                     main@j_975:
  2425                           
  2426                           ; 1 bytes @ 0x36
  2427  00D6                     	ds	1
  2428  00D7                     main@i_1025:
  2429                           
  2430                           ; 1 bytes @ 0x37
  2431  00D7                     	ds	1
  2432  00D8                     main@j_1026:
  2433                           
  2434                           ; 1 bytes @ 0x38
  2435  00D8                     	ds	1
  2436  00D9                     main@i_1028:
  2437                           
  2438                           ; 1 bytes @ 0x39
  2439  00D9                     	ds	1
  2440  00DA                     main@j_1029:
  2441                           
  2442                           ; 1 bytes @ 0x3A
  2443  00DA                     	ds	1
  2444  00DB                     main@botao:
  2445                           
  2446                           ; 1 bytes @ 0x3B
  2447  00DB                     	ds	1
  2448  00DC                     main@ciclos:
  2449                           
  2450                           ; 2 bytes @ 0x3C
  2451  00DC                     	ds	2
  2452  00DE                     main@num:
  2453                           
  2454                           ; 2 bytes @ 0x3E
  2455  00DE                     	ds	2
  2456  00E0                     main@estado:
  2457                           
  2458                           ; 1 bytes @ 0x40
  2459  00E0                     	ds	1
  2460  00E1                     main@tecla:
  2461                           
  2462                           ; 1 bytes @ 0x41
  2463  00E1                     	ds	1
  2464                           
  2465                           	psect	cstackCOMMON
  2466  0070                     __pcstackCOMMON:
  2467  0070                     ?_decodifica:
  2468  0070                     ?_fifo_alinharPrint:	
  2469                           ; 1 bytes @ 0x0
  2470                           
  2471  0070                     ?_fifo_adrs:	
  2472                           ; 1 bytes @ 0x0
  2473                           
  2474  0070                     ?_I2C_start:	
  2475                           ; 1 bytes @ 0x0
  2476                           
  2477  0070                     ?_I2C_tx:	
  2478                           ; 1 bytes @ 0x0
  2479                           
  2480  0070                     ?_I2C_ack_receive:	
  2481                           ; 1 bytes @ 0x0
  2482                           
  2483  0070                     ?_I2C_stop:	
  2484                           ; 1 bytes @ 0x0
  2485                           
  2486  0070                     ?_txStatusEUSART:	
  2487                           ; 1 bytes @ 0x0
  2488                           
  2489  0070                     ?_dispLCD_instReg:	
  2490                           ; 1 bytes @ 0x0
  2491                           
  2492  0070                     ?_dispLCD_dataReg:	
  2493                           ; 1 bytes @ 0x0
  2494                           
  2495  0070                     ?_dispLCD_init:	
  2496                           ; 1 bytes @ 0x0
  2497                           
  2498  0070                     ?_dispLCD_clr:	
  2499                           ; 1 bytes @ 0x0
  2500                           
  2501  0070                     ?_getIndicePassos:	
  2502                           ; 1 bytes @ 0x0
  2503                           
  2504  0070                     ?_ler_atuador:	
  2505                           ; 1 bytes @ 0x0
  2506                           
  2507  0070                     ?_alt_atuador:	
  2508                           ; 1 bytes @ 0x0
  2509                           
  2510  0070                     ?_init_atuadores:	
  2511                           ; 1 bytes @ 0x0
  2512                           
  2513  0070                     ?_salva_atuadores_init:	
  2514                           ; 1 bytes @ 0x0
  2515                           
  2516  0070                     ?_fifo_lerPos:	
  2517                           ; 1 bytes @ 0x0
  2518                           
  2519  0070                     ?_fifo_delete:	
  2520                           ; 1 bytes @ 0x0
  2521                           
  2522  0070                     ?_fifo_add:	
  2523                           ; 1 bytes @ 0x0
  2524                           
  2525  0070                     ?_fifo_add_tempo:	
  2526                           ; 1 bytes @ 0x0
  2527                           
  2528  0070                     ?_fifo_add_control:	
  2529                           ; 1 bytes @ 0x0
  2530                           
  2531  0070                     ?_fifo_indice:	
  2532                           ; 1 bytes @ 0x0
  2533                           
  2534  0070                     ?_fifo_disponivel:	
  2535                           ; 1 bytes @ 0x0
  2536                           
  2537  0070                     ?_fifo_tam:	
  2538                           ; 1 bytes @ 0x0
  2539                           
  2540  0070                     ?_fifo_indicePrint_inc:	
  2541                           ; 1 bytes @ 0x0
  2542                           
  2543  0070                     ?_fifo_indicePrint_dec:	
  2544                           ; 1 bytes @ 0x0
  2545                           
  2546  0070                     ?_fifo_print:	
  2547                           ; 1 bytes @ 0x0
  2548                           
  2549  0070                     ?_dignum_apagar:	
  2550                           ; 1 bytes @ 0x0
  2551                           
  2552  0070                     ?_posAtual:	
  2553                           ; 1 bytes @ 0x0
  2554                           
  2555  0070                     ?_serialIOload:	
  2556                           ; 1 bytes @ 0x0
  2557                           
  2558  0070                     ?_serialIObyteShift:	
  2559                           ; 1 bytes @ 0x0
  2560                           
  2561  0070                     ?_serialIOscan:	
  2562                           ; 1 bytes @ 0x0
  2563                           
  2564  0070                     ?_teclado_init:	
  2565                           ; 1 bytes @ 0x0
  2566                           
  2567  0070                     ?_teclado_scan:	
  2568                           ; 1 bytes @ 0x0
  2569                           
  2570  0070                     ?_teclado_borda:	
  2571                           ; 1 bytes @ 0x0
  2572                           
  2573  0070                     ?_intt1_1ms:	
  2574                           ; 1 bytes @ 0x0
  2575                           
  2576  0070                     ??_intt1_1ms:	
  2577                           ; 1 bytes @ 0x0
  2578                           
  2579  0070                     ?_timer1_init:	
  2580                           ; 1 bytes @ 0x0
  2581                           
  2582  0070                     ?_irq:	
  2583                           ; 1 bytes @ 0x0
  2584                           
  2585  0070                     ?_main:	
  2586                           ; 1 bytes @ 0x0
  2587                           
  2588  0070                     ?_dac_init:	
  2589                           ; 1 bytes @ 0x0
  2590                           
  2591                           
  2592                           ; 1 bytes @ 0x0
  2593  0070                     	ds	4
  2594  0074                     ??_irq:
  2595                           
  2596                           ; 1 bytes @ 0x4
  2597  0074                     	ds	2
  2598                           
  2599                           	psect	cstackBANK0
  2600  0020                     __pcstackBANK0:
  2601  0020                     ??_decodifica:
  2602  0020                     ?_codifica:	
  2603                           ; 1 bytes @ 0x0
  2604                           
  2605  0020                     ??_fifo_adrs:	
  2606                           ; 1 bytes @ 0x0
  2607                           
  2608  0020                     ??_I2C_start:	
  2609                           ; 1 bytes @ 0x0
  2610                           
  2611  0020                     ??_I2C_tx:	
  2612                           ; 1 bytes @ 0x0
  2613                           
  2614  0020                     ??_I2C_ack_receive:	
  2615                           ; 1 bytes @ 0x0
  2616                           
  2617  0020                     ??_I2C_stop:	
  2618                           ; 1 bytes @ 0x0
  2619                           
  2620  0020                     ?_txEUSART:	
  2621                           ; 1 bytes @ 0x0
  2622                           
  2623  0020                     ??_txStatusEUSART:	
  2624                           ; 1 bytes @ 0x0
  2625                           
  2626  0020                     ?_delay:	
  2627                           ; 1 bytes @ 0x0
  2628                           
  2629  0020                     ??_dispLCD_instReg:	
  2630                           ; 1 bytes @ 0x0
  2631                           
  2632  0020                     ??_dispLCD_dataReg:	
  2633                           ; 1 bytes @ 0x0
  2634                           
  2635  0020                     ?_EEPROM_write:	
  2636                           ; 1 bytes @ 0x0
  2637                           
  2638  0020                     ??_getIndicePassos:	
  2639                           ; 1 bytes @ 0x0
  2640                           
  2641  0020                     ??_ler_atuador:	
  2642                           ; 1 bytes @ 0x0
  2643                           
  2644  0020                     ??_alt_atuador:	
  2645                           ; 1 bytes @ 0x0
  2646                           
  2647  0020                     ??_init_atuadores:	
  2648                           ; 1 bytes @ 0x0
  2649                           
  2650  0020                     ??_fifo_lerPos:	
  2651                           ; 1 bytes @ 0x0
  2652                           
  2653  0020                     ?_fifo_add_ciclo:	
  2654                           ; 1 bytes @ 0x0
  2655                           
  2656  0020                     ??_fifo_indice:	
  2657                           ; 1 bytes @ 0x0
  2658                           
  2659  0020                     ??_fifo_disponivel:	
  2660                           ; 1 bytes @ 0x0
  2661                           
  2662  0020                     ??_fifo_tam:	
  2663                           ; 1 bytes @ 0x0
  2664                           
  2665  0020                     ??_fifo_indicePrint_inc:	
  2666                           ; 1 bytes @ 0x0
  2667                           
  2668  0020                     ??_fifo_indicePrint_dec:	
  2669                           ; 1 bytes @ 0x0
  2670                           
  2671  0020                     ??_serialIOload:	
  2672                           ; 1 bytes @ 0x0
  2673                           
  2674  0020                     ??_serialIObyteShift:	
  2675                           ; 1 bytes @ 0x0
  2676                           
  2677  0020                     ?_initSerialIO:	
  2678                           ; 1 bytes @ 0x0
  2679                           
  2680  0020                     ??_teclado_init:	
  2681                           ; 1 bytes @ 0x0
  2682                           
  2683  0020                     ??_teclado_scan:	
  2684                           ; 1 bytes @ 0x0
  2685                           
  2686  0020                     ??_timer1_init:	
  2687                           ; 1 bytes @ 0x0
  2688                           
  2689  0020                     ?_setT1:	
  2690                           ; 1 bytes @ 0x0
  2691                           
  2692  0020                     ?_end_receita:	
  2693                           ; 1 bytes @ 0x0
  2694                           
  2695  0020                     ?_getContCiclos:	
  2696                           ; 2 bytes @ 0x0
  2697                           
  2698  0020                     ?___wmul:	
  2699                           ; 2 bytes @ 0x0
  2700                           
  2701  0020                     ?___awdiv:	
  2702                           ; 2 bytes @ 0x0
  2703                           
  2704  0020                     ?___awmod:	
  2705                           ; 2 bytes @ 0x0
  2706                           
  2707  0020                     ?___lwdiv:	
  2708                           ; 2 bytes @ 0x0
  2709                           
  2710  0020                     ?_statusT1:	
  2711                           ; 2 bytes @ 0x0
  2712                           
  2713  0020                     ?___lldiv:	
  2714                           ; 4 bytes @ 0x0
  2715                           
  2716  0020                     EEPROM_write@data:	
  2717                           ; 4 bytes @ 0x0
  2718                           
  2719  0020                     fifo_lerPos@i:	
  2720                           ; 1 bytes @ 0x0
  2721                           
  2722  0020                     initSerialIO@ptrOut:	
  2723                           ; 1 bytes @ 0x0
  2724                           
  2725  0020                     I2C_tx@b:	
  2726                           ; 1 bytes @ 0x0
  2727                           
  2728  0020                     txEUSART@d:	
  2729                           ; 1 bytes @ 0x0
  2730                           
  2731  0020                     delay@t:	
  2732                           ; 1 bytes @ 0x0
  2733                           
  2734  0020                     end_receita@x:	
  2735                           ; 2 bytes @ 0x0
  2736                           
  2737  0020                     codifica@dado:	
  2738                           ; 2 bytes @ 0x0
  2739                           
  2740  0020                     fifo_add_ciclo@ciclos:	
  2741                           ; 2 bytes @ 0x0
  2742                           
  2743  0020                     ___wmul@multiplier:	
  2744                           ; 2 bytes @ 0x0
  2745                           
  2746  0020                     ___awdiv@divisor:	
  2747                           ; 2 bytes @ 0x0
  2748                           
  2749  0020                     ___awmod@divisor:	
  2750                           ; 2 bytes @ 0x0
  2751                           
  2752  0020                     ___lwdiv@divisor:	
  2753                           ; 2 bytes @ 0x0
  2754                           
  2755  0020                     setT1@c:	
  2756                           ; 2 bytes @ 0x0
  2757                           
  2758  0020                     ___lldiv@divisor:	
  2759                           ; 4 bytes @ 0x0
  2760                           
  2761                           
  2762                           ; 4 bytes @ 0x0
  2763  0020                     	ds	1
  2764  0021                     ?_wifi_send:
  2765  0021                     ??_txEUSART:	
  2766                           ; 1 bytes @ 0x1
  2767                           
  2768  0021                     ??_EEPROM_write:	
  2769                           ; 1 bytes @ 0x1
  2770                           
  2771  0021                     ??_posAtual:	
  2772                           ; 1 bytes @ 0x1
  2773                           
  2774  0021                     dispLCD_dataReg@d:	
  2775                           ; 1 bytes @ 0x1
  2776                           
  2777  0021                     EEPROM_write@addr:	
  2778                           ; 1 bytes @ 0x1
  2779                           
  2780  0021                     serialIObyteShift@dataIn:	
  2781                           ; 1 bytes @ 0x1
  2782                           
  2783  0021                     initSerialIO@length:	
  2784                           ; 1 bytes @ 0x1
  2785                           
  2786  0021                     wifi_send@msg:	
  2787                           ; 1 bytes @ 0x1
  2788                           
  2789                           
  2790                           ; 2 bytes @ 0x1
  2791  0021                     	ds	1
  2792  0022                     ??_codifica:
  2793  0022                     ??_delay:	
  2794                           ; 1 bytes @ 0x2
  2795                           
  2796  0022                     ??_end_receita:	
  2797                           ; 1 bytes @ 0x2
  2798                           
  2799  0022                     ??_getContCiclos:	
  2800                           ; 1 bytes @ 0x2
  2801                           
  2802  0022                     ??_fifo_add_ciclo:	
  2803                           ; 1 bytes @ 0x2
  2804                           
  2805  0022                     ??_initSerialIO:	
  2806                           ; 1 bytes @ 0x2
  2807                           
  2808  0022                     dispLCD_instReg@i:	
  2809                           ; 1 bytes @ 0x2
  2810                           
  2811  0022                     ler_atuador@tecla:	
  2812                           ; 1 bytes @ 0x2
  2813                           
  2814  0022                     alt_atuador@tecla:	
  2815                           ; 1 bytes @ 0x2
  2816                           
  2817  0022                     decodifica@d:	
  2818                           ; 1 bytes @ 0x2
  2819                           
  2820  0022                     posAtual@ind:	
  2821                           ; 1 bytes @ 0x2
  2822                           
  2823  0022                     serialIObyteShift@dataOut:	
  2824                           ; 1 bytes @ 0x2
  2825                           
  2826  0022                     ___wmul@multiplicand:	
  2827                           ; 1 bytes @ 0x2
  2828                           
  2829  0022                     ___awdiv@dividend:	
  2830                           ; 2 bytes @ 0x2
  2831                           
  2832  0022                     ___awmod@dividend:	
  2833                           ; 2 bytes @ 0x2
  2834                           
  2835  0022                     ___lwdiv@dividend:	
  2836                           ; 2 bytes @ 0x2
  2837                           
  2838                           
  2839                           ; 2 bytes @ 0x2
  2840  0022                     	ds	1
  2841  0023                     ??_wifi_send:
  2842  0023                     ?_dispLCD_lincol:	
  2843                           ; 1 bytes @ 0x3
  2844                           
  2845  0023                     ??_dispLCD_clr:	
  2846                           ; 1 bytes @ 0x3
  2847                           
  2848  0023                     ??_salva_atuadores_init:	
  2849                           ; 1 bytes @ 0x3
  2850                           
  2851  0023                     dispLCD_lincol@col:	
  2852                           ; 1 bytes @ 0x3
  2853                           
  2854  0023                     posAtual@passo:	
  2855                           ; 1 bytes @ 0x3
  2856                           
  2857  0023                     serialIObyteShift@dataBit:	
  2858                           ; 1 bytes @ 0x3
  2859                           
  2860  0023                     initSerialIO@ptrIn:	
  2861                           ; 1 bytes @ 0x3
  2862                           
  2863                           
  2864                           ; 1 bytes @ 0x3
  2865  0023                     	ds	1
  2866  0024                     ?_Wifi_mode:
  2867  0024                     ??_dispLCD_lincol:	
  2868                           ; 1 bytes @ 0x4
  2869                           
  2870  0024                     ??_dispLCD_init:	
  2871                           ; 1 bytes @ 0x4
  2872                           
  2873  0024                     ??_serialIOscan:	
  2874                           ; 1 bytes @ 0x4
  2875                           
  2876  0024                     ??_setT1:	
  2877                           ; 1 bytes @ 0x4
  2878                           
  2879  0024                     ??_statusT1:	
  2880                           ; 1 bytes @ 0x4
  2881                           
  2882  0024                     ??_dac_init:	
  2883                           ; 1 bytes @ 0x4
  2884                           
  2885  0024                     ?_dac_write:	
  2886                           ; 1 bytes @ 0x4
  2887                           
  2888  0024                     ??___wmul:	
  2889                           ; 1 bytes @ 0x4
  2890                           
  2891  0024                     ??___awdiv:	
  2892                           ; 1 bytes @ 0x4
  2893                           
  2894  0024                     ??___awmod:	
  2895                           ; 1 bytes @ 0x4
  2896                           
  2897  0024                     ??___lwdiv:	
  2898                           ; 1 bytes @ 0x4
  2899                           
  2900  0024                     codifica@tipo:	
  2901                           ; 1 bytes @ 0x4
  2902                           
  2903  0024                     teclado_scan@tecla:	
  2904                           ; 1 bytes @ 0x4
  2905                           
  2906  0024                     Wifi_mode@d:	
  2907                           ; 1 bytes @ 0x4
  2908                           
  2909  0024                     dac_write@code:	
  2910                           ; 1 bytes @ 0x4
  2911                           
  2912  0024                     ___wmul@product:	
  2913                           ; 2 bytes @ 0x4
  2914                           
  2915  0024                     salva_atuadores_init@condi_init:	
  2916                           ; 2 bytes @ 0x4
  2917                           
  2918  0024                     ___lldiv@dividend:	
  2919                           ; 4 bytes @ 0x4
  2920                           
  2921                           
  2922                           ; 4 bytes @ 0x4
  2923  0024                     	ds	1
  2924  0025                     ??_Wifi_mode:
  2925  0025                     teclado_scan@l:	
  2926                           ; 1 bytes @ 0x5
  2927                           
  2928  0025                     ___awdiv@counter:	
  2929                           ; 1 bytes @ 0x5
  2930                           
  2931  0025                     ___awmod@counter:	
  2932                           ; 1 bytes @ 0x5
  2933                           
  2934  0025                     ___lwdiv@counter:	
  2935                           ; 1 bytes @ 0x5
  2936                           
  2937                           
  2938                           ; 1 bytes @ 0x5
  2939  0025                     	ds	1
  2940  0026                     ?_dignum_conc:
  2941  0026                     ??_dac_write:	
  2942                           ; 1 bytes @ 0x6
  2943                           
  2944  0026                     dispLCD_lincol@lin:	
  2945                           ; 1 bytes @ 0x6
  2946                           
  2947  0026                     dignum_conc@ptrNum:	
  2948                           ; 1 bytes @ 0x6
  2949                           
  2950  0026                     teclado_scan@c:	
  2951                           ; 1 bytes @ 0x6
  2952                           
  2953  0026                     ___awdiv@sign:	
  2954                           ; 1 bytes @ 0x6
  2955                           
  2956  0026                     ___awmod@sign:	
  2957                           ; 1 bytes @ 0x6
  2958                           
  2959  0026                     ___lwdiv@quotient:	
  2960                           ; 1 bytes @ 0x6
  2961                           
  2962                           
  2963                           ; 2 bytes @ 0x6
  2964  0026                     	ds	1
  2965  0027                     ?_salvar_receita:
  2966  0027                     ?_salvar_dado:	
  2967                           ; 1 bytes @ 0x7
  2968                           
  2969  0027                     ??_dignum_conc:	
  2970                           ; 1 bytes @ 0x7
  2971                           
  2972  0027                     ??_teclado_borda:	
  2973                           ; 1 bytes @ 0x7
  2974                           
  2975  0027                     dispLCD_lincol@aux:	
  2976                           ; 1 bytes @ 0x7
  2977                           
  2978  0027                     salvar_receita@adrs:	
  2979                           ; 1 bytes @ 0x7
  2980                           
  2981  0027                     salvar_dado@col:	
  2982                           ; 1 bytes @ 0x7
  2983                           
  2984  0027                     ___awdiv@quotient:	
  2985                           ; 1 bytes @ 0x7
  2986                           
  2987                           
  2988                           ; 2 bytes @ 0x7
  2989  0027                     	ds	1
  2990  0028                     ?_MCP4725:
  2991  0028                     ?_dispLCD:	
  2992                           ; 1 bytes @ 0x8
  2993                           
  2994  0028                     ?_dispLCD_str:	
  2995                           ; 1 bytes @ 0x8
  2996                           
  2997  0028                     ??_dignum_apagar:	
  2998                           ; 1 bytes @ 0x8
  2999                           
  3000  0028                     ??___lldiv:	
  3001                           ; 1 bytes @ 0x8
  3002                           
  3003  0028                     dispLCD@lin:	
  3004                           ; 1 bytes @ 0x8
  3005                           
  3006  0028                     salvar_receita@data:	
  3007                           ; 1 bytes @ 0x8
  3008                           
  3009  0028                     salvar_dado@data:	
  3010                           ; 1 bytes @ 0x8
  3011                           
  3012  0028                     salva_atuadores_init@pt:	
  3013                           ; 1 bytes @ 0x8
  3014                           
  3015  0028                     dignum_apagar@ptrNum:	
  3016                           ; 1 bytes @ 0x8
  3017                           
  3018  0028                     serialIOscan@j:	
  3019                           ; 1 bytes @ 0x8
  3020                           
  3021  0028                     teclado_borda@aux:	
  3022                           ; 1 bytes @ 0x8
  3023                           
  3024  0028                     dispLCD_str@str:	
  3025                           ; 1 bytes @ 0x8
  3026                           
  3027  0028                     MCP4725@Vout:	
  3028                           ; 2 bytes @ 0x8
  3029                           
  3030                           
  3031                           ; 2 bytes @ 0x8
  3032  0028                     	ds	1
  3033  0029                     ??_salvar_receita:
  3034  0029                     ??_salvar_dado:	
  3035                           ; 1 bytes @ 0x9
  3036                           
  3037  0029                     ??_fifo_print:	
  3038                           ; 1 bytes @ 0x9
  3039                           
  3040  0029                     ?_dignum_tam:	
  3041                           ; 1 bytes @ 0x9
  3042                           
  3043  0029                     dispLCD@col:	
  3044                           ; 1 bytes @ 0x9
  3045                           
  3046  0029                     salva_atuadores_init@dado:	
  3047                           ; 1 bytes @ 0x9
  3048                           
  3049  0029                     serialIOscan@i:	
  3050                           ; 1 bytes @ 0x9
  3051                           
  3052  0029                     teclado_borda@tecla:	
  3053                           ; 1 bytes @ 0x9
  3054                           
  3055  0029                     dignum_tam@num:	
  3056                           ; 1 bytes @ 0x9
  3057                           
  3058  0029                     ___lldiv@quotient:	
  3059                           ; 2 bytes @ 0x9
  3060                           
  3061                           
  3062                           ; 4 bytes @ 0x9
  3063  0029                     	ds	1
  3064  002A                     ??_MCP4725:
  3065  002A                     ??_dispLCD_str:	
  3066                           ; 1 bytes @ 0xA
  3067                           
  3068  002A                     salva_atuadores_init@mask:	
  3069                           ; 1 bytes @ 0xA
  3070                           
  3071  002A                     dispLCD@str:	
  3072                           ; 1 bytes @ 0xA
  3073                           
  3074                           
  3075                           ; 2 bytes @ 0xA
  3076  002A                     	ds	1
  3077  002B                     ??_dignum_tam:
  3078  002B                     dispLCD_str@lin:	
  3079                           ; 1 bytes @ 0xB
  3080                           
  3081  002B                     salvar_dado@adrs:	
  3082                           ; 1 bytes @ 0xB
  3083                           
  3084  002B                     dignum_conc@dig:	
  3085                           ; 1 bytes @ 0xB
  3086                           
  3087  002B                     salvar_receita@aux:	
  3088                           ; 1 bytes @ 0xB
  3089                           
  3090                           
  3091                           ; 2 bytes @ 0xB
  3092  002B                     	ds	1
  3093  002C                     ??_dispLCD:
  3094  002C                     dispLCD_str@c:	
  3095                           ; 1 bytes @ 0xC
  3096                           
  3097  002C                     dignum_tam@tam:	
  3098                           ; 1 bytes @ 0xC
  3099                           
  3100  002C                     salvar_dado@aux:	
  3101                           ; 1 bytes @ 0xC
  3102                           
  3103  002C                     _fifo_print$392:	
  3104                           ; 2 bytes @ 0xC
  3105                           
  3106                           
  3107                           ; 2 bytes @ 0xC
  3108  002C                     	ds	1
  3109  002D                     ??_fifo_alinharPrint:
  3110  002D                     ?_dispLCD_num:	
  3111                           ; 1 bytes @ 0xD
  3112                           
  3113  002D                     dispLCD@pos:	
  3114                           ; 1 bytes @ 0xD
  3115                           
  3116  002D                     dispLCD_num@lin:	
  3117                           ; 1 bytes @ 0xD
  3118                           
  3119  002D                     salvar_receita@i:	
  3120                           ; 1 bytes @ 0xD
  3121                           
  3122  002D                     ___lldiv@counter:	
  3123                           ; 1 bytes @ 0xD
  3124                           
  3125                           
  3126                           ; 1 bytes @ 0xD
  3127  002D                     	ds	1
  3128  002E                     ?_I2C_init:
  3129  002E                     ?_initEUSART:	
  3130                           ; 1 bytes @ 0xE
  3131                           
  3132  002E                     dispLCD_num@col:	
  3133                           ; 1 bytes @ 0xE
  3134                           
  3135  002E                     fifo_print@completar:	
  3136                           ; 1 bytes @ 0xE
  3137                           
  3138  002E                     I2C_init@freq:	
  3139                           ; 1 bytes @ 0xE
  3140                           
  3141  002E                     initEUSART@baudRate:	
  3142                           ; 4 bytes @ 0xE
  3143                           
  3144                           
  3145                           ; 4 bytes @ 0xE
  3146  002E                     	ds	1
  3147  002F                     fifo_print@indPrint:
  3148  002F                     dispLCD_num@num:	
  3149                           ; 1 bytes @ 0xF
  3150                           
  3151                           
  3152                           ; 2 bytes @ 0xF
  3153  002F                     	ds	1
  3154  0030                     fifo_print@i:
  3155  0030                     fifo_alinharPrint@cont:	
  3156                           ; 1 bytes @ 0x10
  3157                           
  3158                           
  3159                           ; 1 bytes @ 0x10
  3160  0030                     	ds	1
  3161  0031                     dispLCD_num@tam:
  3162  0031                     fifo_print@atraso:	
  3163                           ; 1 bytes @ 0x11
  3164                           
  3165  0031                     fifo_alinharPrint@i:	
  3166                           ; 1 bytes @ 0x11
  3167                           
  3168                           
  3169                           ; 1 bytes @ 0x11
  3170  0031                     	ds	1
  3171  0032                     ??_I2C_init:
  3172  0032                     ??_initEUSART:	
  3173                           ; 1 bytes @ 0x12
  3174                           
  3175  0032                     ??_dispLCD_num:	
  3176                           ; 1 bytes @ 0x12
  3177                           
  3178  0032                     fifo_print@comando:	
  3179                           ; 1 bytes @ 0x12
  3180                           
  3181  0032                     fifo_alinharPrint@aux:	
  3182                           ; 1 bytes @ 0x12
  3183                           
  3184                           
  3185                           ; 1 bytes @ 0x12
  3186  0032                     	ds	1
  3187  0033                     ??_fifo_delete:
  3188  0033                     ??_fifo_add:	
  3189                           ; 1 bytes @ 0x13
  3190                           
  3191  0033                     ??_fifo_add_tempo:	
  3192                           ; 1 bytes @ 0x13
  3193                           
  3194  0033                     ??_fifo_add_control:	
  3195                           ; 1 bytes @ 0x13
  3196                           
  3197                           
  3198                           ; 1 bytes @ 0x13
  3199  0033                     	ds	1
  3200  0034                     fifo_add@passo:
  3201  0034                     fifo_add_tempo@t:	
  3202                           ; 1 bytes @ 0x14
  3203                           
  3204  0034                     fifo_add_control@c:	
  3205                           ; 1 bytes @ 0x14
  3206                           
  3207                           
  3208                           ; 1 bytes @ 0x14
  3209  0034                     	ds	1
  3210  0035                     dispLCD_num@size:
  3211                           
  3212                           ; 1 bytes @ 0x15
  3213  0035                     	ds	1
  3214  0036                     dispLCD_num@sinal:
  3215                           
  3216                           ; 1 bytes @ 0x16
  3217  0036                     	ds	1
  3218  0037                     dispLCD_num@div:
  3219                           
  3220                           ; 2 bytes @ 0x17
  3221  0037                     	ds	1
  3222  0038                     ?_wifi_init:
  3223  0038                     wifi_init@br:	
  3224                           ; 1 bytes @ 0x18
  3225                           
  3226                           
  3227                           ; 4 bytes @ 0x18
  3228  0038                     	ds	1
  3229  0039                     ?_printExec:
  3230  0039                     printExec@ind:	
  3231                           ; 1 bytes @ 0x19
  3232                           
  3233                           
  3234                           ; 1 bytes @ 0x19
  3235  0039                     	ds	1
  3236  003A                     ??_printExec:
  3237                           
  3238                           ; 1 bytes @ 0x1A
  3239  003A                     	ds	2
  3240  003C                     ??_wifi_init:
  3241                           
  3242                           ; 1 bytes @ 0x1C
  3243  003C                     	ds	4
  3244  0040                     _printExec$417:
  3245                           
  3246                           ; 2 bytes @ 0x20
  3247  0040                     	ds	2
  3248  0042                     printExec@col:
  3249                           
  3250                           ; 1 bytes @ 0x22
  3251  0042                     	ds	1
  3252  0043                     printExec@passo:
  3253                           
  3254                           ; 1 bytes @ 0x23
  3255  0043                     	ds	1
  3256                           
  3257                           	psect	maintext
  3258  043E                     __pmaintext:	
  3259 ;;
  3260 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  3261 ;;
  3262 ;; *************** function _main *****************
  3263 ;; Defined at:
  3264 ;;		line 70 in file "main.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;		None
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;  j               1   58[BANK1 ] unsigned char 
  3269 ;;  j               1   56[BANK1 ] unsigned char 
  3270 ;;  j               1   54[BANK1 ] unsigned char 
  3271 ;;  j               1   52[BANK1 ] unsigned char 
  3272 ;;  i               1   57[BANK1 ] unsigned char 
  3273 ;;  i               1   55[BANK1 ] unsigned char 
  3274 ;;  i               1   53[BANK1 ] unsigned char 
  3275 ;;  i               1   51[BANK1 ] unsigned char 
  3276 ;;  lema           20    4[BANK1 ] unsigned char [20]
  3277 ;;  ptr             1   50[BANK1 ] PTR unsigned char 
  3278 ;;		 -> main@lema(20), 
  3279 ;;  i               1   47[BANK1 ] unsigned char 
  3280 ;;  vetor_aux      16    0        unsigned char [16]
  3281 ;;  num             2   62[BANK1 ] unsigned int 
  3282 ;;  ciclos          2   60[BANK1 ] unsigned int 
  3283 ;;  pt              2    0        PTR unsigned char 
  3284 ;;  tecla           1   65[BANK1 ] unsigned char 
  3285 ;;  estado          1   64[BANK1 ] unsigned char 
  3286 ;;  botao           1   59[BANK1 ] unsigned char 
  3287 ;;  meAtuadores     1   49[BANK1 ] unsigned char 
  3288 ;;  vetorIn         1   48[BANK1 ] unsigned char [1]
  3289 ;;  vetorOut        1   46[BANK1 ] unsigned char [1]
  3290 ;;  init_cond       1   45[BANK1 ] unsigned char 
  3291 ;;  aux             1   26[BANK1 ] unsigned char 
  3292 ;;  auxPasso        1   25[BANK1 ] unsigned char 
  3293 ;;  contPassos      1   24[BANK1 ] unsigned char 
  3294 ;;  atuador         1    0        unsigned char 
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  1    wreg      void 
  3297 ;; Registers used:
  3298 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3299 ;; Tracked objects:
  3300 ;;		On entry : B00/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3304 ;;      Params:         0       0       0       0       0
  3305 ;;      Locals:         0       0      62       0       0
  3306 ;;      Temps:          0       0       4       0       0
  3307 ;;      Totals:         0       0      66       0       0
  3308 ;;Total ram usage:       66 bytes
  3309 ;; Hardware stack levels required when called:    6
  3310 ;; This function calls:
  3311 ;;		_I2C_init
  3312 ;;		_MCP4725
  3313 ;;		_Wifi_mode
  3314 ;;		___awmod
  3315 ;;		_alt_atuador
  3316 ;;		_delay
  3317 ;;		_dignum_apagar
  3318 ;;		_dignum_conc
  3319 ;;		_dispLCD
  3320 ;;		_dispLCD_clr
  3321 ;;		_dispLCD_dataReg
  3322 ;;		_dispLCD_init
  3323 ;;		_dispLCD_lincol
  3324 ;;		_dispLCD_num
  3325 ;;		_dispLCD_str
  3326 ;;		_fifo_add
  3327 ;;		_fifo_add_ciclo
  3328 ;;		_fifo_add_control
  3329 ;;		_fifo_add_tempo
  3330 ;;		_fifo_adrs
  3331 ;;		_fifo_delete
  3332 ;;		_fifo_disponivel
  3333 ;;		_fifo_indice
  3334 ;;		_fifo_indicePrint_dec
  3335 ;;		_fifo_indicePrint_inc
  3336 ;;		_fifo_print
  3337 ;;		_fifo_tam
  3338 ;;		_getContCiclos
  3339 ;;		_getIndicePassos
  3340 ;;		_initSerialIO
  3341 ;;		_init_atuadores
  3342 ;;		_ler_atuador
  3343 ;;		_printExec
  3344 ;;		_salva_atuadores_init
  3345 ;;		_salvar_dado
  3346 ;;		_salvar_receita
  3347 ;;		_serialIOscan
  3348 ;;		_setT1
  3349 ;;		_statusT1
  3350 ;;		_teclado_borda
  3351 ;;		_teclado_init
  3352 ;;		_timer1_init
  3353 ;;		_wifi_init
  3354 ;; This function is called by:
  3355 ;;		Startup code after reset
  3356 ;; This function uses a non-reentrant model
  3357 ;;
  3358                           
  3359                           
  3360                           ;psect for function _main
  3361  043E                     _main:
  3362  043E                     l7594:	
  3363                           ;incstack = 0
  3364                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3365                           
  3366                           
  3367                           ;main.c: 72:     dispLCD_init();
  3368  043E  160A  158A  252A  120A  118A  	fcall	_dispLCD_init
  3369                           
  3370                           ;main.c: 73:     teclado_init();
  3371  0443  160A  158A  21DB  120A  118A  	fcall	_teclado_init
  3372                           
  3373                           ;main.c: 74:     timer1_init();
  3374  0448  160A  158A  225D  120A  118A  	fcall	_timer1_init
  3375                           
  3376                           ;main.c: 75:     I2C_init(20000000);
  3377  044D  3001               	movlw	1
  3378  044E  1283               	bcf	3,5	;RP0=0, select bank0
  3379  044F  1303               	bcf	3,6	;RP1=0, select bank0
  3380  0450  00B1               	movwf	I2C_init@freq+3
  3381  0451  3031               	movlw	49
  3382  0452  00B0               	movwf	I2C_init@freq+2
  3383  0453  302D               	movlw	45
  3384  0454  00AF               	movwf	I2C_init@freq+1
  3385  0455  3000               	movlw	0
  3386  0456  00AE               	movwf	I2C_init@freq
  3387  0457  160A  158A  241C  120A  118A  	fcall	_I2C_init
  3388                           
  3389                           ;main.c: 76:     MCP4725(0);
  3390  045C  3000               	movlw	0
  3391  045D  1283               	bcf	3,5	;RP0=0, select bank0
  3392  045E  1303               	bcf	3,6	;RP1=0, select bank0
  3393  045F  00A8               	movwf	MCP4725@Vout
  3394  0460  00A9               	movwf	MCP4725@Vout+1
  3395  0461  160A  158A  2321  120A  118A  	fcall	_MCP4725
  3396                           
  3397                           ;main.c: 77:     wifi.init(115200);
  3398  0466  3000               	movlw	0
  3399  0467  1283               	bcf	3,5	;RP0=0, select bank0
  3400  0468  1303               	bcf	3,6	;RP1=0, select bank0
  3401  0469  00BB               	movwf	wifi_init@br+3
  3402  046A  3001               	movlw	1
  3403  046B  00BA               	movwf	wifi_init@br+2
  3404  046C  30C2               	movlw	194
  3405  046D  00B9               	movwf	wifi_init@br+1
  3406  046E  3000               	movlw	0
  3407  046F  00B8               	movwf	wifi_init@br
  3408  0470  1683               	bsf	3,5	;RP0=1, select bank3
  3409  0471  1703               	bsf	3,6	;RP1=1, select bank3
  3410  0472  0852               	movf	_wifi^(0+384),w
  3411  0473  120A  118A  2069  120A  118A  	fcall	fptable
  3412  0478                     l7596:
  3413                           
  3414                           ;main.c: 78:     wifi.mode(1);
  3415  0478  1283               	bcf	3,5	;RP0=0, select bank0
  3416  0479  1303               	bcf	3,6	;RP1=0, select bank0
  3417  047A  01A4               	clrf	Wifi_mode@d
  3418  047B  0AA4               	incf	Wifi_mode@d,f
  3419  047C  1683               	bsf	3,5	;RP0=1, select bank3
  3420  047D  1703               	bsf	3,6	;RP1=1, select bank3
  3421  047E  0855               	movf	(low ((_wifi| (0+256)+3)))^(0+128),w
  3422  047F  120A  118A  2069  120A  118A  	fcall	fptable
  3423  0484                     l7598:
  3424                           
  3425                           ;main.c: 81:     char tecla = 0;
  3426  0484  1683               	bsf	3,5	;RP0=1, select bank1
  3427  0485  1303               	bcf	3,6	;RP1=0, select bank1
  3428  0486  01E1               	clrf	main@tecla^(0+128)
  3429  0487                     l7600:
  3430                           
  3431                           ;main.c: 82:     char estado = 0;
  3432  0487  01E0               	clrf	main@estado^(0+128)
  3433  0488                     l7602:
  3434                           
  3435                           ;main.c: 83:     char atuador;;main.c: 84:     char vetor_aux[16];;main.c: 85:     char 
      +                          init_cond = 0;
  3436  0488  01CD               	clrf	main@init_cond^(0+128)
  3437  0489                     l7604:
  3438                           
  3439                           ;main.c: 86:     char *pt;;main.c: 88:     char contPassos = 0;
  3440  0489  01B8               	clrf	main@contPassos^(0+128)
  3441  048A                     l7606:
  3442                           
  3443                           ;main.c: 89:     char vetorIn[1] = { 0 };
  3444  048A  01D0               	clrf	main@vetorIn^(0+128)
  3445  048B                     l7608:
  3446                           
  3447                           ;main.c: 90:     char vetorOut[1] = { 0 };
  3448  048B  01CE               	clrf	main@vetorOut^(0+128)
  3449  048C                     l7610:
  3450                           
  3451                           ;main.c: 91:     initSerialIO( vetorIn, vetorOut, 1 );
  3452  048C  30CE               	movlw	(low (main@vetorOut| 0))& (0+255)
  3453  048D  00A0               	movwf	??_main^(0+128)
  3454  048E  0820               	movf	??_main^(0+128),w
  3455  048F  1283               	bcf	3,5	;RP0=0, select bank0
  3456  0490  1303               	bcf	3,6	;RP1=0, select bank0
  3457  0491  00A0               	movwf	initSerialIO@ptrOut
  3458  0492  01A1               	clrf	initSerialIO@length
  3459  0493  0AA1               	incf	initSerialIO@length,f
  3460  0494  30D0               	movlw	(low (main@vetorIn| 0))& (0+255)
  3461  0495  160A  158A  2656  120A  118A  	fcall	_initSerialIO
  3462  049A                     l7612:
  3463                           
  3464                           ;main.c: 92:     char meAtuadores = -1;
  3465  049A  30FF               	movlw	255
  3466  049B  1683               	bsf	3,5	;RP0=1, select bank1
  3467  049C  1303               	bcf	3,6	;RP1=0, select bank1
  3468  049D  00A0               	movwf	??_main^(0+128)
  3469  049E  0820               	movf	??_main^(0+128),w
  3470  049F  00D1               	movwf	main@meAtuadores^(0+128)
  3471  04A0                     l7614:
  3472                           
  3473                           ;main.c: 93:     char auxPasso = 0;
  3474  04A0  01B9               	clrf	main@auxPasso^(0+128)
  3475  04A1                     l7616:
  3476                           
  3477                           ;main.c: 94:     char aux = 2;
  3478  04A1  3002               	movlw	2
  3479  04A2  00A0               	movwf	??_main^(0+128)
  3480  04A3  0820               	movf	??_main^(0+128),w
  3481  04A4  00BA               	movwf	main@aux^(0+128)
  3482  04A5                     l7618:
  3483                           
  3484                           ;main.c: 95:     unsigned int num = 0;
  3485  04A5  01DE               	clrf	main@num^(0+128)
  3486  04A6  01DF               	clrf	(main@num+1)^(0+128)
  3487  04A7                     l7620:
  3488                           
  3489                           ;main.c: 96:     unsigned int ciclos = 0;
  3490  04A7  01DC               	clrf	main@ciclos^(0+128)
  3491  04A8  01DD               	clrf	(main@ciclos+1)^(0+128)
  3492  04A9                     l7622:
  3493                           
  3494                           ;main.c: 97:     char botao = 0;
  3495  04A9  01DB               	clrf	main@botao^(0+128)
  3496  04AA  120A  158A  2F7A   	goto	l8102
  3497  04AD                     l7624:
  3498                           
  3499                           ;main.c: 115:                             for(char i = 0; i <= 3; i++)
  3500  04AD  01D3               	clrf	main@i^(0+128)
  3501  04AE                     l7626:
  3502  04AE  3004               	movlw	4
  3503  04AF  0253               	subwf	main@i^(0+128),w
  3504  04B0  1C03               	skipc
  3505  04B1  2CB3               	goto	u5831
  3506  04B2  2CB4               	goto	u5830
  3507  04B3                     u5831:
  3508  04B3  2CB5               	goto	l7630
  3509  04B4                     u5830:
  3510  04B4  2CEE               	goto	l7648
  3511  04B5                     l7630:
  3512                           
  3513                           ;main.c: 116:                             {;main.c: 117:                                
      +                           for(char j = 0; j <= 19; j++)
  3514  04B5  01D4               	clrf	main@j^(0+128)
  3515  04B6                     l7632:
  3516  04B6  3014               	movlw	20
  3517  04B7  0254               	subwf	main@j^(0+128),w
  3518  04B8  1C03               	skipc
  3519  04B9  2CBB               	goto	u5841
  3520  04BA  2CBC               	goto	u5840
  3521  04BB                     u5841:
  3522  04BB  2CBD               	goto	l7636
  3523  04BC                     u5840:
  3524  04BC  2CE9               	goto	l7644
  3525  04BD                     l7636:
  3526                           
  3527                           ;main.c: 118:                                 {;main.c: 119:                            
      +                                   IHM.printpos(i, j, "\377");
  3528  04BD  0853               	movf	main@i^(0+128),w
  3529  04BE  00A0               	movwf	??_main^(0+128)
  3530  04BF  0820               	movf	??_main^(0+128),w
  3531  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  3532  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  3533  04C2  00A8               	movwf	dispLCD@lin
  3534  04C3  1683               	bsf	3,5	;RP0=1, select bank1
  3535  04C4  1303               	bcf	3,6	;RP1=0, select bank1
  3536  04C5  0854               	movf	main@j^(0+128),w
  3537  04C6  00A1               	movwf	(??_main+1)^(0+128)
  3538  04C7  0821               	movf	(??_main+1)^(0+128),w
  3539  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  3540  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  3541  04CA  00A9               	movwf	dispLCD@col
  3542  04CB  30E9               	movlw	low (STR_1| (0+32768))
  3543  04CC  00AA               	movwf	dispLCD@str
  3544  04CD  3092               	movlw	high (STR_1| (0+32768))
  3545  04CE  00AB               	movwf	dispLCD@str+1
  3546  04CF  1683               	bsf	3,5	;RP0=1, select bank1
  3547  04D0  1303               	bcf	3,6	;RP1=0, select bank1
  3548  04D1  0864               	movf	(low ((_IHM| 0+2)))^(0+128),w
  3549  04D2  120A  118A  2069  120A  118A  	fcall	fptable
  3550  04D7                     l7638:
  3551                           
  3552                           ;main.c: 120:                                     delay(10);
  3553  04D7  300A               	movlw	10
  3554  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  3555  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  3556  04DA  00A0               	movwf	delay@t
  3557  04DB  3000               	movlw	0
  3558  04DC  00A1               	movwf	delay@t+1
  3559  04DD  160A  158A  22C7  120A  118A  	fcall	_delay
  3560  04E2                     l7640:
  3561                           
  3562                           ;main.c: 121:                                 }
  3563  04E2  3001               	movlw	1
  3564  04E3  1683               	bsf	3,5	;RP0=1, select bank1
  3565  04E4  1303               	bcf	3,6	;RP1=0, select bank1
  3566  04E5  00A0               	movwf	??_main^(0+128)
  3567  04E6  0820               	movf	??_main^(0+128),w
  3568  04E7  07D4               	addwf	main@j^(0+128),f
  3569  04E8  2CB6               	goto	l7632
  3570  04E9                     l7644:
  3571                           
  3572                           ;main.c: 122:                             }
  3573  04E9  3001               	movlw	1
  3574  04EA  00A0               	movwf	??_main^(0+128)
  3575  04EB  0820               	movf	??_main^(0+128),w
  3576  04EC  07D3               	addwf	main@i^(0+128),f
  3577  04ED  2CAE               	goto	l7626
  3578  04EE                     l7648:
  3579                           
  3580                           ;main.c: 124:                             for(char i = 0; i <= 3; i++)
  3581  04EE  01D5               	clrf	main@i_974^(0+128)
  3582  04EF                     l7650:
  3583  04EF  3004               	movlw	4
  3584  04F0  0255               	subwf	main@i_974^(0+128),w
  3585  04F1  1C03               	skipc
  3586  04F2  2CF4               	goto	u5851
  3587  04F3  2CF5               	goto	u5850
  3588  04F4                     u5851:
  3589  04F4  2CF6               	goto	l7654
  3590  04F5                     u5850:
  3591  04F5  2D2F               	goto	l686
  3592  04F6                     l7654:
  3593                           
  3594                           ;main.c: 125:                             {;main.c: 126:                                
      +                           for(char j = 0; j <= 19; j++)
  3595  04F6  01D6               	clrf	main@j_975^(0+128)
  3596  04F7                     l7656:
  3597  04F7  3014               	movlw	20
  3598  04F8  0256               	subwf	main@j_975^(0+128),w
  3599  04F9  1C03               	skipc
  3600  04FA  2CFC               	goto	u5861
  3601  04FB  2CFD               	goto	u5860
  3602  04FC                     u5861:
  3603  04FC  2CFE               	goto	l7660
  3604  04FD                     u5860:
  3605  04FD  2D2A               	goto	l7668
  3606  04FE                     l7660:
  3607                           
  3608                           ;main.c: 127:                                 {;main.c: 128:                            
      +                                   IHM.printpos(i, j, " ");
  3609  04FE  0855               	movf	main@i_974^(0+128),w
  3610  04FF  00A0               	movwf	??_main^(0+128)
  3611  0500  0820               	movf	??_main^(0+128),w
  3612  0501  1283               	bcf	3,5	;RP0=0, select bank0
  3613  0502  1303               	bcf	3,6	;RP1=0, select bank0
  3614  0503  00A8               	movwf	dispLCD@lin
  3615  0504  1683               	bsf	3,5	;RP0=1, select bank1
  3616  0505  1303               	bcf	3,6	;RP1=0, select bank1
  3617  0506  0856               	movf	main@j_975^(0+128),w
  3618  0507  00A1               	movwf	(??_main+1)^(0+128)
  3619  0508  0821               	movf	(??_main+1)^(0+128),w
  3620  0509  1283               	bcf	3,5	;RP0=0, select bank0
  3621  050A  1303               	bcf	3,6	;RP1=0, select bank0
  3622  050B  00A9               	movwf	dispLCD@col
  3623  050C  3058               	movlw	low ((STR_13+19)| (0+32768))
  3624  050D  00AA               	movwf	dispLCD@str
  3625  050E  3091               	movlw	high ((STR_13+19)| (0+32768))
  3626  050F  00AB               	movwf	dispLCD@str+1
  3627  0510  1683               	bsf	3,5	;RP0=1, select bank1
  3628  0511  1303               	bcf	3,6	;RP1=0, select bank1
  3629  0512  0864               	movf	(low ((_IHM| 0+2)))^(0+128),w
  3630  0513  120A  118A  2069  120A  118A  	fcall	fptable
  3631  0518                     l7662:
  3632                           
  3633                           ;main.c: 129:                                     delay(10);
  3634  0518  300A               	movlw	10
  3635  0519  1283               	bcf	3,5	;RP0=0, select bank0
  3636  051A  1303               	bcf	3,6	;RP1=0, select bank0
  3637  051B  00A0               	movwf	delay@t
  3638  051C  3000               	movlw	0
  3639  051D  00A1               	movwf	delay@t+1
  3640  051E  160A  158A  22C7  120A  118A  	fcall	_delay
  3641  0523                     l7664:
  3642                           
  3643                           ;main.c: 130:                                 }
  3644  0523  3001               	movlw	1
  3645  0524  1683               	bsf	3,5	;RP0=1, select bank1
  3646  0525  1303               	bcf	3,6	;RP1=0, select bank1
  3647  0526  00A0               	movwf	??_main^(0+128)
  3648  0527  0820               	movf	??_main^(0+128),w
  3649  0528  07D6               	addwf	main@j_975^(0+128),f
  3650  0529  2CF7               	goto	l7656
  3651  052A                     l7668:
  3652                           
  3653                           ;main.c: 131:                             }
  3654  052A  3001               	movlw	1
  3655  052B  00A0               	movwf	??_main^(0+128)
  3656  052C  0820               	movf	??_main^(0+128),w
  3657  052D  07D5               	addwf	main@i_974^(0+128),f
  3658  052E  2CEF               	goto	l7650
  3659  052F                     l686:
  3660                           
  3661                           ;main.c: 132:                             estado = 1;
  3662  052F  01E0               	clrf	main@estado^(0+128)
  3663  0530  0AE0               	incf	main@estado^(0+128),f
  3664                           
  3665                           ;main.c: 133:                             break;
  3666  0531  120A  158A  2FE5   	goto	l8104
  3667  0534                     l7672:
  3668                           
  3669                           ;main.c: 136:                             IHM.printpos(1, 0, "      SEGGTTI       ");
  3670  0534  1283               	bcf	3,5	;RP0=0, select bank0
  3671  0535  1303               	bcf	3,6	;RP1=0, select bank0
  3672  0536  01A8               	clrf	dispLCD@lin
  3673  0537  0AA8               	incf	dispLCD@lin,f
  3674  0538  01A9               	clrf	dispLCD@col
  3675  0539  3084               	movlw	low (STR_3| (0+32768))
  3676  053A  00AA               	movwf	dispLCD@str
  3677  053B  3091               	movlw	high (STR_3| (0+32768))
  3678  053C  00AB               	movwf	dispLCD@str+1
  3679  053D  1683               	bsf	3,5	;RP0=1, select bank1
  3680  053E  1303               	bcf	3,6	;RP1=0, select bank1
  3681  053F  0864               	movf	(low ((_IHM| 0+2)))^(0+128),w
  3682  0540  120A  118A  2069  120A  118A  	fcall	fptable
  3683  0545                     l7674:
  3684                           
  3685                           ;main.c: 138:                             char lema[20] = "Mundo ao seu comando";
  3686  0545  30A4               	movlw	main@lema& (0+255)
  3687  0546  0084               	movwf	4
  3688  0547  30AE               	movlw	low main@F1614
  3689  0548  1683               	bsf	3,5	;RP0=1, select bank1
  3690  0549  1303               	bcf	3,6	;RP1=0, select bank1
  3691  054A  00A0               	movwf	??_main^(0+128)
  3692  054B  0804               	movf	4,w
  3693  054C  00A1               	movwf	(??_main^(0+128)+1)
  3694  054D  3014               	movlw	20
  3695  054E  00A2               	movwf	(??_main^(0+128)+2)
  3696  054F                     u5870:
  3697  054F  0820               	movf	??_main^(0+128),w
  3698  0550  0084               	movwf	4
  3699  0551  1783               	bsf	3,7	;select IRP bank3
  3700  0552  0800               	movf	0,w
  3701  0553  00A3               	movwf	(??_main^(0+128)+3)
  3702  0554  0AA0               	incf	??_main^(0+128),f
  3703  0555  0821               	movf	(??_main^(0+128)+1),w
  3704  0556  0084               	movwf	4
  3705  0557  1383               	bcf	3,7	;select IRP bank1
  3706  0558  0823               	movf	(??_main^(0+128)+3),w
  3707  0559  0080               	movwf	0
  3708  055A  0AA1               	incf	(??_main^(0+128)+1),f
  3709  055B  0BA2               	decfsz	(??_main^(0+128)+2),f
  3710  055C  2D4F               	goto	u5870
  3711  055D                     l7676:
  3712                           
  3713                           ;main.c: 139:                             char i = 0;
  3714  055D  01CF               	clrf	main@i_980^(0+128)
  3715  055E                     l7678:
  3716                           
  3717                           ;main.c: 140:                             char *ptr;;main.c: 142:                       
      +                                for(ptr = lema; *ptr != 0; ptr++)
  3718  055E  30A4               	movlw	(low (main@lema| 0))& (0+255)
  3719  055F  00A0               	movwf	??_main^(0+128)
  3720  0560  0820               	movf	??_main^(0+128),w
  3721  0561  00D2               	movwf	main@ptr^(0+128)
  3722  0562  120A  118A  2AB2   	goto	l7688
  3723                           
  3724                           	psect	text1
  3725  1A6E                     __ptext1:	
  3726 ;; *************** function _wifi_init *****************
  3727 ;; Defined at:
  3728 ;;		line 12 in file "wifi.c"
  3729 ;; Parameters:    Size  Location     Type
  3730 ;;  br              4   24[BANK0 ] long 
  3731 ;; Auto vars:     Size  Location     Type
  3732 ;;		None
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  1    wreg      void 
  3735 ;; Registers used:
  3736 ;;		wreg, status,2, status,0, pclath, cstack
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3742 ;;      Params:         0       4       0       0       0
  3743 ;;      Locals:         0       0       0       0       0
  3744 ;;      Temps:          0       0       0       0       0
  3745 ;;      Totals:         0       4       0       0       0
  3746 ;;Total ram usage:        4 bytes
  3747 ;; Hardware stack levels used:    1
  3748 ;; Hardware stack levels required when called:    4
  3749 ;; This function calls:
  3750 ;;		_initEUSART
  3751 ;; This function is called by:
  3752 ;;		_main
  3753 ;; This function uses a non-reentrant model
  3754 ;;
  3755                           
  3756                           
  3757                           ;psect for function _wifi_init
  3758  1A6E                     _wifi_init:
  3759  1A6E                     l7504:	
  3760                           ;incstack = 0
  3761                           ; Regs used in _wifi_init: [wreg+status,2+status,0+pclath+cstack]
  3762                           
  3763                           
  3764                           ;wifi.c: 12: void wifi_init( long br);wifi.c: 13: {;wifi.c: 14:     eusart.init(br);
  3765  1A6E  1283               	bcf	3,5	;RP0=0, select bank0
  3766  1A6F  1303               	bcf	3,6	;RP1=0, select bank0
  3767  1A70  083B               	movf	wifi_init@br+3,w
  3768  1A71  00B1               	movwf	initEUSART@baudRate+3
  3769  1A72  083A               	movf	wifi_init@br+2,w
  3770  1A73  00B0               	movwf	initEUSART@baudRate+2
  3771  1A74  0839               	movf	wifi_init@br+1,w
  3772  1A75  00AF               	movwf	initEUSART@baudRate+1
  3773  1A76  0838               	movf	wifi_init@br,w
  3774  1A77  00AE               	movwf	initEUSART@baudRate
  3775  1A78  086A               	movf	low ((_eusart| 0+6)),w
  3776  1A79  120A  118A  2069  160A  158A  	fcall	fptable
  3777  1A7E                     l1034:
  3778  1A7E  0008               	return
  3779  1A7F                     __end_of_wifi_init:
  3780                           
  3781                           	psect	text2
  3782  147C                     __ptext2:	
  3783 ;; *************** function _initEUSART *****************
  3784 ;; Defined at:
  3785 ;;		line 137 in file "eusart.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;  baudRate        4   14[BANK0 ] unsigned long 
  3788 ;; Auto vars:     Size  Location     Type
  3789 ;;		None
  3790 ;; Return value:  Size  Location     Type
  3791 ;;                  1    wreg      void 
  3792 ;; Registers used:
  3793 ;;		wreg, status,2, status,0, pclath, cstack
  3794 ;; Tracked objects:
  3795 ;;		On entry : 0/0
  3796 ;;		On exit  : 0/0
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3799 ;;      Params:         0       4       0       0       0
  3800 ;;      Locals:         0       0       0       0       0
  3801 ;;      Temps:          0       6       0       0       0
  3802 ;;      Totals:         0      10       0       0       0
  3803 ;;Total ram usage:       10 bytes
  3804 ;; Hardware stack levels used:    1
  3805 ;; Hardware stack levels required when called:    3
  3806 ;; This function calls:
  3807 ;;		___lldiv
  3808 ;; This function is called by:
  3809 ;;		_wifi_init
  3810 ;; This function uses a non-reentrant model
  3811 ;;
  3812                           
  3813                           
  3814                           ;psect for function _initEUSART
  3815  147C                     _initEUSART:
  3816  147C                     l6948:	
  3817                           ;incstack = 0
  3818                           ; Regs used in _initEUSART: [wreg+status,2+status,0+pclath+cstack]
  3819                           
  3820                           
  3821                           ;eusart.c: 137: void initEUSART( unsigned long baudRate );eusart.c: 138: {;eusart.c: 139
      +                          :     INTCONbits.GIE = 0;
  3822  147C  138B               	bcf	11,7	;volatile
  3823  147D                     l6950:
  3824                           
  3825                           ;eusart.c: 142:     SPBRbits.u16 = (unsigned int)( (20000000 / (baudRate<<2)) - 1);
  3826  147D  1283               	bcf	3,5	;RP0=0, select bank0
  3827  147E  1303               	bcf	3,6	;RP1=0, select bank0
  3828  147F  082E               	movf	initEUSART@baudRate,w
  3829  1480  00B2               	movwf	??_initEUSART
  3830  1481  082F               	movf	initEUSART@baudRate+1,w
  3831  1482  00B3               	movwf	??_initEUSART+1
  3832  1483  0830               	movf	initEUSART@baudRate+2,w
  3833  1484  00B4               	movwf	??_initEUSART+2
  3834  1485  0831               	movf	initEUSART@baudRate+3,w
  3835  1486  00B5               	movwf	??_initEUSART+3
  3836  1487  3002               	movlw	2
  3837  1488                     u5125:
  3838  1488  1003               	clrc
  3839  1489  0DB2               	rlf	??_initEUSART,f
  3840  148A  0DB3               	rlf	??_initEUSART+1,f
  3841  148B  0DB4               	rlf	??_initEUSART+2,f
  3842  148C  0DB5               	rlf	??_initEUSART+3,f
  3843  148D                     u5120:
  3844  148D  3EFF               	addlw	-1
  3845  148E  1D03               	skipz
  3846  148F  2C88               	goto	u5125
  3847  1490  0835               	movf	??_initEUSART+3,w
  3848  1491  00A3               	movwf	___lldiv@divisor+3
  3849  1492  0834               	movf	??_initEUSART+2,w
  3850  1493  00A2               	movwf	___lldiv@divisor+2
  3851  1494  0833               	movf	??_initEUSART+1,w
  3852  1495  00A1               	movwf	___lldiv@divisor+1
  3853  1496  0832               	movf	??_initEUSART,w
  3854  1497  00A0               	movwf	___lldiv@divisor
  3855  1498  3001               	movlw	1
  3856  1499  00A7               	movwf	___lldiv@dividend+3
  3857  149A  3031               	movlw	49
  3858  149B  00A6               	movwf	___lldiv@dividend+2
  3859  149C  302D               	movlw	45
  3860  149D  00A5               	movwf	___lldiv@dividend+1
  3861  149E  3000               	movlw	0
  3862  149F  00A4               	movwf	___lldiv@dividend
  3863  14A0  160A  118A  2585  160A  118A  	fcall	___lldiv
  3864  14A5  1283               	bcf	3,5	;RP0=0, select bank0
  3865  14A6  1303               	bcf	3,6	;RP1=0, select bank0
  3866  14A7  0820               	movf	?___lldiv,w
  3867  14A8  3EFF               	addlw	255
  3868  14A9  00B6               	movwf	??_initEUSART+4
  3869  14AA  0821               	movf	?___lldiv+1,w
  3870  14AB  1803               	skipnc
  3871  14AC  3E01               	addlw	1
  3872  14AD  3EFF               	addlw	255
  3873  14AE  00B7               	movwf	??_initEUSART+5
  3874  14AF  0836               	movf	??_initEUSART+4,w
  3875  14B0  1683               	bsf	3,5	;RP0=1, select bank1
  3876  14B1  1303               	bcf	3,6	;RP1=0, select bank1
  3877  14B2  0099               	movwf	25	;volatile
  3878  14B3  1283               	bcf	3,5	;RP0=0, select bank0
  3879  14B4  1303               	bcf	3,6	;RP1=0, select bank0
  3880  14B5  0837               	movf	??_initEUSART+5,w
  3881  14B6  1683               	bsf	3,5	;RP0=1, select bank1
  3882  14B7  1303               	bcf	3,6	;RP1=0, select bank1
  3883  14B8  009A               	movwf	26	;volatile
  3884  14B9                     l6952:
  3885                           
  3886                           ;eusart.c: 146:     TXSTAbits.SYNC = 0;
  3887  14B9  1218               	bcf	24,4	;volatile
  3888  14BA                     l6954:
  3889                           
  3890                           ;eusart.c: 147:     BAUDCTLbits.BRG16 = 1;
  3891  14BA  1683               	bsf	3,5	;RP0=1, select bank3
  3892  14BB  1703               	bsf	3,6	;RP1=1, select bank3
  3893  14BC  1587               	bsf	7,3	;volatile
  3894  14BD                     l6956:
  3895                           
  3896                           ;eusart.c: 148:     TXSTAbits.BRGH = 1;
  3897  14BD  1683               	bsf	3,5	;RP0=1, select bank1
  3898  14BE  1303               	bcf	3,6	;RP1=0, select bank1
  3899  14BF  1518               	bsf	24,2	;volatile
  3900  14C0                     l6958:
  3901                           
  3902                           ;eusart.c: 150:     RCSTAbits.SPEN = 1;
  3903  14C0  1283               	bcf	3,5	;RP0=0, select bank0
  3904  14C1  1303               	bcf	3,6	;RP1=0, select bank0
  3905  14C2  1798               	bsf	24,7	;volatile
  3906  14C3                     l6960:
  3907                           
  3908                           ;eusart.c: 151:     TXSTAbits.TXEN = 1;
  3909  14C3  1683               	bsf	3,5	;RP0=1, select bank1
  3910  14C4  1303               	bcf	3,6	;RP1=0, select bank1
  3911  14C5  1698               	bsf	24,5	;volatile
  3912  14C6                     l6962:
  3913                           
  3914                           ;eusart.c: 152:     RCSTAbits.CREN = 1;
  3915  14C6  1283               	bcf	3,5	;RP0=0, select bank0
  3916  14C7  1303               	bcf	3,6	;RP1=0, select bank0
  3917  14C8  1618               	bsf	24,4	;volatile
  3918  14C9                     l6964:
  3919                           
  3920                           ;eusart.c: 154:     PIE1bits.RCIE = 1;
  3921  14C9  1683               	bsf	3,5	;RP0=1, select bank1
  3922  14CA  1303               	bcf	3,6	;RP1=0, select bank1
  3923  14CB  168C               	bsf	12,5	;volatile
  3924  14CC                     l6966:
  3925                           
  3926                           ;eusart.c: 155:     PIE1bits.TXIE = 0;
  3927  14CC  120C               	bcf	12,4	;volatile
  3928  14CD                     l6968:
  3929                           
  3930                           ;eusart.c: 156:     INTCONbits.PEIE = 1;
  3931  14CD  170B               	bsf	11,6	;volatile
  3932  14CE                     l6970:
  3933                           
  3934                           ;eusart.c: 157:     INTCONbits.GIE = 1;
  3935  14CE  178B               	bsf	11,7	;volatile
  3936  14CF                     l996:
  3937  14CF  0008               	return
  3938  14D0                     __end_of_initEUSART:
  3939                           
  3940                           	psect	text3
  3941  1A5D                     __ptext3:	
  3942 ;; *************** function _timer1_init *****************
  3943 ;; Defined at:
  3944 ;;		line 16 in file "timer1.c"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;		None
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;		None
  3949 ;; Return value:  Size  Location     Type
  3950 ;;                  1    wreg      void 
  3951 ;; Registers used:
  3952 ;;		wreg, status,2, status,0
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3958 ;;      Params:         0       0       0       0       0
  3959 ;;      Locals:         0       0       0       0       0
  3960 ;;      Temps:          0       0       0       0       0
  3961 ;;      Totals:         0       0       0       0       0
  3962 ;;Total ram usage:        0 bytes
  3963 ;; Hardware stack levels used:    1
  3964 ;; Hardware stack levels required when called:    2
  3965 ;; This function calls:
  3966 ;;		Nothing
  3967 ;; This function is called by:
  3968 ;;		_main
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           
  3973                           ;psect for function _timer1_init
  3974  1A5D                     _timer1_init:
  3975  1A5D                     l7462:	
  3976                           ;incstack = 0
  3977                           ; Regs used in _timer1_init: [wreg+status,2+status,0]
  3978                           
  3979                           
  3980                           ;timer1.c: 18:     T1CONbits.TMR1CS = 0;
  3981  1A5D  1283               	bcf	3,5	;RP0=0, select bank0
  3982  1A5E  1303               	bcf	3,6	;RP1=0, select bank0
  3983  1A5F  1090               	bcf	16,1	;volatile
  3984  1A60                     l7464:
  3985                           
  3986                           ;timer1.c: 19:     T1CONbits.T1CKPS = 0b11;
  3987  1A60  3030               	movlw	48
  3988  1A61  0490               	iorwf	16,f	;volatile
  3989  1A62                     l7466:
  3990                           
  3991                           ;timer1.c: 20:     T1CONbits.nT1SYNC = 1;
  3992  1A62  1510               	bsf	16,2	;volatile
  3993  1A63                     l7468:
  3994                           
  3995                           ;timer1.c: 21:     TMR1H = ((65536-625)>>8) & 0x00FF;
  3996  1A63  30FD               	movlw	253
  3997  1A64  008F               	movwf	15	;volatile
  3998  1A65                     l7470:
  3999                           
  4000                           ;timer1.c: 22:     TMR1L = (65536-625) & 0x00FF;
  4001  1A65  308F               	movlw	143
  4002  1A66  008E               	movwf	14	;volatile
  4003  1A67                     l7472:
  4004                           
  4005                           ;timer1.c: 23:     T1CONbits.TMR1GE = 0;
  4006  1A67  1310               	bcf	16,6	;volatile
  4007  1A68                     l7474:
  4008                           
  4009                           ;timer1.c: 25:     PIE1bits.TMR1IE = 1;
  4010  1A68  1683               	bsf	3,5	;RP0=1, select bank1
  4011  1A69  1303               	bcf	3,6	;RP1=0, select bank1
  4012  1A6A  140C               	bsf	12,0	;volatile
  4013  1A6B                     l7476:
  4014                           
  4015                           ;timer1.c: 26:     INTCONbits.PEIE = 1;
  4016  1A6B  170B               	bsf	11,6	;volatile
  4017  1A6C                     l7478:
  4018                           
  4019                           ;timer1.c: 27:     INTCONbits.GIE = 1;
  4020  1A6C  178B               	bsf	11,7	;volatile
  4021  1A6D                     l533:
  4022  1A6D  0008               	return
  4023  1A6E                     __end_of_timer1_init:
  4024                           
  4025                           	psect	text4
  4026  19DB                     __ptext4:	
  4027 ;; *************** function _teclado_init *****************
  4028 ;; Defined at:
  4029 ;;		line 29 in file "teclado.c"
  4030 ;; Parameters:    Size  Location     Type
  4031 ;;		None
  4032 ;; Auto vars:     Size  Location     Type
  4033 ;;		None
  4034 ;; Return value:  Size  Location     Type
  4035 ;;                  1    wreg      void 
  4036 ;; Registers used:
  4037 ;;		wreg, status,2
  4038 ;; Tracked objects:
  4039 ;;		On entry : 0/0
  4040 ;;		On exit  : 0/0
  4041 ;;		Unchanged: 0/0
  4042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4043 ;;      Params:         0       0       0       0       0
  4044 ;;      Locals:         0       0       0       0       0
  4045 ;;      Temps:          0       0       0       0       0
  4046 ;;      Totals:         0       0       0       0       0
  4047 ;;Total ram usage:        0 bytes
  4048 ;; Hardware stack levels used:    1
  4049 ;; Hardware stack levels required when called:    2
  4050 ;; This function calls:
  4051 ;;		Nothing
  4052 ;; This function is called by:
  4053 ;;		_main
  4054 ;; This function uses a non-reentrant model
  4055 ;;
  4056                           
  4057                           
  4058                           ;psect for function _teclado_init
  4059  19DB                     _teclado_init:
  4060  19DB                     l7446:	
  4061                           ;incstack = 0
  4062                           ; Regs used in _teclado_init: [wreg+status,2]
  4063                           
  4064                           
  4065                           ;teclado.c: 31:     PORTD = 0x00;
  4066  19DB  1283               	bcf	3,5	;RP0=0, select bank0
  4067  19DC  1303               	bcf	3,6	;RP1=0, select bank0
  4068  19DD  0188               	clrf	8	;volatile
  4069  19DE                     l7448:
  4070                           
  4071                           ;teclado.c: 32:     TRISD = 0xF0;
  4072  19DE  30F0               	movlw	240
  4073  19DF  1683               	bsf	3,5	;RP0=1, select bank1
  4074  19E0  1303               	bcf	3,6	;RP1=0, select bank1
  4075  19E1  0088               	movwf	8	;volatile
  4076  19E2                     l481:
  4077  19E2  0008               	return
  4078  19E3                     __end_of_teclado_init:
  4079                           
  4080                           	psect	text5
  4081  1B63                     __ptext5:	
  4082 ;; *************** function _teclado_borda *****************
  4083 ;; Defined at:
  4084 ;;		line 92 in file "teclado.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;		None
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;  tecla           1    9[BANK0 ] unsigned char 
  4089 ;;  aux             1    8[BANK0 ] unsigned char 
  4090 ;; Return value:  Size  Location     Type
  4091 ;;                  1    wreg      unsigned char 
  4092 ;; Registers used:
  4093 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4094 ;; Tracked objects:
  4095 ;;		On entry : 0/0
  4096 ;;		On exit  : 0/0
  4097 ;;		Unchanged: 0/0
  4098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4099 ;;      Params:         0       0       0       0       0
  4100 ;;      Locals:         0       2       0       0       0
  4101 ;;      Temps:          0       1       0       0       0
  4102 ;;      Totals:         0       3       0       0       0
  4103 ;;Total ram usage:        3 bytes
  4104 ;; Hardware stack levels used:    1
  4105 ;; Hardware stack levels required when called:    3
  4106 ;; This function calls:
  4107 ;;		_teclado_scan
  4108 ;; This function is called by:
  4109 ;;		_main
  4110 ;; This function uses a non-reentrant model
  4111 ;;
  4112                           
  4113                           
  4114                           ;psect for function _teclado_borda
  4115  1B63                     _teclado_borda:
  4116  1B63                     l7450:	
  4117                           ;incstack = 0
  4118                           ; Regs used in _teclado_borda: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4119                           
  4120                           
  4121                           ;teclado.c: 95:     char aux = 0;
  4122  1B63  1283               	bcf	3,5	;RP0=0, select bank0
  4123  1B64  1303               	bcf	3,6	;RP1=0, select bank0
  4124  1B65  01A8               	clrf	teclado_borda@aux
  4125  1B66                     l7452:
  4126                           
  4127                           ;teclado.c: 97:     tecla = teclado_scan();
  4128  1B66  160A  118A  2344  160A  158A  	fcall	_teclado_scan
  4129  1B6B  1283               	bcf	3,5	;RP0=0, select bank0
  4130  1B6C  1303               	bcf	3,6	;RP1=0, select bank0
  4131  1B6D  00A7               	movwf	??_teclado_borda
  4132  1B6E  0827               	movf	??_teclado_borda,w
  4133  1B6F  00A9               	movwf	teclado_borda@tecla
  4134  1B70                     l7454:
  4135                           
  4136                           ;teclado.c: 99:     if(tecla && !teclaAnterior)
  4137  1B70  0829               	movf	teclado_borda@tecla,w
  4138  1B71  1903               	btfsc	3,2
  4139  1B72  2B74               	goto	u5721
  4140  1B73  2B75               	goto	u5720
  4141  1B74                     u5721:
  4142  1B74  2B7E               	goto	l496
  4143  1B75                     u5720:
  4144  1B75                     l7456:
  4145  1B75  084E               	movf	_teclaAnterior,w
  4146  1B76  1D03               	btfss	3,2
  4147  1B77  2B79               	goto	u5731
  4148  1B78  2B7A               	goto	u5730
  4149  1B79                     u5731:
  4150  1B79  2B7E               	goto	l496
  4151  1B7A                     u5730:
  4152  1B7A                     l7458:
  4153                           
  4154                           ;teclado.c: 100:         aux = tecla;
  4155  1B7A  0829               	movf	teclado_borda@tecla,w
  4156  1B7B  00A7               	movwf	??_teclado_borda
  4157  1B7C  0827               	movf	??_teclado_borda,w
  4158  1B7D  00A8               	movwf	teclado_borda@aux
  4159  1B7E                     l496:
  4160                           
  4161                           ;teclado.c: 102:     teclaAnterior = tecla;
  4162  1B7E  0829               	movf	teclado_borda@tecla,w
  4163  1B7F  00A7               	movwf	??_teclado_borda
  4164  1B80  0827               	movf	??_teclado_borda,w
  4165  1B81  00CE               	movwf	_teclaAnterior
  4166                           
  4167                           ;teclado.c: 104:     return(aux);
  4168  1B82  0828               	movf	teclado_borda@aux,w
  4169  1B83                     l497:
  4170  1B83  0008               	return
  4171  1B84                     __end_of_teclado_borda:
  4172                           
  4173                           	psect	text6
  4174  1344                     __ptext6:	
  4175 ;; *************** function _teclado_scan *****************
  4176 ;; Defined at:
  4177 ;;		line 55 in file "teclado.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;		None
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;  c               1    6[BANK0 ] unsigned char 
  4182 ;;  l               1    5[BANK0 ] unsigned char 
  4183 ;;  tecla           1    4[BANK0 ] unsigned char 
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  1    wreg      unsigned char 
  4186 ;; Registers used:
  4187 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4193 ;;      Params:         0       0       0       0       0
  4194 ;;      Locals:         0       3       0       0       0
  4195 ;;      Temps:          0       4       0       0       0
  4196 ;;      Totals:         0       7       0       0       0
  4197 ;;Total ram usage:        7 bytes
  4198 ;; Hardware stack levels used:    1
  4199 ;; Hardware stack levels required when called:    2
  4200 ;; This function calls:
  4201 ;;		Nothing
  4202 ;; This function is called by:
  4203 ;;		_teclado_borda
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207                           
  4208                           ;psect for function _teclado_scan
  4209  1344                     _teclado_scan:
  4210  1344                     l4600:	
  4211                           ;incstack = 0
  4212                           ; Regs used in _teclado_scan: [wreg-fsr0h+status,2+status,0]
  4213                           
  4214                           
  4215                           ;teclado.c: 57:    char tecla = 0;
  4216  1344  1283               	bcf	3,5	;RP0=0, select bank0
  4217  1345  1303               	bcf	3,6	;RP1=0, select bank0
  4218  1346  01A4               	clrf	teclado_scan@tecla
  4219                           
  4220                           ;teclado.c: 71:     unsigned char l,c;;teclado.c: 73:     for( l=0; l<4; l++ )
  4221  1347  01A5               	clrf	teclado_scan@l
  4222  1348                     l4602:
  4223  1348  3004               	movlw	4
  4224  1349  0225               	subwf	teclado_scan@l,w
  4225  134A  1C03               	skipc
  4226  134B  2B4D               	goto	u2981
  4227  134C  2B4E               	goto	u2980
  4228  134D                     u2981:
  4229  134D  2B4F               	goto	l4606
  4230  134E                     u2980:
  4231  134E  2B8E               	goto	l4626
  4232  134F                     l4606:
  4233                           
  4234                           ;teclado.c: 74:     {;teclado.c: 75:         PORTD = (0x01 << l);
  4235  134F  3001               	movlw	1
  4236  1350  00A0               	movwf	??_teclado_scan
  4237  1351  0A25               	incf	teclado_scan@l,w
  4238  1352  2B55               	goto	u2994
  4239  1353                     u2995:
  4240  1353  1003               	clrc
  4241  1354  0DA0               	rlf	??_teclado_scan,f
  4242  1355                     u2994:
  4243  1355  3EFF               	addlw	-1
  4244  1356  1D03               	skipz
  4245  1357  2B53               	goto	u2995
  4246  1358  0820               	movf	??_teclado_scan,w
  4247  1359  0088               	movwf	8	;volatile
  4248  135A                     l4608:
  4249                           
  4250                           ;teclado.c: 77:         for( c=0; c<4; c++ )
  4251  135A  01A6               	clrf	teclado_scan@c
  4252  135B                     l4614:
  4253                           
  4254                           ;teclado.c: 78:         {;teclado.c: 80:             if( PORTD & (0x10<<c) )
  4255  135B  3010               	movlw	16
  4256  135C  00A0               	movwf	??_teclado_scan
  4257  135D  0A26               	incf	teclado_scan@c,w
  4258  135E  2B61               	goto	u3004
  4259  135F                     u3005:
  4260  135F  1003               	clrc
  4261  1360  0DA0               	rlf	??_teclado_scan,f
  4262  1361                     u3004:
  4263  1361  3EFF               	addlw	-1
  4264  1362  1D03               	skipz
  4265  1363  2B5F               	goto	u3005
  4266  1364  0820               	movf	??_teclado_scan,w
  4267  1365  0508               	andwf	8,w	;volatile
  4268  1366  1903               	btfsc	3,2
  4269  1367  2B69               	goto	u3011
  4270  1368  2B6A               	goto	u3010
  4271  1369                     u3011:
  4272  1369  2B7F               	goto	l4618
  4273  136A                     u3010:
  4274  136A                     l4616:
  4275                           
  4276                           ;teclado.c: 81:             {;teclado.c: 82:                 tecla = teclas[l][c];
  4277  136A  0825               	movf	teclado_scan@l,w
  4278  136B  00A0               	movwf	??_teclado_scan
  4279  136C  3002               	movlw	2
  4280  136D                     u3025:
  4281  136D  1003               	clrc
  4282  136E  0DA0               	rlf	??_teclado_scan,f
  4283  136F  3EFF               	addlw	-1
  4284  1370  1D03               	skipz
  4285  1371  2B6D               	goto	u3025
  4286  1372  30C2               	movlw	(low (_teclas| (0+256)))& (0+255)
  4287  1373  0720               	addwf	??_teclado_scan,w
  4288  1374  00A1               	movwf	??_teclado_scan+1
  4289  1375  0826               	movf	teclado_scan@c,w
  4290  1376  0721               	addwf	??_teclado_scan+1,w
  4291  1377  00A2               	movwf	??_teclado_scan+2
  4292  1378  0822               	movf	??_teclado_scan+2,w
  4293  1379  0084               	movwf	4
  4294  137A  1783               	bsf	3,7	;select IRP bank3
  4295  137B  0800               	movf	0,w
  4296  137C  00A3               	movwf	??_teclado_scan+3
  4297  137D  0823               	movf	??_teclado_scan+3,w
  4298  137E  00A4               	movwf	teclado_scan@tecla
  4299  137F                     l4618:
  4300                           
  4301                           ;teclado.c: 85:         }
  4302  137F  3001               	movlw	1
  4303  1380  00A0               	movwf	??_teclado_scan
  4304  1381  0820               	movf	??_teclado_scan,w
  4305  1382  07A6               	addwf	teclado_scan@c,f
  4306  1383                     l4620:
  4307  1383  3004               	movlw	4
  4308  1384  0226               	subwf	teclado_scan@c,w
  4309  1385  1C03               	skipc
  4310  1386  2B88               	goto	u3031
  4311  1387  2B89               	goto	u3030
  4312  1388                     u3031:
  4313  1388  2B5B               	goto	l4614
  4314  1389                     u3030:
  4315  1389                     l4622:
  4316                           
  4317                           ;teclado.c: 86:     }
  4318  1389  3001               	movlw	1
  4319  138A  00A0               	movwf	??_teclado_scan
  4320  138B  0820               	movf	??_teclado_scan,w
  4321  138C  07A5               	addwf	teclado_scan@l,f
  4322  138D  2B48               	goto	l4602
  4323  138E                     l4626:
  4324                           
  4325                           ;teclado.c: 87:     return( tecla );
  4326  138E  0824               	movf	teclado_scan@tecla,w
  4327  138F                     l491:
  4328  138F  0008               	return
  4329  1390                     __end_of_teclado_scan:
  4330                           
  4331                           	psect	text7
  4332  1A46                     __ptext7:	
  4333 ;; *************** function _statusT1 *****************
  4334 ;; Defined at:
  4335 ;;		line 38 in file "timer1.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;		None
  4338 ;; Auto vars:     Size  Location     Type
  4339 ;;		None
  4340 ;; Return value:  Size  Location     Type
  4341 ;;                  4    0[BANK0 ] unsigned long 
  4342 ;; Registers used:
  4343 ;;		wreg
  4344 ;; Tracked objects:
  4345 ;;		On entry : 0/0
  4346 ;;		On exit  : 0/0
  4347 ;;		Unchanged: 0/0
  4348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4349 ;;      Params:         0       4       0       0       0
  4350 ;;      Locals:         0       0       0       0       0
  4351 ;;      Temps:          0       0       0       0       0
  4352 ;;      Totals:         0       4       0       0       0
  4353 ;;Total ram usage:        4 bytes
  4354 ;; Hardware stack levels used:    1
  4355 ;; Hardware stack levels required when called:    2
  4356 ;; This function calls:
  4357 ;;		Nothing
  4358 ;; This function is called by:
  4359 ;;		_main
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363                           
  4364                           ;psect for function _statusT1
  4365  1A46                     _statusT1:
  4366  1A46                     l7484:	
  4367                           ;incstack = 0
  4368                           ; Regs used in _statusT1: [wreg]
  4369                           
  4370                           
  4371                           ;timer1.c: 40:     return( t1cont );
  4372  1A46  1283               	bcf	3,5	;RP0=0, select bank0
  4373  1A47  1303               	bcf	3,6	;RP1=0, select bank0
  4374  1A48  0847               	movf	_t1cont+3,w
  4375  1A49  00A3               	movwf	?_statusT1+3
  4376  1A4A  0846               	movf	_t1cont+2,w
  4377  1A4B  00A2               	movwf	?_statusT1+2
  4378  1A4C  0845               	movf	_t1cont+1,w
  4379  1A4D  00A1               	movwf	?_statusT1+1
  4380  1A4E  0844               	movf	_t1cont,w
  4381  1A4F  00A0               	movwf	?_statusT1
  4382  1A50                     l539:
  4383  1A50  0008               	return
  4384  1A51                     __end_of_statusT1:
  4385                           
  4386                           	psect	text8
  4387  07F0                     __ptext8:	
  4388 ;; *************** function _setT1 *****************
  4389 ;; Defined at:
  4390 ;;		line 31 in file "timer1.c"
  4391 ;; Parameters:    Size  Location     Type
  4392 ;;  c               4    0[BANK0 ] unsigned long 
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;		None
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  1    wreg      void 
  4397 ;; Registers used:
  4398 ;;		wreg
  4399 ;; Tracked objects:
  4400 ;;		On entry : 0/0
  4401 ;;		On exit  : 0/0
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4404 ;;      Params:         0       4       0       0       0
  4405 ;;      Locals:         0       0       0       0       0
  4406 ;;      Temps:          0       0       0       0       0
  4407 ;;      Totals:         0       4       0       0       0
  4408 ;;Total ram usage:        4 bytes
  4409 ;; Hardware stack levels used:    1
  4410 ;; Hardware stack levels required when called:    2
  4411 ;; This function calls:
  4412 ;;		Nothing
  4413 ;; This function is called by:
  4414 ;;		_main
  4415 ;; This function uses a non-reentrant model
  4416 ;;
  4417                           
  4418                           
  4419                           ;psect for function _setT1
  4420  07F0                     _setT1:
  4421  07F0                     l7480:	
  4422                           ;incstack = 0
  4423                           ; Regs used in _setT1: [wreg]
  4424                           
  4425                           
  4426                           ;timer1.c: 31: void setT1( unsigned long int c );timer1.c: 32: {;timer1.c: 33:     t1con
      +                          t = c;
  4427  07F0  1283               	bcf	3,5	;RP0=0, select bank0
  4428  07F1  1303               	bcf	3,6	;RP1=0, select bank0
  4429  07F2  0823               	movf	setT1@c+3,w
  4430  07F3  00C7               	movwf	_t1cont+3
  4431  07F4  0822               	movf	setT1@c+2,w
  4432  07F5  00C6               	movwf	_t1cont+2
  4433  07F6  0821               	movf	setT1@c+1,w
  4434  07F7  00C5               	movwf	_t1cont+1
  4435  07F8  0820               	movf	setT1@c,w
  4436  07F9  00C4               	movwf	_t1cont
  4437  07FA                     l7482:
  4438                           
  4439                           ;timer1.c: 34:     T1CONbits.TMR1ON = 1;
  4440  07FA  1410               	bsf	16,0	;volatile
  4441  07FB                     l536:
  4442  07FB  0008               	return
  4443  07FC                     __end_of_setT1:
  4444                           
  4445                           	psect	text9
  4446  1EC8                     __ptext9:	
  4447 ;; *************** function _serialIOscan *****************
  4448 ;; Defined at:
  4449 ;;		line 76 in file "serialIO.c"
  4450 ;; Parameters:    Size  Location     Type
  4451 ;;		None
  4452 ;; Auto vars:     Size  Location     Type
  4453 ;;  i               1    9[BANK0 ] unsigned char 
  4454 ;;  j               1    8[BANK0 ] unsigned char 
  4455 ;; Return value:  Size  Location     Type
  4456 ;;                  1    wreg      void 
  4457 ;; Registers used:
  4458 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4459 ;; Tracked objects:
  4460 ;;		On entry : 0/0
  4461 ;;		On exit  : 0/0
  4462 ;;		Unchanged: 0/0
  4463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4464 ;;      Params:         0       0       0       0       0
  4465 ;;      Locals:         0       2       0       0       0
  4466 ;;      Temps:          0       4       0       0       0
  4467 ;;      Totals:         0       6       0       0       0
  4468 ;;Total ram usage:        6 bytes
  4469 ;; Hardware stack levels used:    1
  4470 ;; Hardware stack levels required when called:    3
  4471 ;; This function calls:
  4472 ;;		_serialIObyteShift
  4473 ;;		_serialIOload
  4474 ;; This function is called by:
  4475 ;;		_main
  4476 ;; This function uses a non-reentrant model
  4477 ;;
  4478                           
  4479                           
  4480                           ;psect for function _serialIOscan
  4481  1EC8                     _serialIOscan:
  4482  1EC8                     l7402:	
  4483                           ;incstack = 0
  4484                           ; Regs used in _serialIOscan: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4485                           
  4486                           
  4487                           ;serialIO.c: 78:     unsigned char i,j;;serialIO.c: 79:     j = lenSerialIO - 1;
  4488  1EC8  1283               	bcf	3,5	;RP0=0, select bank0
  4489  1EC9  1303               	bcf	3,6	;RP1=0, select bank0
  4490  1ECA  084F               	movf	_lenSerialIO,w
  4491  1ECB  3EFF               	addlw	255
  4492  1ECC  00A4               	movwf	??_serialIOscan
  4493  1ECD  0824               	movf	??_serialIOscan,w
  4494  1ECE  00A8               	movwf	serialIOscan@j
  4495  1ECF                     l7404:
  4496                           
  4497                           ;serialIO.c: 80:     serialIOload();
  4498  1ECF  160A  158A  21C1  160A  158A  	fcall	_serialIOload
  4499  1ED4                     l7406:
  4500                           
  4501                           ;serialIO.c: 81:     for( i=0; i<lenSerialIO; i++ )
  4502  1ED4  1283               	bcf	3,5	;RP0=0, select bank0
  4503  1ED5  1303               	bcf	3,6	;RP1=0, select bank0
  4504  1ED6  01A9               	clrf	serialIOscan@i
  4505  1ED7  2EF7               	goto	l7412
  4506  1ED8                     l7408:
  4507                           
  4508                           ;serialIO.c: 82:     {;serialIO.c: 83:         ptrSerialIn[i] = serialIObyteShift( ptrSe
      +                          rialOut[j-i]);
  4509  1ED8  0850               	movf	_ptrSerialOut,w
  4510  1ED9  00A4               	movwf	??_serialIOscan
  4511  1EDA  0829               	movf	serialIOscan@i,w
  4512  1EDB  02A4               	subwf	??_serialIOscan,f
  4513  1EDC  0828               	movf	serialIOscan@j,w
  4514  1EDD  0724               	addwf	??_serialIOscan,w
  4515  1EDE  00A5               	movwf	??_serialIOscan+1
  4516  1EDF  0825               	movf	??_serialIOscan+1,w
  4517  1EE0  0084               	movwf	4
  4518  1EE1  1383               	bcf	3,7	;select IRP bank0
  4519  1EE2  0800               	movf	0,w
  4520  1EE3  160A  158A  23A7  160A  158A  	fcall	_serialIObyteShift
  4521  1EE8  1283               	bcf	3,5	;RP0=0, select bank0
  4522  1EE9  1303               	bcf	3,6	;RP1=0, select bank0
  4523  1EEA  00A6               	movwf	??_serialIOscan+2
  4524  1EEB  0829               	movf	serialIOscan@i,w
  4525  1EEC  0751               	addwf	_ptrSerialIn,w
  4526  1EED  00A7               	movwf	??_serialIOscan+3
  4527  1EEE  0827               	movf	??_serialIOscan+3,w
  4528  1EEF  0084               	movwf	4
  4529  1EF0  0826               	movf	??_serialIOscan+2,w
  4530  1EF1  1383               	bcf	3,7	;select IRP bank0
  4531  1EF2  0080               	movwf	0
  4532  1EF3                     l7410:
  4533                           
  4534                           ;serialIO.c: 84:     }
  4535  1EF3  3001               	movlw	1
  4536  1EF4  00A4               	movwf	??_serialIOscan
  4537  1EF5  0824               	movf	??_serialIOscan,w
  4538  1EF6  07A9               	addwf	serialIOscan@i,f
  4539  1EF7                     l7412:
  4540  1EF7  084F               	movf	_lenSerialIO,w
  4541  1EF8  0229               	subwf	serialIOscan@i,w
  4542  1EF9  1C03               	skipc
  4543  1EFA  2EFC               	goto	u5711
  4544  1EFB  2EFD               	goto	u5710
  4545  1EFC                     u5711:
  4546  1EFC  2ED8               	goto	l7408
  4547  1EFD                     u5710:
  4548  1EFD                     l7414:
  4549                           
  4550                           ;serialIO.c: 85:     serialIOload();
  4551  1EFD  160A  158A  21C1  160A  158A  	fcall	_serialIOload
  4552  1F02                     l471:
  4553  1F02  0008               	return
  4554  1F03                     __end_of_serialIOscan:
  4555                           
  4556                           	psect	text10
  4557  19C1                     __ptext10:	
  4558 ;; *************** function _serialIOload *****************
  4559 ;; Defined at:
  4560 ;;		line 45 in file "serialIO.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;		None
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;		None
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      void 
  4567 ;; Registers used:
  4568 ;;		None
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4574 ;;      Params:         0       0       0       0       0
  4575 ;;      Locals:         0       0       0       0       0
  4576 ;;      Temps:          0       0       0       0       0
  4577 ;;      Totals:         0       0       0       0       0
  4578 ;;Total ram usage:        0 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; Hardware stack levels required when called:    2
  4581 ;; This function calls:
  4582 ;;		Nothing
  4583 ;; This function is called by:
  4584 ;;		_serialIOscan
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           
  4589                           ;psect for function _serialIOload
  4590  19C1                     _serialIOload:
  4591  19C1                     l6902:	
  4592                           ;incstack = 0
  4593                           ; Regs used in _serialIOload: []
  4594                           
  4595                           
  4596                           ;serialIO.c: 47:     SERIALIO.SHLD = 0;
  4597  19C1  1283               	bcf	3,5	;RP0=0, select bank0
  4598  19C2  1303               	bcf	3,6	;RP1=0, select bank0
  4599  19C3  1185               	bcf	5,3	;volatile
  4600                           
  4601                           ;serialIO.c: 48:     SERIALIO.SHLD = 1;
  4602  19C4  1585               	bsf	5,3	;volatile
  4603  19C5                     l456:
  4604  19C5  0008               	return
  4605  19C6                     __end_of_serialIOload:
  4606                           
  4607                           	psect	text11
  4608  1BA7                     __ptext11:	
  4609 ;; *************** function _serialIObyteShift *****************
  4610 ;; Defined at:
  4611 ;;		line 50 in file "serialIO.c"
  4612 ;; Parameters:    Size  Location     Type
  4613 ;;  dataIn          1    wreg     unsigned char 
  4614 ;; Auto vars:     Size  Location     Type
  4615 ;;  dataIn          1    1[BANK0 ] unsigned char 
  4616 ;;  dataBit         1    3[BANK0 ] unsigned char 
  4617 ;;  dataOut         1    2[BANK0 ] unsigned char 
  4618 ;; Return value:  Size  Location     Type
  4619 ;;                  1    wreg      unsigned char 
  4620 ;; Registers used:
  4621 ;;		wreg, status,2, status,0
  4622 ;; Tracked objects:
  4623 ;;		On entry : 0/0
  4624 ;;		On exit  : 0/0
  4625 ;;		Unchanged: 0/0
  4626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4627 ;;      Params:         0       0       0       0       0
  4628 ;;      Locals:         0       3       0       0       0
  4629 ;;      Temps:          0       1       0       0       0
  4630 ;;      Totals:         0       4       0       0       0
  4631 ;;Total ram usage:        4 bytes
  4632 ;; Hardware stack levels used:    1
  4633 ;; Hardware stack levels required when called:    2
  4634 ;; This function calls:
  4635 ;;		Nothing
  4636 ;; This function is called by:
  4637 ;;		_serialIOscan
  4638 ;; This function uses a non-reentrant model
  4639 ;;
  4640                           
  4641                           
  4642                           ;psect for function _serialIObyteShift
  4643  1BA7                     _serialIObyteShift:
  4644                           
  4645                           ;incstack = 0
  4646                           ; Regs used in _serialIObyteShift: [wreg+status,2+status,0]
  4647                           ;serialIObyteShift@dataIn stored from wreg
  4648  1BA7  1283               	bcf	3,5	;RP0=0, select bank0
  4649  1BA8  1303               	bcf	3,6	;RP1=0, select bank0
  4650  1BA9  00A1               	movwf	serialIObyteShift@dataIn
  4651  1BAA                     l6904:
  4652                           
  4653                           ;serialIO.c: 50: unsigned char serialIObyteShift( unsigned char dataIn );serialIO.c: 51:
      +                           {;serialIO.c: 52:     unsigned char dataBit;;serialIO.c: 53:     unsigned char dataOut;
      +                          ;serialIO.c: 55:     dataBit = 0x80;
  4654  1BAA  3080               	movlw	128
  4655  1BAB  00A0               	movwf	??_serialIObyteShift
  4656  1BAC  0820               	movf	??_serialIObyteShift,w
  4657  1BAD  00A3               	movwf	serialIObyteShift@dataBit
  4658  1BAE                     l6906:
  4659                           
  4660                           ;serialIO.c: 56:     dataOut = 0;
  4661  1BAE  01A2               	clrf	serialIObyteShift@dataOut
  4662                           
  4663                           ;serialIO.c: 58:     while( dataBit )
  4664  1BAF  2BC5               	goto	l6918
  4665  1BB0                     l460:
  4666                           
  4667                           ;serialIO.c: 59:     {;serialIO.c: 60:         SERIALIO.CLK = 0;
  4668  1BB0  1105               	bcf	5,2	;volatile
  4669  1BB1                     l6908:
  4670                           
  4671                           ;serialIO.c: 61:         if( dataIn & dataBit )
  4672  1BB1  0821               	movf	serialIObyteShift@dataIn,w
  4673  1BB2  0523               	andwf	serialIObyteShift@dataBit,w
  4674  1BB3  1903               	btfsc	3,2
  4675  1BB4  2BB6               	goto	u5061
  4676  1BB5  2BB7               	goto	u5060
  4677  1BB6                     u5061:
  4678  1BB6  2BB9               	goto	l461
  4679  1BB7                     u5060:
  4680  1BB7                     l6910:
  4681                           
  4682                           ;serialIO.c: 62:             SERIALIO.OUT = 1;
  4683  1BB7  1405               	bsf	5,0	;volatile
  4684  1BB8  2BBA               	goto	l462
  4685  1BB9                     l461:	
  4686                           ;serialIO.c: 63:         else
  4687                           
  4688                           
  4689                           ;serialIO.c: 64:             SERIALIO.OUT = 0;
  4690  1BB9  1005               	bcf	5,0	;volatile
  4691  1BBA                     l462:
  4692                           
  4693                           ;serialIO.c: 66:         if( SERIALIO.IN )
  4694  1BBA  1C85               	btfss	5,1	;volatile
  4695  1BBB  2BBD               	goto	u5071
  4696  1BBC  2BBE               	goto	u5070
  4697  1BBD                     u5071:
  4698  1BBD  2BC2               	goto	l6914
  4699  1BBE                     u5070:
  4700  1BBE                     l6912:
  4701                           
  4702                           ;serialIO.c: 67:             dataOut |= dataBit;
  4703  1BBE  0823               	movf	serialIObyteShift@dataBit,w
  4704  1BBF  00A0               	movwf	??_serialIObyteShift
  4705  1BC0  0820               	movf	??_serialIObyteShift,w
  4706  1BC1  04A2               	iorwf	serialIObyteShift@dataOut,f
  4707  1BC2                     l6914:
  4708                           
  4709                           ;serialIO.c: 68:         SERIALIO.CLK = 1;
  4710  1BC2  1505               	bsf	5,2	;volatile
  4711  1BC3                     l6916:
  4712                           
  4713                           ;serialIO.c: 69:         dataBit >>= 1;
  4714  1BC3  1003               	clrc
  4715  1BC4  0CA3               	rrf	serialIObyteShift@dataBit,f
  4716  1BC5                     l6918:
  4717                           
  4718                           ;serialIO.c: 58:     while( dataBit )
  4719  1BC5  0823               	movf	serialIObyteShift@dataBit,w
  4720  1BC6  1D03               	btfss	3,2
  4721  1BC7  2BC9               	goto	u5081
  4722  1BC8  2BCA               	goto	u5080
  4723  1BC9                     u5081:
  4724  1BC9  2BB0               	goto	l460
  4725  1BCA                     u5080:
  4726  1BCA                     l464:
  4727                           
  4728                           ;serialIO.c: 71:     SERIALIO.CLK = 0;
  4729  1BCA  1105               	bcf	5,2	;volatile
  4730  1BCB                     l6920:
  4731                           
  4732                           ;serialIO.c: 72:     return( dataOut );
  4733  1BCB  0822               	movf	serialIObyteShift@dataOut,w
  4734  1BCC                     l465:
  4735  1BCC  0008               	return
  4736  1BCD                     __end_of_serialIObyteShift:
  4737                           
  4738                           	psect	text12
  4739  1DEC                     __ptext12:	
  4740 ;; *************** function _salvar_receita *****************
  4741 ;; Defined at:
  4742 ;;		line 46 in file "eeprom.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;  adrs            1    7[BANK0 ] unsigned char 
  4745 ;;  data            1    8[BANK0 ] PTR unsigned char 
  4746 ;;		 -> fila(18), 
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;  i               1   13[BANK0 ] unsigned char 
  4749 ;;  aux             2   11[BANK0 ] int 
  4750 ;; Return value:  Size  Location     Type
  4751 ;;                  1    wreg      void 
  4752 ;; Registers used:
  4753 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/0
  4756 ;;		On exit  : 0/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4759 ;;      Params:         0       2       0       0       0
  4760 ;;      Locals:         0       3       0       0       0
  4761 ;;      Temps:          0       2       0       0       0
  4762 ;;      Totals:         0       7       0       0       0
  4763 ;;Total ram usage:        7 bytes
  4764 ;; Hardware stack levels used:    1
  4765 ;; Hardware stack levels required when called:    3
  4766 ;; This function calls:
  4767 ;;		_EEPROM_write
  4768 ;;		_end_receita
  4769 ;; This function is called by:
  4770 ;;		_main
  4771 ;; This function uses a non-reentrant model
  4772 ;;
  4773                           
  4774                           
  4775                           ;psect for function _salvar_receita
  4776  1DEC                     _salvar_receita:
  4777  1DEC                     l7076:	
  4778                           ;incstack = 0
  4779                           ; Regs used in _salvar_receita: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4780                           
  4781                           
  4782                           ;eeprom.c: 46: void salvar_receita (char adrs, unsigned char *data );eeprom.c: 47: {;eep
      +                          rom.c: 48:     int aux;;eeprom.c: 49:     aux = end_receita(adrs);
  4783  1DEC  1283               	bcf	3,5	;RP0=0, select bank0
  4784  1DED  1303               	bcf	3,6	;RP1=0, select bank0
  4785  1DEE  0827               	movf	salvar_receita@adrs,w
  4786  1DEF  00A9               	movwf	??_salvar_receita
  4787  1DF0  01AA               	clrf	??_salvar_receita+1
  4788  1DF1  0829               	movf	??_salvar_receita,w
  4789  1DF2  00A0               	movwf	end_receita@x
  4790  1DF3  082A               	movf	??_salvar_receita+1,w
  4791  1DF4  00A1               	movwf	end_receita@x+1
  4792  1DF5  160A  158A  227F  160A  158A  	fcall	_end_receita
  4793  1DFA  1283               	bcf	3,5	;RP0=0, select bank0
  4794  1DFB  1303               	bcf	3,6	;RP1=0, select bank0
  4795  1DFC  0821               	movf	?_end_receita+1,w
  4796  1DFD  00AC               	movwf	salvar_receita@aux+1
  4797  1DFE  0820               	movf	?_end_receita,w
  4798  1DFF  00AB               	movwf	salvar_receita@aux
  4799  1E00                     l7078:
  4800                           
  4801                           ;eeprom.c: 50:     for( char i=0 ; i<16; i++)
  4802  1E00  01AD               	clrf	salvar_receita@i
  4803  1E01                     l7084:
  4804                           
  4805                           ;eeprom.c: 51:          EEPROM_write( (aux+i), *(data+i) );
  4806  1E01  082D               	movf	salvar_receita@i,w
  4807  1E02  0728               	addwf	salvar_receita@data,w
  4808  1E03  00A9               	movwf	??_salvar_receita
  4809  1E04  0829               	movf	??_salvar_receita,w
  4810  1E05  0084               	movwf	4
  4811  1E06  1383               	bcf	3,7	;select IRP bank0
  4812  1E07  0800               	movf	0,w
  4813  1E08  00AA               	movwf	??_salvar_receita+1
  4814  1E09  082A               	movf	??_salvar_receita+1,w
  4815  1E0A  00A0               	movwf	EEPROM_write@data
  4816  1E0B  082B               	movf	salvar_receita@aux,w
  4817  1E0C  072D               	addwf	salvar_receita@i,w
  4818  1E0D  160A  158A  22E4  160A  158A  	fcall	_EEPROM_write
  4819  1E12                     l7086:
  4820  1E12  3001               	movlw	1
  4821  1E13  1283               	bcf	3,5	;RP0=0, select bank0
  4822  1E14  1303               	bcf	3,6	;RP1=0, select bank0
  4823  1E15  00A9               	movwf	??_salvar_receita
  4824  1E16  0829               	movf	??_salvar_receita,w
  4825  1E17  07AD               	addwf	salvar_receita@i,f
  4826  1E18                     l7088:
  4827  1E18  3010               	movlw	16
  4828  1E19  022D               	subwf	salvar_receita@i,w
  4829  1E1A  1C03               	skipc
  4830  1E1B  2E1D               	goto	u5291
  4831  1E1C  2E1E               	goto	u5290
  4832  1E1D                     u5291:
  4833  1E1D  2E01               	goto	l7084
  4834  1E1E                     u5290:
  4835  1E1E                     l146:
  4836  1E1E  0008               	return
  4837  1E1F                     __end_of_salvar_receita:
  4838                           
  4839                           	psect	text13
  4840  1B42                     __ptext13:	
  4841 ;; *************** function _salvar_dado *****************
  4842 ;; Defined at:
  4843 ;;		line 63 in file "eeprom.c"
  4844 ;; Parameters:    Size  Location     Type
  4845 ;;  adrs            1    wreg     unsigned char 
  4846 ;;  col             1    7[BANK0 ] unsigned char 
  4847 ;;  data            1    8[BANK0 ] unsigned char 
  4848 ;; Auto vars:     Size  Location     Type
  4849 ;;  adrs            1   11[BANK0 ] unsigned char 
  4850 ;;  aux             2   12[BANK0 ] int 
  4851 ;; Return value:  Size  Location     Type
  4852 ;;                  1    wreg      void 
  4853 ;; Registers used:
  4854 ;;		wreg, status,2, status,0, pclath, cstack
  4855 ;; Tracked objects:
  4856 ;;		On entry : 0/0
  4857 ;;		On exit  : 0/0
  4858 ;;		Unchanged: 0/0
  4859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4860 ;;      Params:         0       2       0       0       0
  4861 ;;      Locals:         0       3       0       0       0
  4862 ;;      Temps:          0       2       0       0       0
  4863 ;;      Totals:         0       7       0       0       0
  4864 ;;Total ram usage:        7 bytes
  4865 ;; Hardware stack levels used:    1
  4866 ;; Hardware stack levels required when called:    3
  4867 ;; This function calls:
  4868 ;;		_EEPROM_write
  4869 ;;		_end_receita
  4870 ;; This function is called by:
  4871 ;;		_main
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           
  4876                           ;psect for function _salvar_dado
  4877  1B42                     _salvar_dado:
  4878                           
  4879                           ;incstack = 0
  4880                           ; Regs used in _salvar_dado: [wreg+status,2+status,0+pclath+cstack]
  4881                           ;salvar_dado@adrs stored from wreg
  4882  1B42  1283               	bcf	3,5	;RP0=0, select bank0
  4883  1B43  1303               	bcf	3,6	;RP1=0, select bank0
  4884  1B44  00AB               	movwf	salvar_dado@adrs
  4885  1B45                     l7090:
  4886                           
  4887                           ;eeprom.c: 63: void salvar_dado (char adrs, char col, unsigned char data);eeprom.c: 64: 
      +                          {;eeprom.c: 65:     int aux;;eeprom.c: 66:     aux = end_receita(adrs);
  4888  1B45  082B               	movf	salvar_dado@adrs,w
  4889  1B46  00A9               	movwf	??_salvar_dado
  4890  1B47  01AA               	clrf	??_salvar_dado+1
  4891  1B48  0829               	movf	??_salvar_dado,w
  4892  1B49  00A0               	movwf	end_receita@x
  4893  1B4A  082A               	movf	??_salvar_dado+1,w
  4894  1B4B  00A1               	movwf	end_receita@x+1
  4895  1B4C  160A  158A  227F  160A  158A  	fcall	_end_receita
  4896  1B51  1283               	bcf	3,5	;RP0=0, select bank0
  4897  1B52  1303               	bcf	3,6	;RP1=0, select bank0
  4898  1B53  0821               	movf	?_end_receita+1,w
  4899  1B54  00AD               	movwf	salvar_dado@aux+1
  4900  1B55  0820               	movf	?_end_receita,w
  4901  1B56  00AC               	movwf	salvar_dado@aux
  4902  1B57                     l7092:
  4903                           
  4904                           ;eeprom.c: 67:     EEPROM_write((aux+col), data);
  4905  1B57  0828               	movf	salvar_dado@data,w
  4906  1B58  00A9               	movwf	??_salvar_dado
  4907  1B59  0829               	movf	??_salvar_dado,w
  4908  1B5A  00A0               	movwf	EEPROM_write@data
  4909  1B5B  082C               	movf	salvar_dado@aux,w
  4910  1B5C  0727               	addwf	salvar_dado@col,w
  4911  1B5D  160A  158A  22E4  160A  158A  	fcall	_EEPROM_write
  4912  1B62                     l154:
  4913  1B62  0008               	return
  4914  1B63                     __end_of_salvar_dado:
  4915                           
  4916                           	psect	text14
  4917  1A7F                     __ptext14:	
  4918 ;; *************** function _end_receita *****************
  4919 ;; Defined at:
  4920 ;;		line 41 in file "eeprom.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;  x               2    0[BANK0 ] int 
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;		None
  4925 ;; Return value:  Size  Location     Type
  4926 ;;                  2    0[BANK0 ] int 
  4927 ;; Registers used:
  4928 ;;		wreg
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4934 ;;      Params:         0       2       0       0       0
  4935 ;;      Locals:         0       0       0       0       0
  4936 ;;      Temps:          0       2       0       0       0
  4937 ;;      Totals:         0       4       0       0       0
  4938 ;;Total ram usage:        4 bytes
  4939 ;; Hardware stack levels used:    1
  4940 ;; Hardware stack levels required when called:    2
  4941 ;; This function calls:
  4942 ;;		Nothing
  4943 ;; This function is called by:
  4944 ;;		_salvar_receita
  4945 ;;		_salvar_dado
  4946 ;;		_buscar_receita
  4947 ;;		_buscar_dado
  4948 ;;		_deletar_receita
  4949 ;;		_receita_livre
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           
  4953                           
  4954                           ;psect for function _end_receita
  4955  1A7F                     _end_receita:
  4956  1A7F                     l6718:	
  4957                           ;incstack = 0
  4958                           ; Regs used in _end_receita: [wreg]
  4959                           
  4960                           
  4961                           ;eeprom.c: 41: int end_receita (int x);eeprom.c: 42: {;eeprom.c: 43:     return(x*16);
  4962  1A7F  1283               	bcf	3,5	;RP0=0, select bank0
  4963  1A80  1303               	bcf	3,6	;RP1=0, select bank0
  4964  1A81  0821               	movf	end_receita@x+1,w
  4965  1A82  00A3               	movwf	??_end_receita+1
  4966  1A83  0820               	movf	end_receita@x,w
  4967  1A84  00A2               	movwf	??_end_receita
  4968  1A85  0EA2               	swapf	??_end_receita,f
  4969  1A86  0EA3               	swapf	??_end_receita+1,f
  4970  1A87  30F0               	movlw	240
  4971  1A88  05A3               	andwf	??_end_receita+1,f
  4972  1A89  0822               	movf	??_end_receita,w
  4973  1A8A  390F               	andlw	15
  4974  1A8B  04A3               	iorwf	??_end_receita+1,f
  4975  1A8C  30F0               	movlw	240
  4976  1A8D  05A2               	andwf	??_end_receita,f
  4977  1A8E  0822               	movf	??_end_receita,w
  4978  1A8F  00A0               	movwf	?_end_receita
  4979  1A90  0823               	movf	??_end_receita+1,w
  4980  1A91  00A1               	movwf	?_end_receita+1
  4981  1A92                     l141:
  4982  1A92  0008               	return
  4983  1A93                     __end_of_end_receita:
  4984                           
  4985                           	psect	text15
  4986  1AE4                     __ptext15:	
  4987 ;; *************** function _EEPROM_write *****************
  4988 ;; Defined at:
  4989 ;;		line 24 in file "eeprom.c"
  4990 ;; Parameters:    Size  Location     Type
  4991 ;;  addr            1    wreg     unsigned char 
  4992 ;;  data            1    0[BANK0 ] unsigned char 
  4993 ;; Auto vars:     Size  Location     Type
  4994 ;;  addr            1    1[BANK0 ] unsigned char 
  4995 ;; Return value:  Size  Location     Type
  4996 ;;                  1    wreg      void 
  4997 ;; Registers used:
  4998 ;;		wreg
  4999 ;; Tracked objects:
  5000 ;;		On entry : 0/0
  5001 ;;		On exit  : 0/0
  5002 ;;		Unchanged: 0/0
  5003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5004 ;;      Params:         0       1       0       0       0
  5005 ;;      Locals:         0       1       0       0       0
  5006 ;;      Temps:          0       0       0       0       0
  5007 ;;      Totals:         0       2       0       0       0
  5008 ;;Total ram usage:        2 bytes
  5009 ;; Hardware stack levels used:    1
  5010 ;; Hardware stack levels required when called:    2
  5011 ;; This function calls:
  5012 ;;		Nothing
  5013 ;; This function is called by:
  5014 ;;		_salvar_receita
  5015 ;;		_salvar_dado
  5016 ;;		_deletar_receita
  5017 ;;		_formatar_receitas
  5018 ;; This function uses a non-reentrant model
  5019 ;;
  5020                           
  5021                           
  5022                           ;psect for function _EEPROM_write
  5023  1AE4                     _EEPROM_write:
  5024                           
  5025                           ;incstack = 0
  5026                           ; Regs used in _EEPROM_write: [wreg]
  5027                           ;EEPROM_write@addr stored from wreg
  5028  1AE4  1283               	bcf	3,5	;RP0=0, select bank0
  5029  1AE5  1303               	bcf	3,6	;RP1=0, select bank0
  5030  1AE6  00A1               	movwf	EEPROM_write@addr
  5031  1AE7                     l6708:
  5032                           
  5033                           ;eeprom.c: 24: void EEPROM_write( unsigned char addr, unsigned char data );eeprom.c: 25:
      +                           {;eeprom.c: 26:     INTCONbits.GIE = 0;
  5034  1AE7  138B               	bcf	11,7	;volatile
  5035  1AE8                     l6710:
  5036                           
  5037                           ;eeprom.c: 27:     EEADR = addr;
  5038  1AE8  0821               	movf	EEPROM_write@addr,w
  5039  1AE9  1283               	bcf	3,5	;RP0=0, select bank2
  5040  1AEA  1703               	bsf	3,6	;RP1=1, select bank2
  5041  1AEB  008D               	movwf	13	;volatile
  5042                           
  5043                           ;eeprom.c: 28:     EEDAT = data;
  5044  1AEC  1283               	bcf	3,5	;RP0=0, select bank0
  5045  1AED  1303               	bcf	3,6	;RP1=0, select bank0
  5046  1AEE  0820               	movf	EEPROM_write@data,w
  5047  1AEF  1283               	bcf	3,5	;RP0=0, select bank2
  5048  1AF0  1703               	bsf	3,6	;RP1=1, select bank2
  5049  1AF1  008C               	movwf	12	;volatile
  5050  1AF2                     l6712:
  5051                           
  5052                           ;eeprom.c: 29:     EECON1bits.EEPGD = 0;
  5053  1AF2  1683               	bsf	3,5	;RP0=1, select bank3
  5054  1AF3  1703               	bsf	3,6	;RP1=1, select bank3
  5055  1AF4  138C               	bcf	12,7	;volsfr
  5056  1AF5                     l6714:
  5057                           
  5058                           ;eeprom.c: 30:     EECON1bits.WREN = 1;
  5059  1AF5  150C               	bsf	12,2	;volsfr
  5060                           
  5061                           ;eeprom.c: 31:     EECON2 = 0x55;
  5062  1AF6  3055               	movlw	85
  5063  1AF7  008D               	movwf	13	;volsfr
  5064                           
  5065                           ;eeprom.c: 32:     EECON2 = 0xAA;
  5066  1AF8  30AA               	movlw	170
  5067  1AF9  008D               	movwf	13	;volsfr
  5068  1AFA                     l6716:
  5069                           
  5070                           ;eeprom.c: 33:     EECON1bits.WR = 1;
  5071  1AFA  148C               	bsf	12,1	;volsfr
  5072  1AFB                     l135:	
  5073                           ;eeprom.c: 35:     while( EECON1bits.WR );
  5074                           
  5075  1AFB  188C               	btfsc	12,1	;volsfr
  5076  1AFC  2AFE               	goto	u4861
  5077  1AFD  2AFF               	goto	u4860
  5078  1AFE                     u4861:
  5079  1AFE  2AFB               	goto	l135
  5080  1AFF                     u4860:
  5081  1AFF                     l137:
  5082                           
  5083                           ;eeprom.c: 37:     EECON1bits.WREN = 0;
  5084  1AFF  110C               	bcf	12,2	;volsfr
  5085                           
  5086                           ;eeprom.c: 38:     INTCONbits.GIE = 1;
  5087  1B00  178B               	bsf	11,7	;volatile
  5088  1B01                     l138:
  5089  1B01  0008               	return
  5090  1B02                     __end_of_EEPROM_write:
  5091                           
  5092                           	psect	text16
  5093  14D0                     __ptext16:	
  5094 ;; *************** function _salva_atuadores_init *****************
  5095 ;; Defined at:
  5096 ;;		line 117 in file "fifo.c"
  5097 ;; Parameters:    Size  Location     Type
  5098 ;;		None
  5099 ;; Auto vars:     Size  Location     Type
  5100 ;;  condi_init      4    4[BANK0 ] unsigned char [4]
  5101 ;;  mask            1   10[BANK0 ] unsigned char 
  5102 ;;  dado            1    9[BANK0 ] unsigned char 
  5103 ;;  pt              1    8[BANK0 ] PTR unsigned char 
  5104 ;;		 -> salva_atuadores_init@condi_init(4), 
  5105 ;; Return value:  Size  Location     Type
  5106 ;;                  1    wreg      unsigned char 
  5107 ;; Registers used:
  5108 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5109 ;; Tracked objects:
  5110 ;;		On entry : 0/0
  5111 ;;		On exit  : 0/0
  5112 ;;		Unchanged: 0/0
  5113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5114 ;;      Params:         0       0       0       0       0
  5115 ;;      Locals:         0       7       0       0       0
  5116 ;;      Temps:          0       1       0       0       0
  5117 ;;      Totals:         0       8       0       0       0
  5118 ;;Total ram usage:        8 bytes
  5119 ;; Hardware stack levels used:    1
  5120 ;; Hardware stack levels required when called:    3
  5121 ;; This function calls:
  5122 ;;		_ler_atuador
  5123 ;; This function is called by:
  5124 ;;		_main
  5125 ;; This function uses a non-reentrant model
  5126 ;;
  5127                           
  5128                           
  5129                           ;psect for function _salva_atuadores_init
  5130  14D0                     _salva_atuadores_init:
  5131  14D0                     l7100:	
  5132                           ;incstack = 0
  5133                           ; Regs used in _salva_atuadores_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5134                           
  5135                           
  5136                           ;fifo.c: 119:     char condi_init[4] = {ler_atuador('A'), ler_atuador('B'), ler_atuador(
      +                          'C'), ler_atuador('D')};
  5137  14D0  3000               	movlw	0
  5138  14D1  1283               	bcf	3,5	;RP0=0, select bank0
  5139  14D2  1303               	bcf	3,6	;RP1=0, select bank0
  5140  14D3  00A7               	movwf	salva_atuadores_init@condi_init+3
  5141  14D4  3000               	movlw	0
  5142  14D5  00A6               	movwf	salva_atuadores_init@condi_init+2
  5143  14D6  3000               	movlw	0
  5144  14D7  00A5               	movwf	salva_atuadores_init@condi_init+1
  5145  14D8  3000               	movlw	0
  5146  14D9  00A4               	movwf	salva_atuadores_init@condi_init
  5147  14DA                     l7102:
  5148  14DA  3041               	movlw	65
  5149  14DB  160A  158A  24CD  160A  118A  	fcall	_ler_atuador
  5150  14E0  1283               	bcf	3,5	;RP0=0, select bank0
  5151  14E1  1303               	bcf	3,6	;RP1=0, select bank0
  5152  14E2  00A3               	movwf	??_salva_atuadores_init
  5153  14E3  0823               	movf	??_salva_atuadores_init,w
  5154  14E4  00A4               	movwf	salva_atuadores_init@condi_init
  5155  14E5                     l7104:
  5156  14E5  3042               	movlw	66
  5157  14E6  160A  158A  24CD  160A  118A  	fcall	_ler_atuador
  5158  14EB  1283               	bcf	3,5	;RP0=0, select bank0
  5159  14EC  1303               	bcf	3,6	;RP1=0, select bank0
  5160  14ED  00A3               	movwf	??_salva_atuadores_init
  5161  14EE  0823               	movf	??_salva_atuadores_init,w
  5162  14EF  00A5               	movwf	salva_atuadores_init@condi_init+1
  5163  14F0                     l7106:
  5164  14F0  3043               	movlw	67
  5165  14F1  160A  158A  24CD  160A  118A  	fcall	_ler_atuador
  5166  14F6  1283               	bcf	3,5	;RP0=0, select bank0
  5167  14F7  1303               	bcf	3,6	;RP1=0, select bank0
  5168  14F8  00A3               	movwf	??_salva_atuadores_init
  5169  14F9  0823               	movf	??_salva_atuadores_init,w
  5170  14FA  00A6               	movwf	salva_atuadores_init@condi_init+2
  5171  14FB                     l7108:
  5172  14FB  3044               	movlw	68
  5173  14FC  160A  158A  24CD  160A  118A  	fcall	_ler_atuador
  5174  1501  1283               	bcf	3,5	;RP0=0, select bank0
  5175  1502  1303               	bcf	3,6	;RP1=0, select bank0
  5176  1503  00A3               	movwf	??_salva_atuadores_init
  5177  1504  0823               	movf	??_salva_atuadores_init,w
  5178  1505  00A7               	movwf	salva_atuadores_init@condi_init+3
  5179                           
  5180                           ;fifo.c: 121:     char *pt = condi_init;
  5181  1506  3024               	movlw	(low (salva_atuadores_init@condi_init| 0))& (0+255)
  5182  1507  00A3               	movwf	??_salva_atuadores_init
  5183  1508  0823               	movf	??_salva_atuadores_init,w
  5184  1509  00A8               	movwf	salva_atuadores_init@pt
  5185  150A                     l7110:
  5186                           
  5187                           ;fifo.c: 122:     char dado = 0;
  5188  150A  01A9               	clrf	salva_atuadores_init@dado
  5189  150B                     l7112:
  5190                           
  5191                           ;fifo.c: 123:     char mask = 0x08;
  5192  150B  3008               	movlw	8
  5193  150C  00A3               	movwf	??_salva_atuadores_init
  5194  150D  0823               	movf	??_salva_atuadores_init,w
  5195  150E  00AA               	movwf	salva_atuadores_init@mask
  5196                           
  5197                           ;fifo.c: 125:     while( mask )
  5198  150F  2D23               	goto	l7120
  5199  1510                     l7114:
  5200                           
  5201                           ;fifo.c: 126:     {;fifo.c: 127:         if( *pt )
  5202  1510  0828               	movf	salva_atuadores_init@pt,w
  5203  1511  0084               	movwf	4
  5204  1512  1383               	bcf	3,7	;select IRP bank0
  5205  1513  0800               	movf	0,w
  5206  1514  1903               	btfsc	3,2
  5207  1515  2D17               	goto	u5301
  5208  1516  2D18               	goto	u5300
  5209  1517                     u5301:
  5210  1517  2D1D               	goto	l256
  5211  1518                     u5300:
  5212  1518                     l7116:
  5213                           
  5214                           ;fifo.c: 128:         {;fifo.c: 129:             dado = dado | mask;
  5215  1518  0829               	movf	salva_atuadores_init@dado,w
  5216  1519  042A               	iorwf	salva_atuadores_init@mask,w
  5217  151A  00A3               	movwf	??_salva_atuadores_init
  5218  151B  0823               	movf	??_salva_atuadores_init,w
  5219  151C  00A9               	movwf	salva_atuadores_init@dado
  5220  151D                     l256:	
  5221                           ;fifo.c: 130:         }
  5222                           
  5223                           
  5224                           ;fifo.c: 131:         pt++;
  5225  151D  3001               	movlw	1
  5226  151E  00A3               	movwf	??_salva_atuadores_init
  5227  151F  0823               	movf	??_salva_atuadores_init,w
  5228  1520  07A8               	addwf	salva_atuadores_init@pt,f
  5229  1521                     l7118:
  5230                           
  5231                           ;fifo.c: 132:         mask >>= 1;
  5232  1521  1003               	clrc
  5233  1522  0CAA               	rrf	salva_atuadores_init@mask,f
  5234  1523                     l7120:
  5235                           
  5236                           ;fifo.c: 125:     while( mask )
  5237  1523  082A               	movf	salva_atuadores_init@mask,w
  5238  1524  1D03               	btfss	3,2
  5239  1525  2D27               	goto	u5311
  5240  1526  2D28               	goto	u5310
  5241  1527                     u5311:
  5242  1527  2D10               	goto	l7114
  5243  1528                     u5310:
  5244  1528                     l7122:
  5245                           
  5246                           ;fifo.c: 134:     return(dado);
  5247  1528  0829               	movf	salva_atuadores_init@dado,w
  5248  1529                     l258:
  5249  1529  0008               	return
  5250  152A                     __end_of_salva_atuadores_init:
  5251                           
  5252                           	psect	text17
  5253  1CCD                     __ptext17:	
  5254 ;; *************** function _ler_atuador *****************
  5255 ;; Defined at:
  5256 ;;		line 80 in file "fifo.c"
  5257 ;; Parameters:    Size  Location     Type
  5258 ;;  tecla           1    wreg     unsigned char 
  5259 ;; Auto vars:     Size  Location     Type
  5260 ;;  tecla           1    2[BANK0 ] unsigned char 
  5261 ;; Return value:  Size  Location     Type
  5262 ;;                  1    wreg      unsigned char 
  5263 ;; Registers used:
  5264 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5265 ;; Tracked objects:
  5266 ;;		On entry : 0/0
  5267 ;;		On exit  : 0/0
  5268 ;;		Unchanged: 0/0
  5269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5270 ;;      Params:         0       0       0       0       0
  5271 ;;      Locals:         0       1       0       0       0
  5272 ;;      Temps:          0       2       0       0       0
  5273 ;;      Totals:         0       3       0       0       0
  5274 ;;Total ram usage:        3 bytes
  5275 ;; Hardware stack levels used:    1
  5276 ;; Hardware stack levels required when called:    2
  5277 ;; This function calls:
  5278 ;;		Nothing
  5279 ;; This function is called by:
  5280 ;;		_salva_atuadores_init
  5281 ;;		_main
  5282 ;; This function uses a non-reentrant model
  5283 ;;
  5284                           
  5285                           
  5286                           ;psect for function _ler_atuador
  5287  1CCD                     _ler_atuador:
  5288                           
  5289                           ;incstack = 0
  5290                           ; Regs used in _ler_atuador: [wreg-fsr0h+status,2+status,0]
  5291                           ;ler_atuador@tecla stored from wreg
  5292  1CCD  1283               	bcf	3,5	;RP0=0, select bank0
  5293  1CCE  1303               	bcf	3,6	;RP1=0, select bank0
  5294  1CCF  00A2               	movwf	ler_atuador@tecla
  5295  1CD0                     l6722:
  5296                           
  5297                           ;fifo.c: 80: char ler_atuador(char tecla);fifo.c: 81: {;fifo.c: 82:     switch(tecla)
  5298  1CD0  2CE4               	goto	l6756
  5299  1CD1                     l6724:
  5300  1CD1  0879               	movf	_atuador,w
  5301  1CD2  3901               	andlw	1
  5302  1CD3  2CFA               	goto	l232
  5303  1CD4                     l6730:
  5304  1CD4  0C79               	rrf	_atuador,w
  5305  1CD5  3901               	andlw	1
  5306  1CD6  2CFA               	goto	l232
  5307  1CD7                     l6736:
  5308  1CD7  0C79               	rrf	_atuador,w
  5309  1CD8  00A0               	movwf	??_ler_atuador
  5310  1CD9  0C20               	rrf	??_ler_atuador,w
  5311  1CDA  3901               	andlw	1
  5312  1CDB  2CFA               	goto	l232
  5313  1CDC                     l6742:
  5314  1CDC  0C79               	rrf	_atuador,w
  5315  1CDD  00A0               	movwf	??_ler_atuador
  5316  1CDE  0CA0               	rrf	??_ler_atuador,f
  5317  1CDF  0C20               	rrf	??_ler_atuador,w
  5318  1CE0  3901               	andlw	1
  5319  1CE1  2CFA               	goto	l232
  5320  1CE2                     l6748:
  5321  1CE2  3000               	movlw	0
  5322  1CE3  2CFA               	goto	l232
  5323  1CE4                     l6756:
  5324  1CE4  0822               	movf	ler_atuador@tecla,w
  5325  1CE5  00A0               	movwf	??_ler_atuador
  5326  1CE6  01A1               	clrf	??_ler_atuador+1
  5327                           
  5328                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5329                           ; Switch size 1, requested type "simple"
  5330                           ; Number of cases is 1, Range of values is 0 to 0
  5331                           ; switch strategies available:
  5332                           ; Name         Instructions Cycles
  5333                           ; simple_byte            4     3 (average)
  5334                           ; direct_byte           11     8 (fixed)
  5335                           ; jumptable            260     6 (fixed)
  5336                           ;	Chosen strategy is simple_byte
  5337  1CE7  0821               	movf	??_ler_atuador+1,w
  5338  1CE8  3A00               	xorlw	0	; case 0
  5339  1CE9  1903               	skipnz
  5340  1CEA  2CEC               	goto	l8702
  5341  1CEB  2CE2               	goto	l6748
  5342  1CEC                     l8702:
  5343                           
  5344                           ; Switch size 1, requested type "simple"
  5345                           ; Number of cases is 4, Range of values is 65 to 68
  5346                           ; switch strategies available:
  5347                           ; Name         Instructions Cycles
  5348                           ; simple_byte           13     7 (average)
  5349                           ; direct_byte           23    11 (fixed)
  5350                           ; jumptable            263     9 (fixed)
  5351                           ;	Chosen strategy is simple_byte
  5352  1CEC  0820               	movf	??_ler_atuador,w
  5353  1CED  3A41               	xorlw	65	; case 65
  5354  1CEE  1903               	skipnz
  5355  1CEF  2CD1               	goto	l6724
  5356  1CF0  3A03               	xorlw	3	; case 66
  5357  1CF1  1903               	skipnz
  5358  1CF2  2CD4               	goto	l6730
  5359  1CF3  3A01               	xorlw	1	; case 67
  5360  1CF4  1903               	skipnz
  5361  1CF5  2CD7               	goto	l6736
  5362  1CF6  3A07               	xorlw	7	; case 68
  5363  1CF7  1903               	skipnz
  5364  1CF8  2CDC               	goto	l6742
  5365  1CF9  2CE2               	goto	l6748
  5366  1CFA                     l232:
  5367  1CFA  0008               	return
  5368  1CFB                     __end_of_ler_atuador:
  5369                           
  5370                           	psect	text18
  5371  0565                     __ptext18:	
  5372 ;; *************** function _printExec *****************
  5373 ;; Defined at:
  5374 ;;		line 520 in file "fifo.c"
  5375 ;; Parameters:    Size  Location     Type
  5376 ;;  col             1    wreg     unsigned char 
  5377 ;;  ind             1   25[BANK0 ] unsigned char 
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;  col             1   34[BANK0 ] unsigned char 
  5380 ;;  passo           1   35[BANK0 ] unsigned char 
  5381 ;; Return value:  Size  Location     Type
  5382 ;;                  1    wreg      void 
  5383 ;; Registers used:
  5384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5390 ;;      Params:         0       1       0       0       0
  5391 ;;      Locals:         0       4       0       0       0
  5392 ;;      Temps:          0       6       0       0       0
  5393 ;;      Totals:         0      11       0       0       0
  5394 ;;Total ram usage:       11 bytes
  5395 ;; Hardware stack levels used:    1
  5396 ;; Hardware stack levels required when called:    5
  5397 ;; This function calls:
  5398 ;;		_decodifica
  5399 ;;		_dignum_tam
  5400 ;;		_dispLCD_dataReg
  5401 ;;		_dispLCD_lincol
  5402 ;;		_dispLCD_num
  5403 ;;		_posAtual
  5404 ;; This function is called by:
  5405 ;;		_main
  5406 ;; This function uses a non-reentrant model
  5407 ;;
  5408                           
  5409                           
  5410                           ;psect for function _printExec
  5411  0565                     _printExec:
  5412                           
  5413                           ;incstack = 0
  5414                           ; Regs used in _printExec: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5415                           ;printExec@col stored from wreg
  5416  0565  1283               	bcf	3,5	;RP0=0, select bank0
  5417  0566  1303               	bcf	3,6	;RP1=0, select bank0
  5418  0567  00C2               	movwf	printExec@col
  5419  0568                     l7350:
  5420                           
  5421                           ;fifo.c: 520: void printExec (char col, char ind);fifo.c: 521: {;fifo.c: 522:     char p
      +                          asso = posAtual( ind );
  5422  0568  0839               	movf	printExec@ind,w
  5423  0569  160A  158A  2293  120A  118A  	fcall	_posAtual
  5424  056E  1283               	bcf	3,5	;RP0=0, select bank0
  5425  056F  1303               	bcf	3,6	;RP1=0, select bank0
  5426  0570  00BA               	movwf	??_printExec
  5427  0571  083A               	movf	??_printExec,w
  5428  0572  00C3               	movwf	printExec@passo
  5429  0573                     l7352:
  5430                           
  5431                           ;fifo.c: 524:     if(passo > 0 && passo <= 0x64)
  5432  0573  0843               	movf	printExec@passo,w
  5433  0574  1903               	btfsc	3,2
  5434  0575  2D77               	goto	u5611
  5435  0576  2D78               	goto	u5610
  5436  0577                     u5611:
  5437  0577  2DBE               	goto	l7364
  5438  0578                     u5610:
  5439  0578                     l7354:
  5440  0578  3065               	movlw	101
  5441  0579  0243               	subwf	printExec@passo,w
  5442  057A  1803               	skipnc
  5443  057B  2D7D               	goto	u5621
  5444  057C  2D7E               	goto	u5620
  5445  057D                     u5621:
  5446  057D  2DBE               	goto	l7364
  5447  057E                     u5620:
  5448  057E                     l7356:
  5449                           
  5450                           ;fifo.c: 525:     {;fifo.c: 526:         if( dignum_tam( (int) passo ) == 3 )
  5451  057E  0843               	movf	printExec@passo,w
  5452  057F  00BA               	movwf	??_printExec
  5453  0580  01BB               	clrf	??_printExec+1
  5454  0581  083A               	movf	??_printExec,w
  5455  0582  00A9               	movwf	dignum_tam@num
  5456  0583  083B               	movf	??_printExec+1,w
  5457  0584  00AA               	movwf	dignum_tam@num+1
  5458  0585  160A  158A  2384  120A  118A  	fcall	_dignum_tam
  5459  058A  3A03               	xorlw	3
  5460  058B  1D03               	skipz
  5461  058C  2D8E               	goto	u5631
  5462  058D  2D8F               	goto	u5630
  5463  058E                     u5631:
  5464  058E  2D93               	goto	l7360
  5465  058F                     u5630:
  5466  058F                     l7358:
  5467                           
  5468                           ;fifo.c: 527:             col-=1;
  5469  058F  3001               	movlw	1
  5470  0590  1283               	bcf	3,5	;RP0=0, select bank0
  5471  0591  1303               	bcf	3,6	;RP1=0, select bank0
  5472  0592  02C2               	subwf	printExec@col,f
  5473  0593                     l7360:
  5474                           
  5475                           ;fifo.c: 528:         dispLCD_num(0, col, (int)passo, dignum_tam( (int)passo) );
  5476  0593  1283               	bcf	3,5	;RP0=0, select bank0
  5477  0594  1303               	bcf	3,6	;RP1=0, select bank0
  5478  0595  01AD               	clrf	dispLCD_num@lin
  5479  0596  0842               	movf	printExec@col,w
  5480  0597  00BA               	movwf	??_printExec
  5481  0598  083A               	movf	??_printExec,w
  5482  0599  00AE               	movwf	dispLCD_num@col
  5483  059A  0843               	movf	printExec@passo,w
  5484  059B  00BB               	movwf	??_printExec+1
  5485  059C  01BC               	clrf	??_printExec+2
  5486  059D  083B               	movf	??_printExec+1,w
  5487  059E  00AF               	movwf	dispLCD_num@num
  5488  059F  083C               	movf	??_printExec+2,w
  5489  05A0  00B0               	movwf	dispLCD_num@num+1
  5490  05A1  0843               	movf	printExec@passo,w
  5491  05A2  00BD               	movwf	??_printExec+3
  5492  05A3  01BE               	clrf	??_printExec+4
  5493  05A4  083D               	movf	??_printExec+3,w
  5494  05A5  00A9               	movwf	dignum_tam@num
  5495  05A6  083E               	movf	??_printExec+4,w
  5496  05A7  00AA               	movwf	dignum_tam@num+1
  5497  05A8  160A  158A  2384  120A  118A  	fcall	_dignum_tam
  5498  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  5499  05AE  1303               	bcf	3,6	;RP1=0, select bank0
  5500  05AF  00BF               	movwf	??_printExec+5
  5501  05B0  083F               	movf	??_printExec+5,w
  5502  05B1  00B1               	movwf	dispLCD_num@tam
  5503  05B2  120A  118A  2687  120A  118A  	fcall	_dispLCD_num
  5504  05B7                     l7362:
  5505                           
  5506                           ;fifo.c: 529:         dispLCD_dataReg('%');
  5507  05B7  3025               	movlw	37
  5508  05B8  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
  5509                           
  5510                           ;fifo.c: 530:     }
  5511  05BD  2E86               	goto	l439
  5512  05BE                     l7364:
  5513  05BE  3065               	movlw	101
  5514  05BF  0243               	subwf	printExec@passo,w
  5515  05C0  1C03               	skipc
  5516  05C1  2DC3               	goto	u5641
  5517  05C2  2DC4               	goto	u5640
  5518  05C3                     u5641:
  5519  05C3  2E12               	goto	l7378
  5520  05C4                     u5640:
  5521  05C4                     l7366:
  5522  05C4  30DD               	movlw	221
  5523  05C5  0243               	subwf	printExec@passo,w
  5524  05C6  1803               	skipnc
  5525  05C7  2DC9               	goto	u5651
  5526  05C8  2DCA               	goto	u5650
  5527  05C9                     u5651:
  5528  05C9  2E12               	goto	l7378
  5529  05CA                     u5650:
  5530  05CA                     l7368:
  5531                           
  5532                           ;fifo.c: 532:     {;fifo.c: 533:         decodifica(&passo);
  5533  05CA  3043               	movlw	(low (printExec@passo| 0))& (0+255)
  5534  05CB  160A  118A  2656  120A  118A  	fcall	_decodifica
  5535  05D0                     l7370:
  5536                           
  5537                           ;fifo.c: 534:         if( dignum_tam( (int) passo ) == 3 )
  5538  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  5539  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  5540  05D2  0843               	movf	printExec@passo,w
  5541  05D3  00BA               	movwf	??_printExec
  5542  05D4  01BB               	clrf	??_printExec+1
  5543  05D5  083A               	movf	??_printExec,w
  5544  05D6  00A9               	movwf	dignum_tam@num
  5545  05D7  083B               	movf	??_printExec+1,w
  5546  05D8  00AA               	movwf	dignum_tam@num+1
  5547  05D9  160A  158A  2384  120A  118A  	fcall	_dignum_tam
  5548  05DE  3A03               	xorlw	3
  5549  05DF  1D03               	skipz
  5550  05E0  2DE2               	goto	u5661
  5551  05E1  2DE3               	goto	u5660
  5552  05E2                     u5661:
  5553  05E2  2DE7               	goto	l7374
  5554  05E3                     u5660:
  5555  05E3                     l7372:
  5556                           
  5557                           ;fifo.c: 535:             col-=1;
  5558  05E3  3001               	movlw	1
  5559  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  5560  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  5561  05E6  02C2               	subwf	printExec@col,f
  5562  05E7                     l7374:
  5563                           
  5564                           ;fifo.c: 536:         dispLCD_num(0, col, (int)passo, dignum_tam( (int)passo) );
  5565  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  5566  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  5567  05E9  01AD               	clrf	dispLCD_num@lin
  5568  05EA  0842               	movf	printExec@col,w
  5569  05EB  00BA               	movwf	??_printExec
  5570  05EC  083A               	movf	??_printExec,w
  5571  05ED  00AE               	movwf	dispLCD_num@col
  5572  05EE  0843               	movf	printExec@passo,w
  5573  05EF  00BB               	movwf	??_printExec+1
  5574  05F0  01BC               	clrf	??_printExec+2
  5575  05F1  083B               	movf	??_printExec+1,w
  5576  05F2  00AF               	movwf	dispLCD_num@num
  5577  05F3  083C               	movf	??_printExec+2,w
  5578  05F4  00B0               	movwf	dispLCD_num@num+1
  5579  05F5  0843               	movf	printExec@passo,w
  5580  05F6  00BD               	movwf	??_printExec+3
  5581  05F7  01BE               	clrf	??_printExec+4
  5582  05F8  083D               	movf	??_printExec+3,w
  5583  05F9  00A9               	movwf	dignum_tam@num
  5584  05FA  083E               	movf	??_printExec+4,w
  5585  05FB  00AA               	movwf	dignum_tam@num+1
  5586  05FC  160A  158A  2384  120A  118A  	fcall	_dignum_tam
  5587  0601  1283               	bcf	3,5	;RP0=0, select bank0
  5588  0602  1303               	bcf	3,6	;RP1=0, select bank0
  5589  0603  00BF               	movwf	??_printExec+5
  5590  0604  083F               	movf	??_printExec+5,w
  5591  0605  00B1               	movwf	dispLCD_num@tam
  5592  0606  120A  118A  2687  120A  118A  	fcall	_dispLCD_num
  5593  060B                     l7376:
  5594                           
  5595                           ;fifo.c: 537:         dispLCD_dataReg('s');
  5596  060B  3073               	movlw	115
  5597  060C  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
  5598                           
  5599                           ;fifo.c: 538:     }
  5600  0611  2E86               	goto	l439
  5601  0612                     l7378:
  5602  0612  30DD               	movlw	221
  5603  0613  0243               	subwf	printExec@passo,w
  5604  0614  1C03               	skipc
  5605  0615  2E17               	goto	u5671
  5606  0616  2E18               	goto	u5670
  5607  0617                     u5671:
  5608  0617  2E4F               	goto	l7394
  5609  0618                     u5670:
  5610  0618                     l7380:
  5611  0618  30FE               	movlw	254
  5612  0619  0243               	subwf	printExec@passo,w
  5613  061A  1803               	skipnc
  5614  061B  2E1D               	goto	u5681
  5615  061C  2E1E               	goto	u5680
  5616  061D                     u5681:
  5617  061D  2E4F               	goto	l7394
  5618  061E                     u5680:
  5619  061E                     l7382:
  5620                           
  5621                           ;fifo.c: 540:     {;fifo.c: 541:         decodifica(&passo);
  5622  061E  3043               	movlw	(low (printExec@passo| 0))& (0+255)
  5623  061F  160A  118A  2656  120A  118A  	fcall	_decodifica
  5624                           
  5625                           ;fifo.c: 542:         dispLCD_lincol(0, col);
  5626  0624  1283               	bcf	3,5	;RP0=0, select bank0
  5627  0625  1303               	bcf	3,6	;RP1=0, select bank0
  5628  0626  0842               	movf	printExec@col,w
  5629  0627  00BA               	movwf	??_printExec
  5630  0628  083A               	movf	??_printExec,w
  5631  0629  00A3               	movwf	dispLCD_lincol@col
  5632  062A  3000               	movlw	0
  5633  062B  160A  158A  25BB  120A  118A  	fcall	_dispLCD_lincol
  5634  0630                     l7384:
  5635                           
  5636                           ;fifo.c: 543:         dispLCD_dataReg( passo & ~0x20 );
  5637  0630  1283               	bcf	3,5	;RP0=0, select bank0
  5638  0631  1303               	bcf	3,6	;RP1=0, select bank0
  5639  0632  0843               	movf	printExec@passo,w
  5640  0633  39DF               	andlw	223
  5641  0634  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
  5642  0639                     l7386:
  5643                           
  5644                           ;fifo.c: 544:         dispLCD_dataReg( passo & 0x20 ? '-': '+' );
  5645  0639  1283               	bcf	3,5	;RP0=0, select bank0
  5646  063A  1303               	bcf	3,6	;RP1=0, select bank0
  5647  063B  1AC3               	btfsc	printExec@passo,5
  5648  063C  2E3E               	goto	u5691
  5649  063D  2E3F               	goto	u5690
  5650  063E                     u5691:
  5651  063E  2E44               	goto	l7390
  5652  063F                     u5690:
  5653  063F                     l7388:
  5654  063F  302B               	movlw	43
  5655  0640  00C0               	movwf	_printExec$417
  5656  0641  3000               	movlw	0
  5657  0642  00C1               	movwf	_printExec$417+1
  5658  0643  2E48               	goto	l7392
  5659  0644                     l7390:
  5660  0644  302D               	movlw	45
  5661  0645  00C0               	movwf	_printExec$417
  5662  0646  3000               	movlw	0
  5663  0647  00C1               	movwf	_printExec$417+1
  5664  0648                     l7392:
  5665  0648  0840               	movf	_printExec$417,w
  5666  0649  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
  5667                           
  5668                           ;fifo.c: 545:     }
  5669  064E  2E86               	goto	l439
  5670  064F                     l7394:
  5671  064F  30FE               	movlw	254
  5672  0650  0643               	xorwf	printExec@passo,w
  5673  0651  1D03               	btfss	3,2
  5674  0652  2E54               	goto	u5701
  5675  0653  2E55               	goto	u5700
  5676  0654                     u5701:
  5677  0654  2E86               	goto	l431
  5678  0655                     u5700:
  5679  0655                     l7396:
  5680                           
  5681                           ;fifo.c: 547:     {;fifo.c: 548:         decodifica(&passo);
  5682  0655  3043               	movlw	(low (printExec@passo| 0))& (0+255)
  5683  0656  160A  118A  2656  120A  118A  	fcall	_decodifica
  5684  065B                     l7398:
  5685                           
  5686                           ;fifo.c: 549:         dispLCD_num(0, col, (int)passo, dignum_tam( (int)passo) );
  5687  065B  1283               	bcf	3,5	;RP0=0, select bank0
  5688  065C  1303               	bcf	3,6	;RP1=0, select bank0
  5689  065D  01AD               	clrf	dispLCD_num@lin
  5690  065E  0842               	movf	printExec@col,w
  5691  065F  00BA               	movwf	??_printExec
  5692  0660  083A               	movf	??_printExec,w
  5693  0661  00AE               	movwf	dispLCD_num@col
  5694  0662  0843               	movf	printExec@passo,w
  5695  0663  00BB               	movwf	??_printExec+1
  5696  0664  01BC               	clrf	??_printExec+2
  5697  0665  083B               	movf	??_printExec+1,w
  5698  0666  00AF               	movwf	dispLCD_num@num
  5699  0667  083C               	movf	??_printExec+2,w
  5700  0668  00B0               	movwf	dispLCD_num@num+1
  5701  0669  0843               	movf	printExec@passo,w
  5702  066A  00BD               	movwf	??_printExec+3
  5703  066B  01BE               	clrf	??_printExec+4
  5704  066C  083D               	movf	??_printExec+3,w
  5705  066D  00A9               	movwf	dignum_tam@num
  5706  066E  083E               	movf	??_printExec+4,w
  5707  066F  00AA               	movwf	dignum_tam@num+1
  5708  0670  160A  158A  2384  120A  118A  	fcall	_dignum_tam
  5709  0675  1283               	bcf	3,5	;RP0=0, select bank0
  5710  0676  1303               	bcf	3,6	;RP1=0, select bank0
  5711  0677  00BF               	movwf	??_printExec+5
  5712  0678  083F               	movf	??_printExec+5,w
  5713  0679  00B1               	movwf	dispLCD_num@tam
  5714  067A  120A  118A  2687  120A  118A  	fcall	_dispLCD_num
  5715  067F                     l7400:
  5716                           
  5717                           ;fifo.c: 550:         dispLCD_dataReg('%');
  5718  067F  3025               	movlw	37
  5719  0680  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
  5720  0685  2E86               	goto	l439
  5721  0686                     l431:
  5722  0686                     l439:
  5723  0686  0008               	return
  5724  0687                     __end_of_printExec:
  5725                           
  5726                           	psect	text19
  5727  1A93                     __ptext19:	
  5728 ;; *************** function _posAtual *****************
  5729 ;; Defined at:
  5730 ;;		line 512 in file "fifo.c"
  5731 ;; Parameters:    Size  Location     Type
  5732 ;;  ind             1    wreg     unsigned char 
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;  ind             1    2[BANK0 ] unsigned char 
  5735 ;;  passo           1    3[BANK0 ] unsigned char 
  5736 ;; Return value:  Size  Location     Type
  5737 ;;                  1    wreg      unsigned char 
  5738 ;; Registers used:
  5739 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5740 ;; Tracked objects:
  5741 ;;		On entry : 0/0
  5742 ;;		On exit  : 0/0
  5743 ;;		Unchanged: 0/0
  5744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5745 ;;      Params:         0       0       0       0       0
  5746 ;;      Locals:         0       2       0       0       0
  5747 ;;      Temps:          0       1       0       0       0
  5748 ;;      Totals:         0       3       0       0       0
  5749 ;;Total ram usage:        3 bytes
  5750 ;; Hardware stack levels used:    1
  5751 ;; Hardware stack levels required when called:    3
  5752 ;; This function calls:
  5753 ;;		_fifo_lerPos
  5754 ;;		_getIndicePassos
  5755 ;; This function is called by:
  5756 ;;		_printExec
  5757 ;; This function uses a non-reentrant model
  5758 ;;
  5759                           
  5760                           
  5761                           ;psect for function _posAtual
  5762  1A93                     _posAtual:
  5763                           
  5764                           ;incstack = 0
  5765                           ; Regs used in _posAtual: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5766                           ;posAtual@ind stored from wreg
  5767  1A93  1283               	bcf	3,5	;RP0=0, select bank0
  5768  1A94  1303               	bcf	3,6	;RP1=0, select bank0
  5769  1A95  00A2               	movwf	posAtual@ind
  5770  1A96                     l6894:
  5771  1A96                     l6896:
  5772                           
  5773                           ;fifo.c: 516:     passo = fifo_lerPos( getIndicePassos() + ind );
  5774  1A96  160A  158A  21B5  160A  158A  	fcall	_getIndicePassos
  5775  1A9B  1283               	bcf	3,5	;RP0=0, select bank0
  5776  1A9C  1303               	bcf	3,6	;RP1=0, select bank0
  5777  1A9D  0722               	addwf	posAtual@ind,w
  5778  1A9E  160A  158A  21F4  160A  158A  	fcall	_fifo_lerPos
  5779  1AA3  1283               	bcf	3,5	;RP0=0, select bank0
  5780  1AA4  1303               	bcf	3,6	;RP1=0, select bank0
  5781  1AA5  00A1               	movwf	??_posAtual
  5782  1AA6  0821               	movf	??_posAtual,w
  5783  1AA7  00A3               	movwf	posAtual@passo
  5784  1AA8                     l6898:
  5785                           
  5786                           ;fifo.c: 517:     return(passo);
  5787  1AA8  0823               	movf	posAtual@passo,w
  5788  1AA9                     l423:
  5789  1AA9  0008               	return
  5790  1AAA                     __end_of_posAtual:
  5791                           
  5792                           	psect	text20
  5793  19B5                     __ptext20:	
  5794 ;; *************** function _getIndicePassos *****************
  5795 ;; Defined at:
  5796 ;;		line 31 in file "fifo.c"
  5797 ;; Parameters:    Size  Location     Type
  5798 ;;		None
  5799 ;; Auto vars:     Size  Location     Type
  5800 ;;		None
  5801 ;; Return value:  Size  Location     Type
  5802 ;;                  1    wreg      unsigned char 
  5803 ;; Registers used:
  5804 ;;		wreg
  5805 ;; Tracked objects:
  5806 ;;		On entry : 0/0
  5807 ;;		On exit  : 0/0
  5808 ;;		Unchanged: 0/0
  5809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5810 ;;      Params:         0       0       0       0       0
  5811 ;;      Locals:         0       0       0       0       0
  5812 ;;      Temps:          0       0       0       0       0
  5813 ;;      Totals:         0       0       0       0       0
  5814 ;;Total ram usage:        0 bytes
  5815 ;; Hardware stack levels used:    1
  5816 ;; Hardware stack levels required when called:    2
  5817 ;; This function calls:
  5818 ;;		Nothing
  5819 ;; This function is called by:
  5820 ;;		_posAtual
  5821 ;;		_main
  5822 ;; This function uses a non-reentrant model
  5823 ;;
  5824                           
  5825                           
  5826                           ;psect for function _getIndicePassos
  5827  19B5                     _getIndicePassos:
  5828  19B5                     l6580:	
  5829                           ;incstack = 0
  5830                           ; Regs used in _getIndicePassos: [wreg]
  5831                           
  5832                           
  5833                           ;fifo.c: 33:     return(indice_passos);
  5834  19B5  087A               	movf	_indice_passos,w
  5835  19B6                     l210:
  5836  19B6  0008               	return
  5837  19B7                     __end_of_getIndicePassos:
  5838                           
  5839                           	psect	text21
  5840  19F4                     __ptext21:	
  5841 ;; *************** function _fifo_lerPos *****************
  5842 ;; Defined at:
  5843 ;;		line 168 in file "fifo.c"
  5844 ;; Parameters:    Size  Location     Type
  5845 ;;  i               1    wreg     unsigned char 
  5846 ;; Auto vars:     Size  Location     Type
  5847 ;;  i               1    0[BANK0 ] unsigned char 
  5848 ;; Return value:  Size  Location     Type
  5849 ;;                  1    wreg      unsigned char 
  5850 ;; Registers used:
  5851 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5852 ;; Tracked objects:
  5853 ;;		On entry : 0/0
  5854 ;;		On exit  : 0/0
  5855 ;;		Unchanged: 0/0
  5856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5857 ;;      Params:         0       0       0       0       0
  5858 ;;      Locals:         0       1       0       0       0
  5859 ;;      Temps:          0       0       0       0       0
  5860 ;;      Totals:         0       1       0       0       0
  5861 ;;Total ram usage:        1 bytes
  5862 ;; Hardware stack levels used:    1
  5863 ;; Hardware stack levels required when called:    2
  5864 ;; This function calls:
  5865 ;;		Nothing
  5866 ;; This function is called by:
  5867 ;;		_posAtual
  5868 ;; This function uses a non-reentrant model
  5869 ;;
  5870                           
  5871                           
  5872                           ;psect for function _fifo_lerPos
  5873  19F4                     _fifo_lerPos:
  5874                           
  5875                           ;incstack = 0
  5876                           ; Regs used in _fifo_lerPos: [wreg-fsr0h+status,2+status,0]
  5877                           ;fifo_lerPos@i stored from wreg
  5878  19F4  1283               	bcf	3,5	;RP0=0, select bank0
  5879  19F5  1303               	bcf	3,6	;RP1=0, select bank0
  5880  19F6  00A0               	movwf	fifo_lerPos@i
  5881  19F7                     l6584:
  5882                           
  5883                           ;fifo.c: 168: char fifo_lerPos(char i);fifo.c: 169: {;fifo.c: 170:     return ( fila[i] 
      +                          );
  5884  19F7  0820               	movf	fifo_lerPos@i,w
  5885  19F8  3E52               	addlw	(low (_fila| 0))& (0+255)
  5886  19F9  0084               	movwf	4
  5887  19FA  1383               	bcf	3,7	;select IRP bank0
  5888  19FB  0800               	movf	0,w
  5889  19FC                     l275:
  5890  19FC  0008               	return
  5891  19FD                     __end_of_fifo_lerPos:
  5892                           
  5893                           	psect	text22
  5894  0687                     __ptext22:	
  5895 ;; *************** function _dispLCD_num *****************
  5896 ;; Defined at:
  5897 ;;		line 200 in file "dispLCD4vias.c"
  5898 ;; Parameters:    Size  Location     Type
  5899 ;;  lin             1   13[BANK0 ] unsigned char 
  5900 ;;  col             1   14[BANK0 ] unsigned char 
  5901 ;;  num             2   15[BANK0 ] int 
  5902 ;;  tam             1   17[BANK0 ] unsigned char 
  5903 ;; Auto vars:     Size  Location     Type
  5904 ;;  div             2   23[BANK0 ] int 
  5905 ;;  sinal           1   22[BANK0 ] unsigned char 
  5906 ;;  size            1   21[BANK0 ] unsigned char 
  5907 ;; Return value:  Size  Location     Type
  5908 ;;                  1    wreg      void 
  5909 ;; Registers used:
  5910 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5911 ;; Tracked objects:
  5912 ;;		On entry : 0/0
  5913 ;;		On exit  : 0/0
  5914 ;;		Unchanged: 0/0
  5915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5916 ;;      Params:         0       5       0       0       0
  5917 ;;      Locals:         0       4       0       0       0
  5918 ;;      Temps:          0       3       0       0       0
  5919 ;;      Totals:         0      12       0       0       0
  5920 ;;Total ram usage:       12 bytes
  5921 ;; Hardware stack levels used:    1
  5922 ;; Hardware stack levels required when called:    4
  5923 ;; This function calls:
  5924 ;;		___awdiv
  5925 ;;		___awmod
  5926 ;;		_dispLCD_dataReg
  5927 ;;		_dispLCD_lincol
  5928 ;; This function is called by:
  5929 ;;		_printExec
  5930 ;;		_main
  5931 ;; This function uses a non-reentrant model
  5932 ;;
  5933                           
  5934                           
  5935                           ;psect for function _dispLCD_num
  5936  0687                     _dispLCD_num:
  5937  0687                     l6674:	
  5938                           ;incstack = 0
  5939                           ; Regs used in _dispLCD_num: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5940                           
  5941                           
  5942                           ;dispLCD4vias.c: 200: void dispLCD_num( unsigned char lin, unsigned char col,;dispLCD4vi
      +                          as.c: 201:                     int num, unsigned char tam );dispLCD4vias.c: 202: {;dispL
      +                          CD4vias.c: 203:     int div;;dispLCD4vias.c: 204:     unsigned char size;;dispLCD4vias.c
      +                          : 205:     char sinal;;dispLCD4vias.c: 207:     sinal = num < 0;
  5943  0687  1283               	bcf	3,5	;RP0=0, select bank0
  5944  0688  1303               	bcf	3,6	;RP1=0, select bank0
  5945  0689  1BB0               	btfsc	dispLCD_num@num+1,7
  5946  068A  2E8C               	goto	u4771
  5947  068B  2E8E               	goto	u4770
  5948  068C                     u4771:
  5949  068C  3001               	movlw	1
  5950  068D  2E8F               	goto	u4780
  5951  068E                     u4770:
  5952  068E  3000               	movlw	0
  5953  068F                     u4780:
  5954  068F  00B2               	movwf	??_dispLCD_num
  5955  0690  0832               	movf	??_dispLCD_num,w
  5956  0691  00B6               	movwf	dispLCD_num@sinal
  5957  0692                     l6676:
  5958                           
  5959                           ;dispLCD4vias.c: 208:     if( sinal )
  5960  0692  0836               	movf	dispLCD_num@sinal,w
  5961  0693  1903               	btfsc	3,2
  5962  0694  2E96               	goto	u4791
  5963  0695  2E97               	goto	u4790
  5964  0696                     u4791:
  5965  0696  2E9C               	goto	l6680
  5966  0697                     u4790:
  5967  0697                     l6678:
  5968                           
  5969                           ;dispLCD4vias.c: 209:         num = (~num) + 1;
  5970  0697  09AF               	comf	dispLCD_num@num,f
  5971  0698  09B0               	comf	dispLCD_num@num+1,f
  5972  0699  0AAF               	incf	dispLCD_num@num,f
  5973  069A  1903               	skipnz
  5974  069B  0AB0               	incf	dispLCD_num@num+1,f
  5975  069C                     l6680:
  5976                           
  5977                           ;dispLCD4vias.c: 211:     dispLCD_lincol(lin, col);
  5978  069C  082E               	movf	dispLCD_num@col,w
  5979  069D  00B2               	movwf	??_dispLCD_num
  5980  069E  0832               	movf	??_dispLCD_num,w
  5981  069F  00A3               	movwf	dispLCD_lincol@col
  5982  06A0  082D               	movf	dispLCD_num@lin,w
  5983  06A1  160A  158A  25BB  120A  118A  	fcall	_dispLCD_lincol
  5984  06A6                     l6682:
  5985                           
  5986                           ;dispLCD4vias.c: 213:     div=10000;
  5987  06A6  3010               	movlw	16
  5988  06A7  1283               	bcf	3,5	;RP0=0, select bank0
  5989  06A8  1303               	bcf	3,6	;RP1=0, select bank0
  5990  06A9  00B7               	movwf	dispLCD_num@div
  5991  06AA  3027               	movlw	39
  5992  06AB  00B8               	movwf	dispLCD_num@div+1
  5993  06AC                     l6684:
  5994                           
  5995                           ;dispLCD4vias.c: 214:     size = 5;
  5996  06AC  3005               	movlw	5
  5997  06AD  00B2               	movwf	??_dispLCD_num
  5998  06AE  0832               	movf	??_dispLCD_num,w
  5999  06AF  00B5               	movwf	dispLCD_num@size
  6000                           
  6001                           ;dispLCD4vias.c: 215:     while( div >= 1 )
  6002  06B0  2EDD               	goto	l6692
  6003  06B1                     l6686:
  6004                           
  6005                           ;dispLCD4vias.c: 216:     {;dispLCD4vias.c: 217:         if( num/div == 0 )
  6006  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  6007  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  6008  06B3  0838               	movf	dispLCD_num@div+1,w
  6009  06B4  00A1               	movwf	___awdiv@divisor+1
  6010  06B5  0837               	movf	dispLCD_num@div,w
  6011  06B6  00A0               	movwf	___awdiv@divisor
  6012  06B7  0830               	movf	dispLCD_num@num+1,w
  6013  06B8  00A3               	movwf	___awdiv@dividend+1
  6014  06B9  082F               	movf	dispLCD_num@num,w
  6015  06BA  00A2               	movwf	___awdiv@dividend
  6016  06BB  160A  118A  25ED  120A  118A  	fcall	___awdiv
  6017  06C0  1283               	bcf	3,5	;RP0=0, select bank0
  6018  06C1  1303               	bcf	3,6	;RP1=0, select bank0
  6019  06C2  0820               	movf	?___awdiv,w
  6020  06C3  0421               	iorwf	?___awdiv+1,w
  6021  06C4  1D03               	btfss	3,2
  6022  06C5  2EC7               	goto	u4801
  6023  06C6  2EC8               	goto	u4800
  6024  06C7                     u4801:
  6025  06C7  2EF5               	goto	l6698
  6026  06C8                     u4800:
  6027  06C8                     l6688:
  6028                           
  6029                           ;dispLCD4vias.c: 218:             --size;
  6030  06C8  3001               	movlw	1
  6031  06C9  02B5               	subwf	dispLCD_num@size,f
  6032  06CA                     l6690:
  6033                           
  6034                           ;dispLCD4vias.c: 221:         div/=10;
  6035  06CA  300A               	movlw	10
  6036  06CB  00A0               	movwf	___awdiv@divisor
  6037  06CC  3000               	movlw	0
  6038  06CD  00A1               	movwf	___awdiv@divisor+1
  6039  06CE  0838               	movf	dispLCD_num@div+1,w
  6040  06CF  00A3               	movwf	___awdiv@dividend+1
  6041  06D0  0837               	movf	dispLCD_num@div,w
  6042  06D1  00A2               	movwf	___awdiv@dividend
  6043  06D2  160A  118A  25ED  120A  118A  	fcall	___awdiv
  6044  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  6045  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  6046  06D9  0821               	movf	?___awdiv+1,w
  6047  06DA  00B8               	movwf	dispLCD_num@div+1
  6048  06DB  0820               	movf	?___awdiv,w
  6049  06DC  00B7               	movwf	dispLCD_num@div
  6050  06DD                     l6692:
  6051                           
  6052                           ;dispLCD4vias.c: 215:     while( div >= 1 )
  6053  06DD  0838               	movf	dispLCD_num@div+1,w
  6054  06DE  3A80               	xorlw	128
  6055  06DF  00FF               	movwf	btemp+1
  6056  06E0  3080               	movlw	128
  6057  06E1  027F               	subwf	btemp+1,w
  6058  06E2  1D03               	skipz
  6059  06E3  2EE6               	goto	u4815
  6060  06E4  3001               	movlw	1
  6061  06E5  0237               	subwf	dispLCD_num@div,w
  6062  06E6                     u4815:
  6063  06E6  1803               	skipnc
  6064  06E7  2EE9               	goto	u4811
  6065  06E8  2EEA               	goto	u4810
  6066  06E9                     u4811:
  6067  06E9  2EB1               	goto	l6686
  6068  06EA                     u4810:
  6069  06EA  2EF5               	goto	l6698
  6070  06EB                     l6694:
  6071                           
  6072                           ;dispLCD4vias.c: 225:     {;dispLCD4vias.c: 226:         dispLCD_dataReg(' ');
  6073  06EB  3020               	movlw	32
  6074  06EC  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
  6075  06F1                     l6696:
  6076                           
  6077                           ;dispLCD4vias.c: 227:         --tam;
  6078  06F1  3001               	movlw	1
  6079  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  6080  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  6081  06F4  02B1               	subwf	dispLCD_num@tam,f
  6082  06F5                     l6698:
  6083                           
  6084                           ;dispLCD4vias.c: 224:     while( tam > (size+sinal) && tam > 1 )
  6085  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  6086  06F6  1303               	bcf	3,6	;RP1=0, select bank0
  6087  06F7  0835               	movf	dispLCD_num@size,w
  6088  06F8  0736               	addwf	dispLCD_num@sinal,w
  6089  06F9  00B2               	movwf	??_dispLCD_num
  6090  06FA  01B3               	clrf	??_dispLCD_num+1
  6091  06FB  0DB3               	rlf	??_dispLCD_num+1,f
  6092  06FC  0833               	movf	??_dispLCD_num+1,w
  6093  06FD  3A80               	xorlw	128
  6094  06FE  00B4               	movwf	??_dispLCD_num+2
  6095  06FF  3080               	movlw	128
  6096  0700  0234               	subwf	??_dispLCD_num+2,w
  6097  0701  1D03               	skipz
  6098  0702  2F05               	goto	u4825
  6099  0703  0831               	movf	dispLCD_num@tam,w
  6100  0704  0232               	subwf	??_dispLCD_num,w
  6101  0705                     u4825:
  6102  0705  1803               	skipnc
  6103  0706  2F08               	goto	u4821
  6104  0707  2F09               	goto	u4820
  6105  0708                     u4821:
  6106  0708  2F11               	goto	l6702
  6107  0709                     u4820:
  6108  0709                     l6700:
  6109  0709  3002               	movlw	2
  6110  070A  1283               	bcf	3,5	;RP0=0, select bank0
  6111  070B  1303               	bcf	3,6	;RP1=0, select bank0
  6112  070C  0231               	subwf	dispLCD_num@tam,w
  6113  070D  1803               	skipnc
  6114  070E  2F10               	goto	u4831
  6115  070F  2F11               	goto	u4830
  6116  0710                     u4831:
  6117  0710  2EEB               	goto	l6694
  6118  0711                     u4830:
  6119  0711                     l6702:
  6120                           
  6121                           ;dispLCD4vias.c: 230:     if( sinal )
  6122  0711  1283               	bcf	3,5	;RP0=0, select bank0
  6123  0712  1303               	bcf	3,6	;RP1=0, select bank0
  6124  0713  0836               	movf	dispLCD_num@sinal,w
  6125  0714  1903               	btfsc	3,2
  6126  0715  2F17               	goto	u4841
  6127  0716  2F18               	goto	u4840
  6128  0717                     u4841:
  6129  0717  2F1E               	goto	l92
  6130  0718                     u4840:
  6131  0718                     l6704:
  6132                           
  6133                           ;dispLCD4vias.c: 231:         dispLCD_dataReg('-');
  6134  0718  302D               	movlw	45
  6135  0719  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
  6136  071E                     l92:	
  6137                           ;dispLCD4vias.c: 233:     do
  6138                           
  6139                           
  6140                           ;dispLCD4vias.c: 234:     {;dispLCD4vias.c: 235:         dispLCD_dataReg( (num / div) + 
      +                          '0' );
  6141  071E  1283               	bcf	3,5	;RP0=0, select bank0
  6142  071F  1303               	bcf	3,6	;RP1=0, select bank0
  6143  0720  0838               	movf	dispLCD_num@div+1,w
  6144  0721  00A1               	movwf	___awdiv@divisor+1
  6145  0722  0837               	movf	dispLCD_num@div,w
  6146  0723  00A0               	movwf	___awdiv@divisor
  6147  0724  0830               	movf	dispLCD_num@num+1,w
  6148  0725  00A3               	movwf	___awdiv@dividend+1
  6149  0726  082F               	movf	dispLCD_num@num,w
  6150  0727  00A2               	movwf	___awdiv@dividend
  6151  0728  160A  118A  25ED  120A  118A  	fcall	___awdiv
  6152  072D  1283               	bcf	3,5	;RP0=0, select bank0
  6153  072E  1303               	bcf	3,6	;RP1=0, select bank0
  6154  072F  0820               	movf	?___awdiv,w
  6155  0730  3E30               	addlw	48
  6156  0731  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
  6157                           
  6158                           ;dispLCD4vias.c: 236:         num = num % div;
  6159  0736  1283               	bcf	3,5	;RP0=0, select bank0
  6160  0737  1303               	bcf	3,6	;RP1=0, select bank0
  6161  0738  0838               	movf	dispLCD_num@div+1,w
  6162  0739  00A1               	movwf	___awmod@divisor+1
  6163  073A  0837               	movf	dispLCD_num@div,w
  6164  073B  00A0               	movwf	___awmod@divisor
  6165  073C  0830               	movf	dispLCD_num@num+1,w
  6166  073D  00A3               	movwf	___awmod@dividend+1
  6167  073E  082F               	movf	dispLCD_num@num,w
  6168  073F  00A2               	movwf	___awmod@dividend
  6169  0740  160A  118A  252A  120A  118A  	fcall	___awmod
  6170  0745  1283               	bcf	3,5	;RP0=0, select bank0
  6171  0746  1303               	bcf	3,6	;RP1=0, select bank0
  6172  0747  0821               	movf	?___awmod+1,w
  6173  0748  00B0               	movwf	dispLCD_num@num+1
  6174  0749  0820               	movf	?___awmod,w
  6175  074A  00AF               	movwf	dispLCD_num@num
  6176                           
  6177                           ;dispLCD4vias.c: 237:         div/=10;
  6178  074B  300A               	movlw	10
  6179  074C  00A0               	movwf	___awdiv@divisor
  6180  074D  3000               	movlw	0
  6181  074E  00A1               	movwf	___awdiv@divisor+1
  6182  074F  0838               	movf	dispLCD_num@div+1,w
  6183  0750  00A3               	movwf	___awdiv@dividend+1
  6184  0751  0837               	movf	dispLCD_num@div,w
  6185  0752  00A2               	movwf	___awdiv@dividend
  6186  0753  160A  118A  25ED  120A  118A  	fcall	___awdiv
  6187  0758  1283               	bcf	3,5	;RP0=0, select bank0
  6188  0759  1303               	bcf	3,6	;RP1=0, select bank0
  6189  075A  0821               	movf	?___awdiv+1,w
  6190  075B  00B8               	movwf	dispLCD_num@div+1
  6191  075C  0820               	movf	?___awdiv,w
  6192  075D  00B7               	movwf	dispLCD_num@div
  6193  075E                     l6706:
  6194                           
  6195                           ;dispLCD4vias.c: 238:     }
  6196  075E  0838               	movf	dispLCD_num@div+1,w
  6197  075F  3A80               	xorlw	128
  6198  0760  00FF               	movwf	btemp+1
  6199  0761  3080               	movlw	128
  6200  0762  027F               	subwf	btemp+1,w
  6201  0763  1D03               	skipz
  6202  0764  2F67               	goto	u4855
  6203  0765  3001               	movlw	1
  6204  0766  0237               	subwf	dispLCD_num@div,w
  6205  0767                     u4855:
  6206  0767  1803               	skipnc
  6207  0768  2F6A               	goto	u4851
  6208  0769  2F6B               	goto	u4850
  6209  076A                     u4851:
  6210  076A  2F1E               	goto	l92
  6211  076B                     u4850:
  6212  076B                     l94:
  6213  076B  0008               	return
  6214  076C                     __end_of_dispLCD_num:
  6215                           
  6216                           	psect	text23
  6217  19BC                     __ptext23:	
  6218 ;; *************** function _init_atuadores *****************
  6219 ;; Defined at:
  6220 ;;		line 103 in file "fifo.c"
  6221 ;; Parameters:    Size  Location     Type
  6222 ;;		None
  6223 ;; Auto vars:     Size  Location     Type
  6224 ;;		None
  6225 ;; Return value:  Size  Location     Type
  6226 ;;                  1    wreg      void 
  6227 ;; Registers used:
  6228 ;;		None
  6229 ;; Tracked objects:
  6230 ;;		On entry : 0/0
  6231 ;;		On exit  : 0/0
  6232 ;;		Unchanged: 0/0
  6233 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6234 ;;      Params:         0       0       0       0       0
  6235 ;;      Locals:         0       0       0       0       0
  6236 ;;      Temps:          0       0       0       0       0
  6237 ;;      Totals:         0       0       0       0       0
  6238 ;;Total ram usage:        0 bytes
  6239 ;; Hardware stack levels used:    1
  6240 ;; Hardware stack levels required when called:    2
  6241 ;; This function calls:
  6242 ;;		Nothing
  6243 ;; This function is called by:
  6244 ;;		_main
  6245 ;; This function uses a non-reentrant model
  6246 ;;
  6247                           
  6248                           
  6249                           ;psect for function _init_atuadores
  6250  19BC                     _init_atuadores:
  6251  19BC                     l7098:	
  6252                           ;incstack = 0
  6253                           ; Regs used in _init_atuadores: []
  6254                           
  6255                           
  6256                           ;fifo.c: 105:     atuador.A = 0;
  6257  19BC  1079               	bcf	_atuador,0
  6258                           
  6259                           ;fifo.c: 106:     atuador.B = 0;
  6260  19BD  10F9               	bcf	_atuador,1
  6261                           
  6262                           ;fifo.c: 107:     atuador.C = 0;
  6263  19BE  1179               	bcf	_atuador,2
  6264                           
  6265                           ;fifo.c: 108:     atuador.D = 0;
  6266  19BF  11F9               	bcf	_atuador,3
  6267  19C0                     l249:
  6268  19C0  0008               	return
  6269  19C1                     __end_of_init_atuadores:
  6270                           
  6271                           	psect	text24
  6272  1E56                     __ptext24:	
  6273 ;; *************** function _initSerialIO *****************
  6274 ;; Defined at:
  6275 ;;		line 89 in file "serialIO.c"
  6276 ;; Parameters:    Size  Location     Type
  6277 ;;  ptrIn           1    wreg     PTR unsigned char 
  6278 ;;		 -> main@vetorIn(1), 
  6279 ;;  ptrOut          1    0[BANK0 ] PTR unsigned char 
  6280 ;;		 -> main@vetorOut(1), 
  6281 ;;  length          1    1[BANK0 ] unsigned char 
  6282 ;; Auto vars:     Size  Location     Type
  6283 ;;  ptrIn           1    3[BANK0 ] PTR unsigned char 
  6284 ;;		 -> main@vetorIn(1), 
  6285 ;; Return value:  Size  Location     Type
  6286 ;;                  1    wreg      void 
  6287 ;; Registers used:
  6288 ;;		wreg
  6289 ;; Tracked objects:
  6290 ;;		On entry : 0/0
  6291 ;;		On exit  : 0/0
  6292 ;;		Unchanged: 0/0
  6293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6294 ;;      Params:         0       2       0       0       0
  6295 ;;      Locals:         0       1       0       0       0
  6296 ;;      Temps:          0       1       0       0       0
  6297 ;;      Totals:         0       4       0       0       0
  6298 ;;Total ram usage:        4 bytes
  6299 ;; Hardware stack levels used:    1
  6300 ;; Hardware stack levels required when called:    2
  6301 ;; This function calls:
  6302 ;;		Nothing
  6303 ;; This function is called by:
  6304 ;;		_main
  6305 ;; This function uses a non-reentrant model
  6306 ;;
  6307                           
  6308                           
  6309                           ;psect for function _initSerialIO
  6310  1E56                     _initSerialIO:
  6311                           
  6312                           ;incstack = 0
  6313                           ; Regs used in _initSerialIO: [wreg]
  6314                           ;initSerialIO@ptrIn stored from wreg
  6315  1E56  1283               	bcf	3,5	;RP0=0, select bank0
  6316  1E57  1303               	bcf	3,6	;RP1=0, select bank0
  6317  1E58  00A3               	movwf	initSerialIO@ptrIn
  6318  1E59                     l7416:
  6319                           
  6320                           ;serialIO.c: 89: void initSerialIO( char * ptrIn, char * ptrOut, unsigned char length );
      +                          serialIO.c: 90: {;serialIO.c: 91:     ptrSerialIn = ptrIn;
  6321  1E59  0823               	movf	initSerialIO@ptrIn,w
  6322  1E5A  00A2               	movwf	??_initSerialIO
  6323  1E5B  0822               	movf	??_initSerialIO,w
  6324  1E5C  00D1               	movwf	_ptrSerialIn
  6325                           
  6326                           ;serialIO.c: 92:     ptrSerialOut = ptrOut;
  6327  1E5D  0820               	movf	initSerialIO@ptrOut,w
  6328  1E5E  00A2               	movwf	??_initSerialIO
  6329  1E5F  0822               	movf	??_initSerialIO,w
  6330  1E60  00D0               	movwf	_ptrSerialOut
  6331                           
  6332                           ;serialIO.c: 93:     lenSerialIO = length;
  6333  1E61  0821               	movf	initSerialIO@length,w
  6334  1E62  00A2               	movwf	??_initSerialIO
  6335  1E63  0822               	movf	??_initSerialIO,w
  6336  1E64  00CF               	movwf	_lenSerialIO
  6337  1E65                     l7418:
  6338                           
  6339                           ;serialIO.c: 95:     PORTAbits.RA3 = 0;
  6340  1E65  1185               	bcf	5,3	;volatile
  6341  1E66                     l7420:
  6342                           
  6343                           ;serialIO.c: 96:     ANSELbits.ANS3 = 0;
  6344  1E66  1683               	bsf	3,5	;RP0=1, select bank3
  6345  1E67  1703               	bsf	3,6	;RP1=1, select bank3
  6346  1E68  1188               	bcf	8,3	;volatile
  6347  1E69                     l7422:
  6348                           
  6349                           ;serialIO.c: 97:     TRISAbits.TRISA3 = 0;
  6350  1E69  1683               	bsf	3,5	;RP0=1, select bank1
  6351  1E6A  1303               	bcf	3,6	;RP1=0, select bank1
  6352  1E6B  1185               	bcf	5,3	;volatile
  6353  1E6C                     l7424:
  6354                           
  6355                           ;serialIO.c: 100:     PORTAbits.RA2 = 0;
  6356  1E6C  1283               	bcf	3,5	;RP0=0, select bank0
  6357  1E6D  1303               	bcf	3,6	;RP1=0, select bank0
  6358  1E6E  1105               	bcf	5,2	;volatile
  6359  1E6F                     l7426:
  6360                           
  6361                           ;serialIO.c: 101:     ANSELbits.ANS2 = 0;
  6362  1E6F  1683               	bsf	3,5	;RP0=1, select bank3
  6363  1E70  1703               	bsf	3,6	;RP1=1, select bank3
  6364  1E71  1108               	bcf	8,2	;volatile
  6365  1E72                     l7428:
  6366                           
  6367                           ;serialIO.c: 102:     TRISAbits.TRISA2 = 0;
  6368  1E72  1683               	bsf	3,5	;RP0=1, select bank1
  6369  1E73  1303               	bcf	3,6	;RP1=0, select bank1
  6370  1E74  1105               	bcf	5,2	;volatile
  6371  1E75                     l7430:
  6372                           
  6373                           ;serialIO.c: 105:     PORTAbits.RA0 = 0;
  6374  1E75  1283               	bcf	3,5	;RP0=0, select bank0
  6375  1E76  1303               	bcf	3,6	;RP1=0, select bank0
  6376  1E77  1005               	bcf	5,0	;volatile
  6377  1E78                     l7432:
  6378                           
  6379                           ;serialIO.c: 106:     ANSELbits.ANS0 = 0;
  6380  1E78  1683               	bsf	3,5	;RP0=1, select bank3
  6381  1E79  1703               	bsf	3,6	;RP1=1, select bank3
  6382  1E7A  1008               	bcf	8,0	;volatile
  6383  1E7B                     l7434:
  6384                           
  6385                           ;serialIO.c: 107:     TRISAbits.TRISA0 = 0;
  6386  1E7B  1683               	bsf	3,5	;RP0=1, select bank1
  6387  1E7C  1303               	bcf	3,6	;RP1=0, select bank1
  6388  1E7D  1005               	bcf	5,0	;volatile
  6389                           
  6390                           ;serialIO.c: 110:     PORTAbits.RA1;
  6391  1E7E  1283               	bcf	3,5	;RP0=0, select bank0
  6392  1E7F  1303               	bcf	3,6	;RP1=0, select bank0
  6393  1E80  0805               	movf	5,w	;volatile
  6394  1E81                     l7436:
  6395                           
  6396                           ;serialIO.c: 111:     ANSELbits.ANS1 = 0;
  6397  1E81  1683               	bsf	3,5	;RP0=1, select bank3
  6398  1E82  1703               	bsf	3,6	;RP1=1, select bank3
  6399  1E83  1088               	bcf	8,1	;volatile
  6400  1E84                     l7438:
  6401                           
  6402                           ;serialIO.c: 112:     TRISAbits.TRISA1 = 1;
  6403  1E84  1683               	bsf	3,5	;RP0=1, select bank1
  6404  1E85  1303               	bcf	3,6	;RP1=0, select bank1
  6405  1E86  1485               	bsf	5,1	;volatile
  6406  1E87                     l7440:
  6407                           
  6408                           ;serialIO.c: 115:     SERIALIO.CLK = 0;
  6409  1E87  1283               	bcf	3,5	;RP0=0, select bank0
  6410  1E88  1303               	bcf	3,6	;RP1=0, select bank0
  6411  1E89  1105               	bcf	5,2	;volatile
  6412  1E8A                     l7442:
  6413                           
  6414                           ;serialIO.c: 116:     SERIALIO.OUT = 0;
  6415  1E8A  1005               	bcf	5,0	;volatile
  6416  1E8B                     l7444:
  6417                           
  6418                           ;serialIO.c: 117:     SERIALIO.SHLD = 1;
  6419  1E8B  1585               	bsf	5,3	;volatile
  6420  1E8C                     l474:
  6421  1E8C  0008               	return
  6422  1E8D                     __end_of_initSerialIO:
  6423                           
  6424                           	psect	text25
  6425  19D4                     __ptext25:	
  6426 ;; *************** function _getContCiclos *****************
  6427 ;; Defined at:
  6428 ;;		line 49 in file "fifo.c"
  6429 ;; Parameters:    Size  Location     Type
  6430 ;;		None
  6431 ;; Auto vars:     Size  Location     Type
  6432 ;;		None
  6433 ;; Return value:  Size  Location     Type
  6434 ;;                  2    0[BANK0 ] unsigned int 
  6435 ;; Registers used:
  6436 ;;		wreg
  6437 ;; Tracked objects:
  6438 ;;		On entry : 0/0
  6439 ;;		On exit  : 0/0
  6440 ;;		Unchanged: 0/0
  6441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6442 ;;      Params:         0       2       0       0       0
  6443 ;;      Locals:         0       0       0       0       0
  6444 ;;      Temps:          0       0       0       0       0
  6445 ;;      Totals:         0       2       0       0       0
  6446 ;;Total ram usage:        2 bytes
  6447 ;; Hardware stack levels used:    1
  6448 ;; Hardware stack levels required when called:    2
  6449 ;; This function calls:
  6450 ;;		Nothing
  6451 ;; This function is called by:
  6452 ;;		_main
  6453 ;; This function uses a non-reentrant model
  6454 ;;
  6455                           
  6456                           
  6457                           ;psect for function _getContCiclos
  6458  19D4                     _getContCiclos:
  6459  19D4                     l7094:	
  6460                           ;incstack = 0
  6461                           ; Regs used in _getContCiclos: [wreg]
  6462                           
  6463                           
  6464                           ;fifo.c: 51:     return(cont_ciclos);
  6465  19D4  0877               	movf	_cont_ciclos+1,w
  6466  19D5  1283               	bcf	3,5	;RP0=0, select bank0
  6467  19D6  1303               	bcf	3,6	;RP1=0, select bank0
  6468  19D7  00A1               	movwf	?_getContCiclos+1
  6469  19D8  0876               	movf	_cont_ciclos,w
  6470  19D9  00A0               	movwf	?_getContCiclos
  6471  19DA                     l219:
  6472  19DA  0008               	return
  6473  19DB                     __end_of_getContCiclos:
  6474                           
  6475                           	psect	text26
  6476  19B3                     __ptext26:	
  6477 ;; *************** function _fifo_tam *****************
  6478 ;; Defined at:
  6479 ;;		line 317 in file "fifo.c"
  6480 ;; Parameters:    Size  Location     Type
  6481 ;;		None
  6482 ;; Auto vars:     Size  Location     Type
  6483 ;;		None
  6484 ;; Return value:  Size  Location     Type
  6485 ;;                  1    wreg      unsigned char 
  6486 ;; Registers used:
  6487 ;;		wreg
  6488 ;; Tracked objects:
  6489 ;;		On entry : 0/0
  6490 ;;		On exit  : 0/0
  6491 ;;		Unchanged: 0/0
  6492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6493 ;;      Params:         0       0       0       0       0
  6494 ;;      Locals:         0       0       0       0       0
  6495 ;;      Temps:          0       0       0       0       0
  6496 ;;      Totals:         0       0       0       0       0
  6497 ;;Total ram usage:        0 bytes
  6498 ;; Hardware stack levels used:    1
  6499 ;; Hardware stack levels required when called:    2
  6500 ;; This function calls:
  6501 ;;		Nothing
  6502 ;; This function is called by:
  6503 ;;		_main
  6504 ;; This function uses a non-reentrant model
  6505 ;;
  6506                           
  6507                           
  6508                           ;psect for function _fifo_tam
  6509  19B3                     _fifo_tam:
  6510  19B3                     l7196:	
  6511                           ;incstack = 0
  6512                           ; Regs used in _fifo_tam: [wreg]
  6513                           
  6514                           
  6515                           ;fifo.c: 319:     return( 18 );
  6516  19B3  3012               	movlw	18
  6517  19B4                     l350:
  6518  19B4  0008               	return
  6519  19B5                     __end_of_fifo_tam:
  6520                           
  6521                           	psect	text27
  6522  0093                     __ptext27:	
  6523 ;; *************** function _fifo_print *****************
  6524 ;; Defined at:
  6525 ;;		line 342 in file "fifo.c"
  6526 ;; Parameters:    Size  Location     Type
  6527 ;;		None
  6528 ;; Auto vars:     Size  Location     Type
  6529 ;;  comando         1   18[BANK0 ] unsigned char 
  6530 ;;  atraso          1   17[BANK0 ] unsigned char 
  6531 ;;  i               1   16[BANK0 ] unsigned char 
  6532 ;;  indPrint        1   15[BANK0 ] unsigned char 
  6533 ;;  completar       1   14[BANK0 ] unsigned char 
  6534 ;; Return value:  Size  Location     Type
  6535 ;;                  1    wreg      void 
  6536 ;; Registers used:
  6537 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6538 ;; Tracked objects:
  6539 ;;		On entry : 0/0
  6540 ;;		On exit  : 0/0
  6541 ;;		Unchanged: 0/0
  6542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6543 ;;      Params:         0       0       0       0       0
  6544 ;;      Locals:         0       7       0       0       0
  6545 ;;      Temps:          0       3       0       0       0
  6546 ;;      Totals:         0      10       0       0       0
  6547 ;;Total ram usage:       10 bytes
  6548 ;; Hardware stack levels used:    1
  6549 ;; Hardware stack levels required when called:    4
  6550 ;; This function calls:
  6551 ;;		___awdiv
  6552 ;;		___awmod
  6553 ;;		_decodifica
  6554 ;;		_dispLCD_dataReg
  6555 ;;		_dispLCD_lincol
  6556 ;; This function is called by:
  6557 ;;		_main
  6558 ;; This function uses a non-reentrant model
  6559 ;;
  6560                           
  6561                           
  6562                           ;psect for function _fifo_print
  6563  0093                     _fifo_print:
  6564  0093                     l7214:	
  6565                           ;incstack = 0
  6566                           ; Regs used in _fifo_print: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6567                           
  6568                           
  6569                           ;fifo.c: 344:     char completar = 0;
  6570  0093  1283               	bcf	3,5	;RP0=0, select bank0
  6571  0094  1303               	bcf	3,6	;RP1=0, select bank0
  6572  0095  01AE               	clrf	fifo_print@completar
  6573                           
  6574                           ;fifo.c: 346:     char atraso = 0;
  6575  0096  01B1               	clrf	fifo_print@atraso
  6576                           
  6577                           ;fifo.c: 347:     char i = 0;
  6578  0097  01B0               	clrf	fifo_print@i
  6579  0098                     l7216:
  6580                           
  6581                           ;fifo.c: 348:     char indPrint = ind_print;
  6582  0098  086C               	movf	_ind_print,w
  6583  0099  00A9               	movwf	??_fifo_print
  6584  009A  0829               	movf	??_fifo_print,w
  6585  009B  00AF               	movwf	fifo_print@indPrint
  6586  009C                     l7218:
  6587                           
  6588                           ;fifo.c: 350:     dispLCD_lincol(0, 0);
  6589  009C  01A3               	clrf	dispLCD_lincol@col
  6590  009D  3000               	movlw	0
  6591  009E  160A  158A  25BB  120A  118A  	fcall	_dispLCD_lincol
  6592  00A3                     l7220:
  6593                           
  6594                           ;fifo.c: 352:     {;fifo.c: 353:         if( completar )
  6595  00A3  1283               	bcf	3,5	;RP0=0, select bank0
  6596  00A4  1303               	bcf	3,6	;RP1=0, select bank0
  6597  00A5  082E               	movf	fifo_print@completar,w
  6598  00A6  1903               	btfsc	3,2
  6599  00A7  28A9               	goto	u5451
  6600  00A8  28AA               	goto	u5450
  6601  00A9                     u5451:
  6602  00A9  28B7               	goto	l7226
  6603  00AA                     u5450:
  6604  00AA                     l7222:
  6605                           
  6606                           ;fifo.c: 354:         {;fifo.c: 355:             dispLCD_dataReg(' ');
  6607  00AA  3020               	movlw	32
  6608  00AB  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
  6609  00B0                     l7224:
  6610                           
  6611                           ;fifo.c: 356:             ++i;
  6612  00B0  3001               	movlw	1
  6613  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  6614  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  6615  00B3  00A9               	movwf	??_fifo_print
  6616  00B4  0829               	movf	??_fifo_print,w
  6617  00B5  07B0               	addwf	fifo_print@i,f
  6618                           
  6619                           ;fifo.c: 357:         }
  6620  00B6  2A7D               	goto	l7338
  6621  00B7                     l7226:
  6622                           
  6623                           ;fifo.c: 359:         {;fifo.c: 360:             comando = fila[indPrint++];
  6624  00B7  082F               	movf	fifo_print@indPrint,w
  6625  00B8  3E52               	addlw	(low (_fila| 0))& (0+255)
  6626  00B9  0084               	movwf	4
  6627  00BA  1383               	bcf	3,7	;select IRP bank0
  6628  00BB  0800               	movf	0,w
  6629  00BC  00A9               	movwf	??_fifo_print
  6630  00BD  0829               	movf	??_fifo_print,w
  6631  00BE  00B2               	movwf	fifo_print@comando
  6632  00BF                     l7228:
  6633  00BF  3001               	movlw	1
  6634  00C0  00A9               	movwf	??_fifo_print
  6635  00C1  0829               	movf	??_fifo_print,w
  6636  00C2  07AF               	addwf	fifo_print@indPrint,f
  6637  00C3                     l7230:
  6638                           
  6639                           ;fifo.c: 362:             if( comando == 0 )
  6640  00C3  0832               	movf	fifo_print@comando,w
  6641  00C4  1D03               	btfss	3,2
  6642  00C5  28C7               	goto	u5461
  6643  00C6  28C8               	goto	u5460
  6644  00C7                     u5461:
  6645  00C7  28CB               	goto	l7234
  6646  00C8                     u5460:
  6647  00C8                     l7232:
  6648                           
  6649                           ;fifo.c: 363:                 completar = 1;
  6650  00C8  01AE               	clrf	fifo_print@completar
  6651  00C9  0AAE               	incf	fifo_print@completar,f
  6652  00CA  2A7D               	goto	l7338
  6653  00CB                     l7234:
  6654  00CB  3065               	movlw	101
  6655  00CC  0232               	subwf	fifo_print@comando,w
  6656  00CD  1803               	skipnc
  6657  00CE  28D0               	goto	u5471
  6658  00CF  28D1               	goto	u5470
  6659  00D0                     u5471:
  6660  00D0  295E               	goto	l7264
  6661  00D1                     u5470:
  6662  00D1                     l7236:
  6663                           
  6664                           ;fifo.c: 365:             {;fifo.c: 366:                 atraso = comando;
  6665  00D1  0832               	movf	fifo_print@comando,w
  6666  00D2  00A9               	movwf	??_fifo_print
  6667  00D3  0829               	movf	??_fifo_print,w
  6668  00D4  00B1               	movwf	fifo_print@atraso
  6669                           
  6670                           ;fifo.c: 367:                 if( atraso >= 100 )
  6671  00D5  3064               	movlw	100
  6672  00D6  0231               	subwf	fifo_print@atraso,w
  6673  00D7  1C03               	skipc
  6674  00D8  28DA               	goto	u5481
  6675  00D9  28DB               	goto	u5480
  6676  00DA                     u5481:
  6677  00DA  290F               	goto	l7250
  6678  00DB                     u5480:
  6679  00DB                     l7238:
  6680                           
  6681                           ;fifo.c: 368:                 {;fifo.c: 369:                     dispLCD_dataReg('1');
  6682  00DB  3031               	movlw	49
  6683  00DC  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
  6684  00E1                     l7240:
  6685                           
  6686                           ;fifo.c: 370:                     ++i;
  6687  00E1  3001               	movlw	1
  6688  00E2  1283               	bcf	3,5	;RP0=0, select bank0
  6689  00E3  1303               	bcf	3,6	;RP1=0, select bank0
  6690  00E4  00A9               	movwf	??_fifo_print
  6691  00E5  0829               	movf	??_fifo_print,w
  6692  00E6  07B0               	addwf	fifo_print@i,f
  6693  00E7                     l7242:
  6694                           
  6695                           ;fifo.c: 371:                     atraso %= 100;
  6696  00E7  3064               	movlw	100
  6697  00E8  00A0               	movwf	___awmod@divisor
  6698  00E9  3000               	movlw	0
  6699  00EA  00A1               	movwf	___awmod@divisor+1
  6700  00EB  0831               	movf	fifo_print@atraso,w
  6701  00EC  00A9               	movwf	??_fifo_print
  6702  00ED  01AA               	clrf	??_fifo_print+1
  6703  00EE  0829               	movf	??_fifo_print,w
  6704  00EF  00A2               	movwf	___awmod@dividend
  6705  00F0  082A               	movf	??_fifo_print+1,w
  6706  00F1  00A3               	movwf	___awmod@dividend+1
  6707  00F2  160A  118A  252A  120A  118A  	fcall	___awmod
  6708  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  6709  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  6710  00F9  0820               	movf	?___awmod,w
  6711  00FA  00AB               	movwf	??_fifo_print+2
  6712  00FB  082B               	movf	??_fifo_print+2,w
  6713  00FC  00B1               	movwf	fifo_print@atraso
  6714  00FD                     l7244:
  6715                           
  6716                           ;fifo.c: 372:                     if(atraso < 10)
  6717  00FD  300A               	movlw	10
  6718  00FE  0231               	subwf	fifo_print@atraso,w
  6719  00FF  1803               	skipnc
  6720  0100  2902               	goto	u5491
  6721  0101  2903               	goto	u5490
  6722  0102                     u5491:
  6723  0102  290F               	goto	l7250
  6724  0103                     u5490:
  6725  0103                     l7246:
  6726                           
  6727                           ;fifo.c: 373:                     {;fifo.c: 374:                         dispLCD_dataReg
      +                          ('0');
  6728  0103  3030               	movlw	48
  6729  0104  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
  6730  0109                     l7248:
  6731                           
  6732                           ;fifo.c: 375:                         ++i;
  6733  0109  3001               	movlw	1
  6734  010A  1283               	bcf	3,5	;RP0=0, select bank0
  6735  010B  1303               	bcf	3,6	;RP1=0, select bank0
  6736  010C  00A9               	movwf	??_fifo_print
  6737  010D  0829               	movf	??_fifo_print,w
  6738  010E  07B0               	addwf	fifo_print@i,f
  6739  010F                     l7250:
  6740                           
  6741                           ;fifo.c: 378:                 if( atraso >= 10 )
  6742  010F  300A               	movlw	10
  6743  0110  0231               	subwf	fifo_print@atraso,w
  6744  0111  1C03               	skipc
  6745  0112  2914               	goto	u5501
  6746  0113  2915               	goto	u5500
  6747  0114                     u5501:
  6748  0114  294A               	goto	l7258
  6749  0115                     u5500:
  6750  0115                     l7252:
  6751                           
  6752                           ;fifo.c: 379:                 {;fifo.c: 380:                     dispLCD_dataReg(atraso/
      +                          10 + '0');
  6753  0115  300A               	movlw	10
  6754  0116  00A0               	movwf	___awdiv@divisor
  6755  0117  3000               	movlw	0
  6756  0118  00A1               	movwf	___awdiv@divisor+1
  6757  0119  0831               	movf	fifo_print@atraso,w
  6758  011A  00A9               	movwf	??_fifo_print
  6759  011B  01AA               	clrf	??_fifo_print+1
  6760  011C  0829               	movf	??_fifo_print,w
  6761  011D  00A2               	movwf	___awdiv@dividend
  6762  011E  082A               	movf	??_fifo_print+1,w
  6763  011F  00A3               	movwf	___awdiv@dividend+1
  6764  0120  160A  118A  25ED  120A  118A  	fcall	___awdiv
  6765  0125  1283               	bcf	3,5	;RP0=0, select bank0
  6766  0126  1303               	bcf	3,6	;RP1=0, select bank0
  6767  0127  0820               	movf	?___awdiv,w
  6768  0128  3E30               	addlw	48
  6769  0129  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
  6770  012E                     l7254:
  6771                           
  6772                           ;fifo.c: 381:                     ++i;
  6773  012E  3001               	movlw	1
  6774  012F  1283               	bcf	3,5	;RP0=0, select bank0
  6775  0130  1303               	bcf	3,6	;RP1=0, select bank0
  6776  0131  00A9               	movwf	??_fifo_print
  6777  0132  0829               	movf	??_fifo_print,w
  6778  0133  07B0               	addwf	fifo_print@i,f
  6779  0134                     l7256:
  6780                           
  6781                           ;fifo.c: 382:                     atraso %= 10;
  6782  0134  300A               	movlw	10
  6783  0135  00A0               	movwf	___awmod@divisor
  6784  0136  3000               	movlw	0
  6785  0137  00A1               	movwf	___awmod@divisor+1
  6786  0138  0831               	movf	fifo_print@atraso,w
  6787  0139  00A9               	movwf	??_fifo_print
  6788  013A  01AA               	clrf	??_fifo_print+1
  6789  013B  0829               	movf	??_fifo_print,w
  6790  013C  00A2               	movwf	___awmod@dividend
  6791  013D  082A               	movf	??_fifo_print+1,w
  6792  013E  00A3               	movwf	___awmod@dividend+1
  6793  013F  160A  118A  252A  120A  118A  	fcall	___awmod
  6794  0144  1283               	bcf	3,5	;RP0=0, select bank0
  6795  0145  1303               	bcf	3,6	;RP1=0, select bank0
  6796  0146  0820               	movf	?___awmod,w
  6797  0147  00AB               	movwf	??_fifo_print+2
  6798  0148  082B               	movf	??_fifo_print+2,w
  6799  0149  00B1               	movwf	fifo_print@atraso
  6800  014A                     l7258:
  6801                           
  6802                           ;fifo.c: 385:                 dispLCD_dataReg(atraso + '0');
  6803  014A  0831               	movf	fifo_print@atraso,w
  6804  014B  3E30               	addlw	48
  6805  014C  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
  6806  0151                     l7260:
  6807                           
  6808                           ;fifo.c: 386:                 ++i;
  6809  0151  3001               	movlw	1
  6810  0152  1283               	bcf	3,5	;RP0=0, select bank0
  6811  0153  1303               	bcf	3,6	;RP1=0, select bank0
  6812  0154  00A9               	movwf	??_fifo_print
  6813  0155  0829               	movf	??_fifo_print,w
  6814  0156  07B0               	addwf	fifo_print@i,f
  6815                           
  6816                           ;fifo.c: 388:                 dispLCD_dataReg('%');
  6817  0157  3025               	movlw	37
  6818  0158  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
  6819  015D  28B0               	goto	l7224
  6820  015E                     l7264:
  6821  015E  3065               	movlw	101
  6822  015F  0232               	subwf	fifo_print@comando,w
  6823  0160  1C03               	skipc
  6824  0161  2963               	goto	u5511
  6825  0162  2964               	goto	u5510
  6826  0163                     u5511:
  6827  0163  29FF               	goto	l7300
  6828  0164                     u5510:
  6829  0164                     l7266:
  6830  0164  30DD               	movlw	221
  6831  0165  0232               	subwf	fifo_print@comando,w
  6832  0166  1803               	skipnc
  6833  0167  2969               	goto	u5521
  6834  0168  296A               	goto	u5520
  6835  0169                     u5521:
  6836  0169  29FF               	goto	l7300
  6837  016A                     u5520:
  6838  016A                     l7268:
  6839                           
  6840                           ;fifo.c: 393:             {;fifo.c: 394:                 decodifica(&comando);
  6841  016A  3032               	movlw	(low (fifo_print@comando| 0))& (0+255)
  6842  016B  160A  118A  2656  120A  118A  	fcall	_decodifica
  6843  0170                     l7270:
  6844                           
  6845                           ;fifo.c: 395:                 atraso = comando;
  6846  0170  1283               	bcf	3,5	;RP0=0, select bank0
  6847  0171  1303               	bcf	3,6	;RP1=0, select bank0
  6848  0172  0832               	movf	fifo_print@comando,w
  6849  0173  00A9               	movwf	??_fifo_print
  6850  0174  0829               	movf	??_fifo_print,w
  6851  0175  00B1               	movwf	fifo_print@atraso
  6852  0176                     l7272:
  6853                           
  6854                           ;fifo.c: 397:                 if( atraso >= 100 )
  6855  0176  3064               	movlw	100
  6856  0177  0231               	subwf	fifo_print@atraso,w
  6857  0178  1C03               	skipc
  6858  0179  297B               	goto	u5531
  6859  017A  297C               	goto	u5530
  6860  017B                     u5531:
  6861  017B  29B0               	goto	l7286
  6862  017C                     u5530:
  6863  017C                     l7274:
  6864                           
  6865                           ;fifo.c: 398:                 {;fifo.c: 399:                     dispLCD_dataReg('1');
  6866  017C  3031               	movlw	49
  6867  017D  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
  6868  0182                     l7276:
  6869                           
  6870                           ;fifo.c: 400:                     ++i;
  6871  0182  3001               	movlw	1
  6872  0183  1283               	bcf	3,5	;RP0=0, select bank0
  6873  0184  1303               	bcf	3,6	;RP1=0, select bank0
  6874  0185  00A9               	movwf	??_fifo_print
  6875  0186  0829               	movf	??_fifo_print,w
  6876  0187  07B0               	addwf	fifo_print@i,f
  6877  0188                     l7278:
  6878                           
  6879                           ;fifo.c: 401:                     atraso %= 100;
  6880  0188  3064               	movlw	100
  6881  0189  00A0               	movwf	___awmod@divisor
  6882  018A  3000               	movlw	0
  6883  018B  00A1               	movwf	___awmod@divisor+1
  6884  018C  0831               	movf	fifo_print@atraso,w
  6885  018D  00A9               	movwf	??_fifo_print
  6886  018E  01AA               	clrf	??_fifo_print+1
  6887  018F  0829               	movf	??_fifo_print,w
  6888  0190  00A2               	movwf	___awmod@dividend
  6889  0191  082A               	movf	??_fifo_print+1,w
  6890  0192  00A3               	movwf	___awmod@dividend+1
  6891  0193  160A  118A  252A  120A  118A  	fcall	___awmod
  6892  0198  1283               	bcf	3,5	;RP0=0, select bank0
  6893  0199  1303               	bcf	3,6	;RP1=0, select bank0
  6894  019A  0820               	movf	?___awmod,w
  6895  019B  00AB               	movwf	??_fifo_print+2
  6896  019C  082B               	movf	??_fifo_print+2,w
  6897  019D  00B1               	movwf	fifo_print@atraso
  6898  019E                     l7280:
  6899                           
  6900                           ;fifo.c: 402:                     if(atraso < 10)
  6901  019E  300A               	movlw	10
  6902  019F  0231               	subwf	fifo_print@atraso,w
  6903  01A0  1803               	skipnc
  6904  01A1  29A3               	goto	u5541
  6905  01A2  29A4               	goto	u5540
  6906  01A3                     u5541:
  6907  01A3  29B0               	goto	l7286
  6908  01A4                     u5540:
  6909  01A4                     l7282:
  6910                           
  6911                           ;fifo.c: 403:                     {;fifo.c: 404:                         dispLCD_dataReg
      +                          ('0');
  6912  01A4  3030               	movlw	48
  6913  01A5  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
  6914  01AA                     l7284:
  6915                           
  6916                           ;fifo.c: 405:                         ++i;
  6917  01AA  3001               	movlw	1
  6918  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  6919  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  6920  01AD  00A9               	movwf	??_fifo_print
  6921  01AE  0829               	movf	??_fifo_print,w
  6922  01AF  07B0               	addwf	fifo_print@i,f
  6923  01B0                     l7286:
  6924                           
  6925                           ;fifo.c: 408:                 if( atraso >= 10 )
  6926  01B0  300A               	movlw	10
  6927  01B1  0231               	subwf	fifo_print@atraso,w
  6928  01B2  1C03               	skipc
  6929  01B3  29B5               	goto	u5551
  6930  01B4  29B6               	goto	u5550
  6931  01B5                     u5551:
  6932  01B5  29EB               	goto	l7294
  6933  01B6                     u5550:
  6934  01B6                     l7288:
  6935                           
  6936                           ;fifo.c: 409:                 {;fifo.c: 410:                     dispLCD_dataReg(atraso/
      +                          10 + '0');
  6937  01B6  300A               	movlw	10
  6938  01B7  00A0               	movwf	___awdiv@divisor
  6939  01B8  3000               	movlw	0
  6940  01B9  00A1               	movwf	___awdiv@divisor+1
  6941  01BA  0831               	movf	fifo_print@atraso,w
  6942  01BB  00A9               	movwf	??_fifo_print
  6943  01BC  01AA               	clrf	??_fifo_print+1
  6944  01BD  0829               	movf	??_fifo_print,w
  6945  01BE  00A2               	movwf	___awdiv@dividend
  6946  01BF  082A               	movf	??_fifo_print+1,w
  6947  01C0  00A3               	movwf	___awdiv@dividend+1
  6948  01C1  160A  118A  25ED  120A  118A  	fcall	___awdiv
  6949  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  6950  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  6951  01C8  0820               	movf	?___awdiv,w
  6952  01C9  3E30               	addlw	48
  6953  01CA  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
  6954  01CF                     l7290:
  6955                           
  6956                           ;fifo.c: 411:                     ++i;
  6957  01CF  3001               	movlw	1
  6958  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  6959  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  6960  01D2  00A9               	movwf	??_fifo_print
  6961  01D3  0829               	movf	??_fifo_print,w
  6962  01D4  07B0               	addwf	fifo_print@i,f
  6963  01D5                     l7292:
  6964                           
  6965                           ;fifo.c: 412:                     atraso %= 10;
  6966  01D5  300A               	movlw	10
  6967  01D6  00A0               	movwf	___awmod@divisor
  6968  01D7  3000               	movlw	0
  6969  01D8  00A1               	movwf	___awmod@divisor+1
  6970  01D9  0831               	movf	fifo_print@atraso,w
  6971  01DA  00A9               	movwf	??_fifo_print
  6972  01DB  01AA               	clrf	??_fifo_print+1
  6973  01DC  0829               	movf	??_fifo_print,w
  6974  01DD  00A2               	movwf	___awmod@dividend
  6975  01DE  082A               	movf	??_fifo_print+1,w
  6976  01DF  00A3               	movwf	___awmod@dividend+1
  6977  01E0  160A  118A  252A  120A  118A  	fcall	___awmod
  6978  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  6979  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  6980  01E7  0820               	movf	?___awmod,w
  6981  01E8  00AB               	movwf	??_fifo_print+2
  6982  01E9  082B               	movf	??_fifo_print+2,w
  6983  01EA  00B1               	movwf	fifo_print@atraso
  6984  01EB                     l7294:
  6985                           
  6986                           ;fifo.c: 415:                 dispLCD_dataReg(atraso + '0');
  6987  01EB  0831               	movf	fifo_print@atraso,w
  6988  01EC  3E30               	addlw	48
  6989  01ED  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
  6990  01F2                     l7296:
  6991                           
  6992                           ;fifo.c: 416:                 ++i;
  6993  01F2  3001               	movlw	1
  6994  01F3  1283               	bcf	3,5	;RP0=0, select bank0
  6995  01F4  1303               	bcf	3,6	;RP1=0, select bank0
  6996  01F5  00A9               	movwf	??_fifo_print
  6997  01F6  0829               	movf	??_fifo_print,w
  6998  01F7  07B0               	addwf	fifo_print@i,f
  6999                           
  7000                           ;fifo.c: 418:                 dispLCD_dataReg('s');
  7001  01F8  3073               	movlw	115
  7002  01F9  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
  7003  01FE  28B0               	goto	l7224
  7004  01FF                     l7300:
  7005  01FF  30DD               	movlw	221
  7006  0200  0232               	subwf	fifo_print@comando,w
  7007  0201  1C03               	skipc
  7008  0202  2A04               	goto	u5561
  7009  0203  2A05               	goto	u5560
  7010  0204                     u5561:
  7011  0204  2A57               	goto	l7324
  7012  0205                     u5560:
  7013  0205                     l7302:
  7014  0205  30FE               	movlw	254
  7015  0206  0232               	subwf	fifo_print@comando,w
  7016  0207  1803               	skipnc
  7017  0208  2A0A               	goto	u5571
  7018  0209  2A0B               	goto	u5570
  7019  020A                     u5571:
  7020  020A  2A57               	goto	l7324
  7021  020B                     u5570:
  7022  020B                     l7304:
  7023                           
  7024                           ;fifo.c: 422:             {;fifo.c: 423:                 decodifica(&comando);
  7025  020B  3032               	movlw	(low (fifo_print@comando| 0))& (0+255)
  7026  020C  160A  118A  2656  120A  118A  	fcall	_decodifica
  7027                           
  7028                           ;fifo.c: 424:                 switch( comando )
  7029  0211  2A33               	goto	l7322
  7030  0212                     l384:	
  7031                           ;fifo.c: 429:                     case 'D':
  7032                           
  7033  0212                     l7306:
  7034                           
  7035                           ;fifo.c: 434:                                 dispLCD_dataReg( comando & ~0x20 );
  7036  0212  0832               	movf	fifo_print@comando,w
  7037  0213  39DF               	andlw	223
  7038  0214  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
  7039  0219                     l7308:
  7040                           
  7041                           ;fifo.c: 435:                                 ++i;
  7042  0219  3001               	movlw	1
  7043  021A  1283               	bcf	3,5	;RP0=0, select bank0
  7044  021B  1303               	bcf	3,6	;RP1=0, select bank0
  7045  021C  00A9               	movwf	??_fifo_print
  7046  021D  0829               	movf	??_fifo_print,w
  7047  021E  07B0               	addwf	fifo_print@i,f
  7048  021F                     l7310:
  7049                           
  7050                           ;fifo.c: 436:                                 dispLCD_dataReg( comando & 0x20 ? '-': '+'
      +                           );
  7051  021F  1AB2               	btfsc	fifo_print@comando,5
  7052  0220  2A22               	goto	u5581
  7053  0221  2A23               	goto	u5580
  7054  0222                     u5581:
  7055  0222  2A28               	goto	l7314
  7056  0223                     u5580:
  7057  0223                     l7312:
  7058  0223  302B               	movlw	43
  7059  0224  00AC               	movwf	_fifo_print$392
  7060  0225  3000               	movlw	0
  7061  0226  00AD               	movwf	_fifo_print$392+1
  7062  0227  2A2C               	goto	l7316
  7063  0228                     l7314:
  7064  0228  302D               	movlw	45
  7065  0229  00AC               	movwf	_fifo_print$392
  7066  022A  3000               	movlw	0
  7067  022B  00AD               	movwf	_fifo_print$392+1
  7068  022C                     l7316:
  7069  022C  082C               	movf	_fifo_print$392,w
  7070  022D  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
  7071  0232  28B0               	goto	l7224
  7072  0233                     l7322:
  7073  0233  1283               	bcf	3,5	;RP0=0, select bank0
  7074  0234  1303               	bcf	3,6	;RP1=0, select bank0
  7075  0235  0832               	movf	fifo_print@comando,w
  7076  0236  00A9               	movwf	??_fifo_print
  7077  0237  01AA               	clrf	??_fifo_print+1
  7078                           
  7079                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7080                           ; Switch size 1, requested type "simple"
  7081                           ; Number of cases is 1, Range of values is 0 to 0
  7082                           ; switch strategies available:
  7083                           ; Name         Instructions Cycles
  7084                           ; simple_byte            4     3 (average)
  7085                           ; direct_byte           11     8 (fixed)
  7086                           ; jumptable            260     6 (fixed)
  7087                           ;	Chosen strategy is simple_byte
  7088  0238  082A               	movf	??_fifo_print+1,w
  7089  0239  3A00               	xorlw	0	; case 0
  7090  023A  1903               	skipnz
  7091  023B  2A3D               	goto	l8704
  7092  023C  2A7D               	goto	l373
  7093  023D                     l8704:
  7094                           
  7095                           ; Switch size 1, requested type "simple"
  7096                           ; Number of cases is 8, Range of values is 65 to 100
  7097                           ; switch strategies available:
  7098                           ; Name         Instructions Cycles
  7099                           ; simple_byte           25    13 (average)
  7100                           ; direct_byte          119    11 (fixed)
  7101                           ; jumptable            263     9 (fixed)
  7102                           ;	Chosen strategy is simple_byte
  7103  023D  0829               	movf	??_fifo_print,w
  7104  023E  3A41               	xorlw	65	; case 65
  7105  023F  1903               	skipnz
  7106  0240  2A12               	goto	l384
  7107  0241  3A03               	xorlw	3	; case 66
  7108  0242  1903               	skipnz
  7109  0243  2A12               	goto	l7306
  7110  0244  3A01               	xorlw	1	; case 67
  7111  0245  1903               	skipnz
  7112  0246  2A12               	goto	l7306
  7113  0247  3A07               	xorlw	7	; case 68
  7114  0248  1903               	skipnz
  7115  0249  2A12               	goto	l7306
  7116  024A  3A25               	xorlw	37	; case 97
  7117  024B  1903               	skipnz
  7118  024C  2A12               	goto	l7306
  7119  024D  3A03               	xorlw	3	; case 98
  7120  024E  1903               	skipnz
  7121  024F  2A12               	goto	l7306
  7122  0250  3A01               	xorlw	1	; case 99
  7123  0251  1903               	skipnz
  7124  0252  2A12               	goto	l7306
  7125  0253  3A07               	xorlw	7	; case 100
  7126  0254  1903               	skipnz
  7127  0255  2A12               	goto	l7306
  7128  0256  2A7D               	goto	l373
  7129  0257                     l7324:
  7130                           
  7131                           ;fifo.c: 442:             {;fifo.c: 443:                 if(comando == 0xFE)
  7132  0257  30FE               	movlw	254
  7133  0258  0632               	xorwf	fifo_print@comando,w
  7134  0259  1D03               	btfss	3,2
  7135  025A  2A5C               	goto	u5591
  7136  025B  2A5D               	goto	u5590
  7137  025C                     u5591:
  7138  025C  2A7D               	goto	l373
  7139  025D                     u5590:
  7140  025D                     l7326:
  7141                           
  7142                           ;fifo.c: 444:                 {;fifo.c: 445:                     decodifica(&comando);
  7143  025D  3032               	movlw	(low (fifo_print@comando| 0))& (0+255)
  7144  025E  160A  118A  2656  120A  118A  	fcall	_decodifica
  7145  0263                     l7328:
  7146                           
  7147                           ;fifo.c: 446:                     atraso = comando;
  7148  0263  1283               	bcf	3,5	;RP0=0, select bank0
  7149  0264  1303               	bcf	3,6	;RP1=0, select bank0
  7150  0265  0832               	movf	fifo_print@comando,w
  7151  0266  00A9               	movwf	??_fifo_print
  7152  0267  0829               	movf	??_fifo_print,w
  7153  0268  00B1               	movwf	fifo_print@atraso
  7154  0269                     l7330:
  7155                           
  7156                           ;fifo.c: 448:                     dispLCD_dataReg(atraso + '0');
  7157  0269  0831               	movf	fifo_print@atraso,w
  7158  026A  3E30               	addlw	48
  7159  026B  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
  7160  0270                     l7332:
  7161                           
  7162                           ;fifo.c: 449:                     ++i;
  7163  0270  3001               	movlw	1
  7164  0271  1283               	bcf	3,5	;RP0=0, select bank0
  7165  0272  1303               	bcf	3,6	;RP1=0, select bank0
  7166  0273  00A9               	movwf	??_fifo_print
  7167  0274  0829               	movf	??_fifo_print,w
  7168  0275  07B0               	addwf	fifo_print@i,f
  7169  0276                     l7334:
  7170                           
  7171                           ;fifo.c: 451:                     dispLCD_dataReg('%');
  7172  0276  3025               	movlw	37
  7173  0277  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
  7174  027C  28B0               	goto	l7224
  7175  027D                     l373:
  7176  027D                     l7338:
  7177                           
  7178                           ;fifo.c: 456:     }
  7179  027D  3015               	movlw	21
  7180  027E  0230               	subwf	fifo_print@i,w
  7181  027F  1C03               	skipc
  7182  0280  2A82               	goto	u5601
  7183  0281  2A83               	goto	u5600
  7184  0282                     u5601:
  7185  0282  28A3               	goto	l7220
  7186  0283                     u5600:
  7187  0283                     l397:
  7188  0283  0008               	return
  7189  0284                     __end_of_fifo_print:
  7190                           
  7191                           	psect	text28
  7192  152A                     __ptext28:	
  7193 ;; *************** function ___awmod *****************
  7194 ;; Defined at:
  7195 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awmod.c"
  7196 ;; Parameters:    Size  Location     Type
  7197 ;;  divisor         2    0[BANK0 ] int 
  7198 ;;  dividend        2    2[BANK0 ] int 
  7199 ;; Auto vars:     Size  Location     Type
  7200 ;;  sign            1    6[BANK0 ] unsigned char 
  7201 ;;  counter         1    5[BANK0 ] unsigned char 
  7202 ;; Return value:  Size  Location     Type
  7203 ;;                  2    0[BANK0 ] int 
  7204 ;; Registers used:
  7205 ;;		wreg, status,2, status,0
  7206 ;; Tracked objects:
  7207 ;;		On entry : 0/0
  7208 ;;		On exit  : 0/0
  7209 ;;		Unchanged: 0/0
  7210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7211 ;;      Params:         0       4       0       0       0
  7212 ;;      Locals:         0       2       0       0       0
  7213 ;;      Temps:          0       1       0       0       0
  7214 ;;      Totals:         0       7       0       0       0
  7215 ;;Total ram usage:        7 bytes
  7216 ;; Hardware stack levels used:    1
  7217 ;; Hardware stack levels required when called:    2
  7218 ;; This function calls:
  7219 ;;		Nothing
  7220 ;; This function is called by:
  7221 ;;		_dispLCD_num
  7222 ;;		_fifo_print
  7223 ;;		_main
  7224 ;; This function uses a non-reentrant model
  7225 ;;
  7226                           
  7227                           
  7228                           ;psect for function ___awmod
  7229  152A                     ___awmod:
  7230  152A                     l6636:	
  7231                           ;incstack = 0
  7232                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7233                           
  7234  152A  1283               	bcf	3,5	;RP0=0, select bank0
  7235  152B  1303               	bcf	3,6	;RP1=0, select bank0
  7236  152C  01A6               	clrf	___awmod@sign
  7237  152D                     l6638:
  7238  152D  1FA3               	btfss	___awmod@dividend+1,7
  7239  152E  2D30               	goto	u4681
  7240  152F  2D31               	goto	u4680
  7241  1530                     u4681:
  7242  1530  2D38               	goto	l6644
  7243  1531                     u4680:
  7244  1531                     l6640:
  7245  1531  09A2               	comf	___awmod@dividend,f
  7246  1532  09A3               	comf	___awmod@dividend+1,f
  7247  1533  0AA2               	incf	___awmod@dividend,f
  7248  1534  1903               	skipnz
  7249  1535  0AA3               	incf	___awmod@dividend+1,f
  7250  1536                     l6642:
  7251  1536  01A6               	clrf	___awmod@sign
  7252  1537  0AA6               	incf	___awmod@sign,f
  7253  1538                     l6644:
  7254  1538  1FA1               	btfss	___awmod@divisor+1,7
  7255  1539  2D3B               	goto	u4691
  7256  153A  2D3C               	goto	u4690
  7257  153B                     u4691:
  7258  153B  2D41               	goto	l6648
  7259  153C                     u4690:
  7260  153C                     l6646:
  7261  153C  09A0               	comf	___awmod@divisor,f
  7262  153D  09A1               	comf	___awmod@divisor+1,f
  7263  153E  0AA0               	incf	___awmod@divisor,f
  7264  153F  1903               	skipnz
  7265  1540  0AA1               	incf	___awmod@divisor+1,f
  7266  1541                     l6648:
  7267  1541  0820               	movf	___awmod@divisor,w
  7268  1542  0421               	iorwf	___awmod@divisor+1,w
  7269  1543  1903               	btfsc	3,2
  7270  1544  2D46               	goto	u4701
  7271  1545  2D47               	goto	u4700
  7272  1546                     u4701:
  7273  1546  2D76               	goto	l6666
  7274  1547                     u4700:
  7275  1547                     l6650:
  7276  1547  01A5               	clrf	___awmod@counter
  7277  1548  0AA5               	incf	___awmod@counter,f
  7278  1549  2D55               	goto	l6656
  7279  154A                     l6652:
  7280  154A  3001               	movlw	1
  7281  154B                     u4715:
  7282  154B  1003               	clrc
  7283  154C  0DA0               	rlf	___awmod@divisor,f
  7284  154D  0DA1               	rlf	___awmod@divisor+1,f
  7285  154E  3EFF               	addlw	-1
  7286  154F  1D03               	skipz
  7287  1550  2D4B               	goto	u4715
  7288  1551                     l6654:
  7289  1551  3001               	movlw	1
  7290  1552  00A4               	movwf	??___awmod
  7291  1553  0824               	movf	??___awmod,w
  7292  1554  07A5               	addwf	___awmod@counter,f
  7293  1555                     l6656:
  7294  1555  1FA1               	btfss	___awmod@divisor+1,7
  7295  1556  2D58               	goto	u4721
  7296  1557  2D59               	goto	u4720
  7297  1558                     u4721:
  7298  1558  2D4A               	goto	l6652
  7299  1559                     u4720:
  7300  1559                     l6658:
  7301  1559  0821               	movf	___awmod@divisor+1,w
  7302  155A  0223               	subwf	___awmod@dividend+1,w
  7303  155B  1D03               	skipz
  7304  155C  2D5F               	goto	u4735
  7305  155D  0820               	movf	___awmod@divisor,w
  7306  155E  0222               	subwf	___awmod@dividend,w
  7307  155F                     u4735:
  7308  155F  1C03               	skipc
  7309  1560  2D62               	goto	u4731
  7310  1561  2D63               	goto	u4730
  7311  1562                     u4731:
  7312  1562  2D69               	goto	l6662
  7313  1563                     u4730:
  7314  1563                     l6660:
  7315  1563  0820               	movf	___awmod@divisor,w
  7316  1564  02A2               	subwf	___awmod@dividend,f
  7317  1565  0821               	movf	___awmod@divisor+1,w
  7318  1566  1C03               	skipc
  7319  1567  03A3               	decf	___awmod@dividend+1,f
  7320  1568  02A3               	subwf	___awmod@dividend+1,f
  7321  1569                     l6662:
  7322  1569  3001               	movlw	1
  7323  156A                     u4745:
  7324  156A  1003               	clrc
  7325  156B  0CA1               	rrf	___awmod@divisor+1,f
  7326  156C  0CA0               	rrf	___awmod@divisor,f
  7327  156D  3EFF               	addlw	-1
  7328  156E  1D03               	skipz
  7329  156F  2D6A               	goto	u4745
  7330  1570                     l6664:
  7331  1570  3001               	movlw	1
  7332  1571  02A5               	subwf	___awmod@counter,f
  7333  1572  1D03               	btfss	3,2
  7334  1573  2D75               	goto	u4751
  7335  1574  2D76               	goto	u4750
  7336  1575                     u4751:
  7337  1575  2D59               	goto	l6658
  7338  1576                     u4750:
  7339  1576                     l6666:
  7340  1576  0826               	movf	___awmod@sign,w
  7341  1577  1903               	btfsc	3,2
  7342  1578  2D7A               	goto	u4761
  7343  1579  2D7B               	goto	u4760
  7344  157A                     u4761:
  7345  157A  2D80               	goto	l6670
  7346  157B                     u4760:
  7347  157B                     l6668:
  7348  157B  09A2               	comf	___awmod@dividend,f
  7349  157C  09A3               	comf	___awmod@dividend+1,f
  7350  157D  0AA2               	incf	___awmod@dividend,f
  7351  157E  1903               	skipnz
  7352  157F  0AA3               	incf	___awmod@dividend+1,f
  7353  1580                     l6670:
  7354  1580  0823               	movf	___awmod@dividend+1,w
  7355  1581  00A1               	movwf	?___awmod+1
  7356  1582  0822               	movf	___awmod@dividend,w
  7357  1583  00A0               	movwf	?___awmod
  7358  1584                     l1350:
  7359  1584  0008               	return
  7360  1585                     __end_of___awmod:
  7361                           
  7362                           	psect	text29
  7363  1C9F                     __ptext29:	
  7364 ;; *************** function _fifo_indicePrint_inc *****************
  7365 ;; Defined at:
  7366 ;;		line 322 in file "fifo.c"
  7367 ;; Parameters:    Size  Location     Type
  7368 ;;		None
  7369 ;; Auto vars:     Size  Location     Type
  7370 ;;		None
  7371 ;; Return value:  Size  Location     Type
  7372 ;;                  1    wreg      void 
  7373 ;; Registers used:
  7374 ;;		wreg, status,2, status,0
  7375 ;; Tracked objects:
  7376 ;;		On entry : 0/0
  7377 ;;		On exit  : 0/0
  7378 ;;		Unchanged: 0/0
  7379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7380 ;;      Params:         0       0       0       0       0
  7381 ;;      Locals:         0       0       0       0       0
  7382 ;;      Temps:          0       2       0       0       0
  7383 ;;      Totals:         0       2       0       0       0
  7384 ;;Total ram usage:        2 bytes
  7385 ;; Hardware stack levels used:    1
  7386 ;; Hardware stack levels required when called:    2
  7387 ;; This function calls:
  7388 ;;		Nothing
  7389 ;; This function is called by:
  7390 ;;		_main
  7391 ;; This function uses a non-reentrant model
  7392 ;;
  7393                           
  7394                           
  7395                           ;psect for function _fifo_indicePrint_inc
  7396  1C9F                     _fifo_indicePrint_inc:
  7397  1C9F                     l7200:	
  7398                           ;incstack = 0
  7399                           ; Regs used in _fifo_indicePrint_inc: [wreg+status,2+status,0]
  7400                           
  7401                           
  7402                           ;fifo.c: 324:     if( ind_print < 18 -1 )
  7403  1C9F  3011               	movlw	17
  7404  1CA0  1283               	bcf	3,5	;RP0=0, select bank0
  7405  1CA1  1303               	bcf	3,6	;RP1=0, select bank0
  7406  1CA2  026C               	subwf	_ind_print,w
  7407  1CA3  1803               	skipnc
  7408  1CA4  2CA6               	goto	u5421
  7409  1CA5  2CA7               	goto	u5420
  7410  1CA6                     u5421:
  7411  1CA6  2CC8               	goto	l7208
  7412  1CA7                     u5420:
  7413  1CA7                     l7202:
  7414                           
  7415                           ;fifo.c: 325:     {;fifo.c: 326:         if( ind_print < ind_fila-1 )
  7416  1CA7  086D               	movf	_ind_fila,w
  7417  1CA8  3EFF               	addlw	255
  7418  1CA9  00A0               	movwf	??_fifo_indicePrint_inc
  7419  1CAA  30FF               	movlw	255
  7420  1CAB  1803               	skipnc
  7421  1CAC  3000               	movlw	0
  7422  1CAD  00A1               	movwf	??_fifo_indicePrint_inc+1
  7423  1CAE  0821               	movf	??_fifo_indicePrint_inc+1,w
  7424  1CAF  3A80               	xorlw	128
  7425  1CB0  3C80               	sublw	128
  7426  1CB1  1D03               	skipz
  7427  1CB2  2CB5               	goto	u5435
  7428  1CB3  0820               	movf	??_fifo_indicePrint_inc,w
  7429  1CB4  026C               	subwf	_ind_print,w
  7430  1CB5                     u5435:
  7431  1CB5  1803               	skipnc
  7432  1CB6  2CB8               	goto	u5431
  7433  1CB7  2CB9               	goto	u5430
  7434  1CB8                     u5431:
  7435  1CB8  2CC0               	goto	l7206
  7436  1CB9                     u5430:
  7437  1CB9                     l7204:
  7438                           
  7439                           ;fifo.c: 327:             ind_print++;
  7440  1CB9  3001               	movlw	1
  7441  1CBA  1283               	bcf	3,5	;RP0=0, select bank0
  7442  1CBB  1303               	bcf	3,6	;RP1=0, select bank0
  7443  1CBC  00A0               	movwf	??_fifo_indicePrint_inc
  7444  1CBD  0820               	movf	??_fifo_indicePrint_inc,w
  7445  1CBE  07EC               	addwf	_ind_print,f
  7446  1CBF  2CCC               	goto	l357
  7447  1CC0                     l7206:
  7448                           
  7449                           ;fifo.c: 329:             ind_print = ind_fila-1;
  7450  1CC0  1283               	bcf	3,5	;RP0=0, select bank0
  7451  1CC1  1303               	bcf	3,6	;RP1=0, select bank0
  7452  1CC2  086D               	movf	_ind_fila,w
  7453  1CC3  3EFF               	addlw	255
  7454  1CC4  00A0               	movwf	??_fifo_indicePrint_inc
  7455  1CC5  0820               	movf	??_fifo_indicePrint_inc,w
  7456  1CC6  00EC               	movwf	_ind_print
  7457  1CC7  2CCC               	goto	l357
  7458  1CC8                     l7208:
  7459                           
  7460                           ;fifo.c: 332:         ind_print = 18 -1;
  7461  1CC8  3011               	movlw	17
  7462  1CC9  00A0               	movwf	??_fifo_indicePrint_inc
  7463  1CCA  0820               	movf	??_fifo_indicePrint_inc,w
  7464  1CCB  00EC               	movwf	_ind_print
  7465  1CCC                     l357:
  7466  1CCC  0008               	return
  7467  1CCD                     __end_of_fifo_indicePrint_inc:
  7468                           
  7469                           	psect	text30
  7470  1A3B                     __ptext30:	
  7471 ;; *************** function _fifo_indicePrint_dec *****************
  7472 ;; Defined at:
  7473 ;;		line 334 in file "fifo.c"
  7474 ;; Parameters:    Size  Location     Type
  7475 ;;		None
  7476 ;; Auto vars:     Size  Location     Type
  7477 ;;		None
  7478 ;; Return value:  Size  Location     Type
  7479 ;;                  1    wreg      void 
  7480 ;; Registers used:
  7481 ;;		wreg, status,2, status,0
  7482 ;; Tracked objects:
  7483 ;;		On entry : 0/0
  7484 ;;		On exit  : 0/0
  7485 ;;		Unchanged: 0/0
  7486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7487 ;;      Params:         0       0       0       0       0
  7488 ;;      Locals:         0       0       0       0       0
  7489 ;;      Temps:          0       0       0       0       0
  7490 ;;      Totals:         0       0       0       0       0
  7491 ;;Total ram usage:        0 bytes
  7492 ;; Hardware stack levels used:    1
  7493 ;; Hardware stack levels required when called:    2
  7494 ;; This function calls:
  7495 ;;		Nothing
  7496 ;; This function is called by:
  7497 ;;		_main
  7498 ;; This function uses a non-reentrant model
  7499 ;;
  7500                           
  7501                           
  7502                           ;psect for function _fifo_indicePrint_dec
  7503  1A3B                     _fifo_indicePrint_dec:
  7504  1A3B                     l7210:	
  7505                           ;incstack = 0
  7506                           ; Regs used in _fifo_indicePrint_dec: [wreg+status,2+status,0]
  7507                           
  7508                           
  7509                           ;fifo.c: 336:     if( ind_print > 2 )
  7510  1A3B  3003               	movlw	3
  7511  1A3C  1283               	bcf	3,5	;RP0=0, select bank0
  7512  1A3D  1303               	bcf	3,6	;RP1=0, select bank0
  7513  1A3E  026C               	subwf	_ind_print,w
  7514  1A3F  1C03               	skipc
  7515  1A40  2A42               	goto	u5441
  7516  1A41  2A43               	goto	u5440
  7517  1A42                     u5441:
  7518  1A42  2A45               	goto	l361
  7519  1A43                     u5440:
  7520  1A43                     l7212:
  7521                           
  7522                           ;fifo.c: 337:         ind_print--;
  7523  1A43  3001               	movlw	1
  7524  1A44  02EC               	subwf	_ind_print,f
  7525  1A45                     l361:
  7526  1A45  0008               	return
  7527  1A46                     __end_of_fifo_indicePrint_dec:
  7528                           
  7529                           	psect	text31
  7530  07FC                     __ptext31:	
  7531 ;; *************** function _fifo_indice *****************
  7532 ;; Defined at:
  7533 ;;		line 307 in file "fifo.c"
  7534 ;; Parameters:    Size  Location     Type
  7535 ;;		None
  7536 ;; Auto vars:     Size  Location     Type
  7537 ;;		None
  7538 ;; Return value:  Size  Location     Type
  7539 ;;                  1    wreg      unsigned char 
  7540 ;; Registers used:
  7541 ;;		wreg
  7542 ;; Tracked objects:
  7543 ;;		On entry : 0/0
  7544 ;;		On exit  : 0/0
  7545 ;;		Unchanged: 0/0
  7546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7547 ;;      Params:         0       0       0       0       0
  7548 ;;      Locals:         0       0       0       0       0
  7549 ;;      Temps:          0       0       0       0       0
  7550 ;;      Totals:         0       0       0       0       0
  7551 ;;Total ram usage:        0 bytes
  7552 ;; Hardware stack levels used:    1
  7553 ;; Hardware stack levels required when called:    2
  7554 ;; This function calls:
  7555 ;;		Nothing
  7556 ;; This function is called by:
  7557 ;;		_main
  7558 ;; This function uses a non-reentrant model
  7559 ;;
  7560                           
  7561                           
  7562                           ;psect for function _fifo_indice
  7563  07FC                     _fifo_indice:
  7564  07FC                     l7188:	
  7565                           ;incstack = 0
  7566                           ; Regs used in _fifo_indice: [wreg]
  7567                           
  7568                           
  7569                           ;fifo.c: 309:     return ( ind_fila );
  7570  07FC  1283               	bcf	3,5	;RP0=0, select bank0
  7571  07FD  1303               	bcf	3,6	;RP1=0, select bank0
  7572  07FE  086D               	movf	_ind_fila,w
  7573  07FF                     l344:
  7574  07FF  0008               	return
  7575  0800                     __end_of_fifo_indice:
  7576                           
  7577                           	psect	text32
  7578  1A30                     __ptext32:	
  7579 ;; *************** function _fifo_disponivel *****************
  7580 ;; Defined at:
  7581 ;;		line 312 in file "fifo.c"
  7582 ;; Parameters:    Size  Location     Type
  7583 ;;		None
  7584 ;; Auto vars:     Size  Location     Type
  7585 ;;		None
  7586 ;; Return value:  Size  Location     Type
  7587 ;;                  1    wreg      unsigned char 
  7588 ;; Registers used:
  7589 ;;		wreg
  7590 ;; Tracked objects:
  7591 ;;		On entry : 0/0
  7592 ;;		On exit  : 0/0
  7593 ;;		Unchanged: 0/0
  7594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7595 ;;      Params:         0       0       0       0       0
  7596 ;;      Locals:         0       0       0       0       0
  7597 ;;      Temps:          0       0       0       0       0
  7598 ;;      Totals:         0       0       0       0       0
  7599 ;;Total ram usage:        0 bytes
  7600 ;; Hardware stack levels used:    1
  7601 ;; Hardware stack levels required when called:    2
  7602 ;; This function calls:
  7603 ;;		Nothing
  7604 ;; This function is called by:
  7605 ;;		_main
  7606 ;; This function uses a non-reentrant model
  7607 ;;
  7608                           
  7609                           
  7610                           ;psect for function _fifo_disponivel
  7611  1A30                     _fifo_disponivel:
  7612  1A30                     l7192:	
  7613                           ;incstack = 0
  7614                           ; Regs used in _fifo_disponivel: [wreg]
  7615                           
  7616                           
  7617                           ;fifo.c: 314:     return( ind_fila < 18 );
  7618  1A30  3012               	movlw	18
  7619  1A31  1283               	bcf	3,5	;RP0=0, select bank0
  7620  1A32  1303               	bcf	3,6	;RP1=0, select bank0
  7621  1A33  026D               	subwf	_ind_fila,w
  7622  1A34  1C03               	skipc
  7623  1A35  2A37               	goto	u5401
  7624  1A36  2A39               	goto	u5400
  7625  1A37                     u5401:
  7626  1A37  3001               	movlw	1
  7627  1A38  2A3A               	goto	u5410
  7628  1A39                     u5400:
  7629  1A39  3000               	movlw	0
  7630  1A3A                     u5410:
  7631  1A3A                     l347:
  7632  1A3A  0008               	return
  7633  1A3B                     __end_of_fifo_disponivel:
  7634                           
  7635                           	psect	text33
  7636  13DC                     __ptext33:	
  7637 ;; *************** function _fifo_delete *****************
  7638 ;; Defined at:
  7639 ;;		line 183 in file "fifo.c"
  7640 ;; Parameters:    Size  Location     Type
  7641 ;;		None
  7642 ;; Auto vars:     Size  Location     Type
  7643 ;;		None
  7644 ;; Return value:  Size  Location     Type
  7645 ;;                  1    wreg      void 
  7646 ;; Registers used:
  7647 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7648 ;; Tracked objects:
  7649 ;;		On entry : 0/0
  7650 ;;		On exit  : 0/0
  7651 ;;		Unchanged: 0/0
  7652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7653 ;;      Params:         0       0       0       0       0
  7654 ;;      Locals:         0       0       0       0       0
  7655 ;;      Temps:          0       2       0       0       0
  7656 ;;      Totals:         0       2       0       0       0
  7657 ;;Total ram usage:        2 bytes
  7658 ;; Hardware stack levels used:    1
  7659 ;; Hardware stack levels required when called:    5
  7660 ;; This function calls:
  7661 ;;		_alt_atuador
  7662 ;;		_codifica
  7663 ;;		_decodifica
  7664 ;;		_fifo_alinharPrint
  7665 ;; This function is called by:
  7666 ;;		_main
  7667 ;; This function uses a non-reentrant model
  7668 ;;
  7669                           
  7670                           
  7671                           ;psect for function _fifo_delete
  7672  13DC                     _fifo_delete:
  7673  13DC                     l7130:	
  7674                           ;incstack = 0
  7675                           ; Regs used in _fifo_delete: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7676                           
  7677                           
  7678                           ;fifo.c: 185:     if(ind_fila)
  7679  13DC  1283               	bcf	3,5	;RP0=0, select bank0
  7680  13DD  1303               	bcf	3,6	;RP1=0, select bank0
  7681  13DE  086D               	movf	_ind_fila,w
  7682  13DF  1903               	btfsc	3,2
  7683  13E0  2BE2               	goto	u5321
  7684  13E1  2BE3               	goto	u5320
  7685  13E2                     u5321:
  7686  13E2  2C23               	goto	l7142
  7687  13E3                     u5320:
  7688  13E3                     l7132:
  7689                           
  7690                           ;fifo.c: 186:     {;fifo.c: 187:         if(ind_fila > 2)
  7691  13E3  3003               	movlw	3
  7692  13E4  026D               	subwf	_ind_fila,w
  7693  13E5  1C03               	skipc
  7694  13E6  2BE8               	goto	u5331
  7695  13E7  2BE9               	goto	u5330
  7696  13E8                     u5331:
  7697  13E8  2BEB               	goto	l7136
  7698  13E9                     u5330:
  7699  13E9                     l7134:
  7700                           
  7701                           ;fifo.c: 188:             ind_fila--;
  7702  13E9  3001               	movlw	1
  7703  13EA  02ED               	subwf	_ind_fila,f
  7704  13EB                     l7136:
  7705                           
  7706                           ;fifo.c: 189:         if(fila[ind_fila] > 0xDC)
  7707  13EB  086D               	movf	_ind_fila,w
  7708  13EC  3E52               	addlw	(low (_fila| 0))& (0+255)
  7709  13ED  0084               	movwf	4
  7710  13EE  30DD               	movlw	221
  7711  13EF  1383               	bcf	3,7	;select IRP bank0
  7712  13F0  0200               	subwf	0,w
  7713  13F1  1C03               	skipc
  7714  13F2  2BF4               	goto	u5341
  7715  13F3  2BF5               	goto	u5340
  7716  13F4                     u5341:
  7717  13F4  2C1C               	goto	l7140
  7718  13F5                     u5340:
  7719  13F5                     l7138:
  7720                           
  7721                           ;fifo.c: 190:         {;fifo.c: 191:             decodifica(&fila[ind_fila]);
  7722  13F5  086D               	movf	_ind_fila,w
  7723  13F6  3E52               	addlw	(low (_fila| 0))& (0+255)
  7724  13F7  160A  118A  2656  160A  118A  	fcall	_decodifica
  7725                           
  7726                           ;fifo.c: 192:             alt_atuador(fila[ind_fila] & ~0x20);
  7727  13FC  1283               	bcf	3,5	;RP0=0, select bank0
  7728  13FD  1303               	bcf	3,6	;RP1=0, select bank0
  7729  13FE  086D               	movf	_ind_fila,w
  7730  13FF  3E52               	addlw	(low (_fila| 0))& (0+255)
  7731  1400  0084               	movwf	4
  7732  1401  1383               	bcf	3,7	;select IRP bank0
  7733  1402  0800               	movf	0,w
  7734  1403  39DF               	andlw	223
  7735  1404  160A  158A  261F  160A  118A  	fcall	_alt_atuador
  7736                           
  7737                           ;fifo.c: 193:             codifica('a',fila[ind_fila]);
  7738  1409  1283               	bcf	3,5	;RP0=0, select bank0
  7739  140A  1303               	bcf	3,6	;RP1=0, select bank0
  7740  140B  086D               	movf	_ind_fila,w
  7741  140C  3E52               	addlw	(low (_fila| 0))& (0+255)
  7742  140D  0084               	movwf	4
  7743  140E  1383               	bcf	3,7	;select IRP bank0
  7744  140F  0800               	movf	0,w
  7745  1410  00B3               	movwf	??_fifo_delete
  7746  1411  01B4               	clrf	??_fifo_delete+1
  7747  1412  0833               	movf	??_fifo_delete,w
  7748  1413  00A0               	movwf	codifica@dado
  7749  1414  0834               	movf	??_fifo_delete+1,w
  7750  1415  00A1               	movwf	codifica@dado+1
  7751  1416  3061               	movlw	97
  7752  1417  160A  118A  2753  160A  118A  	fcall	_codifica
  7753  141C                     l7140:
  7754                           
  7755                           ;fifo.c: 195:         fila[ind_fila] = 0;
  7756  141C  1283               	bcf	3,5	;RP0=0, select bank0
  7757  141D  1303               	bcf	3,6	;RP1=0, select bank0
  7758  141E  086D               	movf	_ind_fila,w
  7759  141F  3E52               	addlw	(low (_fila| 0))& (0+255)
  7760  1420  0084               	movwf	4
  7761  1421  1383               	bcf	3,7	;select IRP bank0
  7762  1422  0180               	clrf	0
  7763  1423                     l7142:
  7764                           
  7765                           ;fifo.c: 197:     fifo_alinharPrint();
  7766  1423  120A  118A  276C  160A  118A  	fcall	_fifo_alinharPrint
  7767  1428                     l287:
  7768  1428  0008               	return
  7769  1429                     __end_of_fifo_delete:
  7770                           
  7771                           	psect	text34
  7772  1656                     __ptext34:	
  7773 ;; *************** function _decodifica *****************
  7774 ;; Defined at:
  7775 ;;		line 227 in file "fifo.c"
  7776 ;; Parameters:    Size  Location     Type
  7777 ;;  d               1    wreg     PTR unsigned char 
  7778 ;;		 -> printExec@passo(1), fifo_print@comando(1), fila(18), 
  7779 ;; Auto vars:     Size  Location     Type
  7780 ;;  d               1    2[BANK0 ] PTR unsigned char 
  7781 ;;		 -> printExec@passo(1), fifo_print@comando(1), fila(18), 
  7782 ;; Return value:  Size  Location     Type
  7783 ;;                  1    wreg      void 
  7784 ;; Registers used:
  7785 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7786 ;; Tracked objects:
  7787 ;;		On entry : 0/0
  7788 ;;		On exit  : 0/0
  7789 ;;		Unchanged: 0/0
  7790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7791 ;;      Params:         0       0       0       0       0
  7792 ;;      Locals:         0       1       0       0       0
  7793 ;;      Temps:          0       2       0       0       0
  7794 ;;      Totals:         0       3       0       0       0
  7795 ;;Total ram usage:        3 bytes
  7796 ;; Hardware stack levels used:    1
  7797 ;; Hardware stack levels required when called:    2
  7798 ;; This function calls:
  7799 ;;		Nothing
  7800 ;; This function is called by:
  7801 ;;		_fifo_delete
  7802 ;;		_fifo_print
  7803 ;;		_printExec
  7804 ;; This function uses a non-reentrant model
  7805 ;;
  7806                           
  7807                           
  7808                           ;psect for function _decodifica
  7809  1656                     _decodifica:
  7810                           
  7811                           ;incstack = 0
  7812                           ; Regs used in _decodifica: [wreg-fsr0h+status,2+status,0]
  7813                           ;decodifica@d stored from wreg
  7814  1656  1283               	bcf	3,5	;RP0=0, select bank0
  7815  1657  1303               	bcf	3,6	;RP1=0, select bank0
  7816  1658  00A2               	movwf	decodifica@d
  7817  1659                     l6776:
  7818                           
  7819                           ;fifo.c: 227: void decodifica( unsigned char *d );fifo.c: 228: {;fifo.c: 229:     if( *d
      +                           <= 100 )
  7820  1659  0822               	movf	decodifica@d,w
  7821  165A  0084               	movwf	4
  7822  165B  3065               	movlw	101
  7823  165C  1383               	bcf	3,7	;select IRP bank0
  7824  165D  0200               	subwf	0,w
  7825  165E  1803               	skipnc
  7826  165F  2E61               	goto	u4951
  7827  1660  2E62               	goto	u4950
  7828  1661                     u4951:
  7829  1661  2E63               	goto	l6780
  7830  1662                     u4950:
  7831  1662  2ED3               	goto	l324
  7832  1663                     l6780:
  7833  1663  0822               	movf	decodifica@d,w
  7834  1664  0084               	movwf	4
  7835  1665  30DD               	movlw	221
  7836  1666  0200               	subwf	0,w
  7837  1667  1803               	skipnc
  7838  1668  2E6A               	goto	u4961
  7839  1669  2E6B               	goto	u4960
  7840  166A                     u4961:
  7841  166A  2EAC               	goto	l6804
  7842  166B                     u4960:
  7843  166B                     l6782:
  7844                           
  7845                           ;fifo.c: 234:     {;fifo.c: 235:         *d -= 0x64;
  7846  166B  0822               	movf	decodifica@d,w
  7847  166C  0084               	movwf	4
  7848  166D  3064               	movlw	100
  7849  166E  0280               	subwf	0,f
  7850                           
  7851                           ;fifo.c: 236:     } else
  7852  166F  2ED3               	goto	l324
  7853  1670                     l6784:
  7854  1670  3041               	movlw	65
  7855  1671  00A0               	movwf	??_decodifica
  7856  1672  0822               	movf	decodifica@d,w
  7857  1673  0084               	movwf	4
  7858  1674  0820               	movf	??_decodifica,w
  7859  1675  0080               	movwf	0
  7860  1676  2ED3               	goto	l324
  7861  1677                     l6786:
  7862  1677  3061               	movlw	97
  7863  1678  00A0               	movwf	??_decodifica
  7864  1679  0822               	movf	decodifica@d,w
  7865  167A  0084               	movwf	4
  7866  167B  0820               	movf	??_decodifica,w
  7867  167C  0080               	movwf	0
  7868  167D  2ED3               	goto	l324
  7869  167E                     l6788:
  7870  167E  3042               	movlw	66
  7871  167F  00A0               	movwf	??_decodifica
  7872  1680  0822               	movf	decodifica@d,w
  7873  1681  0084               	movwf	4
  7874  1682  0820               	movf	??_decodifica,w
  7875  1683  0080               	movwf	0
  7876  1684  2ED3               	goto	l324
  7877  1685                     l6790:
  7878  1685  3062               	movlw	98
  7879  1686  00A0               	movwf	??_decodifica
  7880  1687  0822               	movf	decodifica@d,w
  7881  1688  0084               	movwf	4
  7882  1689  0820               	movf	??_decodifica,w
  7883  168A  0080               	movwf	0
  7884  168B  2ED3               	goto	l324
  7885  168C                     l6792:
  7886  168C  3043               	movlw	67
  7887  168D  00A0               	movwf	??_decodifica
  7888  168E  0822               	movf	decodifica@d,w
  7889  168F  0084               	movwf	4
  7890  1690  0820               	movf	??_decodifica,w
  7891  1691  0080               	movwf	0
  7892  1692  2ED3               	goto	l324
  7893  1693                     l6794:
  7894  1693  3063               	movlw	99
  7895  1694  00A0               	movwf	??_decodifica
  7896  1695  0822               	movf	decodifica@d,w
  7897  1696  0084               	movwf	4
  7898  1697  0820               	movf	??_decodifica,w
  7899  1698  0080               	movwf	0
  7900  1699  2ED3               	goto	l324
  7901  169A                     l6796:
  7902  169A  3044               	movlw	68
  7903  169B  00A0               	movwf	??_decodifica
  7904  169C  0822               	movf	decodifica@d,w
  7905  169D  0084               	movwf	4
  7906  169E  0820               	movf	??_decodifica,w
  7907  169F  0080               	movwf	0
  7908  16A0  2ED3               	goto	l324
  7909  16A1                     l6798:
  7910  16A1  3064               	movlw	100
  7911  16A2  00A0               	movwf	??_decodifica
  7912  16A3  0822               	movf	decodifica@d,w
  7913  16A4  0084               	movwf	4
  7914  16A5  0820               	movf	??_decodifica,w
  7915  16A6  0080               	movwf	0
  7916  16A7  2ED3               	goto	l324
  7917  16A8                     l6800:
  7918  16A8  0822               	movf	decodifica@d,w
  7919  16A9  0084               	movwf	4
  7920  16AA  0180               	clrf	0
  7921  16AB  2ED3               	goto	l324
  7922  16AC                     l6804:
  7923  16AC  0822               	movf	decodifica@d,w
  7924  16AD  0084               	movwf	4
  7925  16AE  0800               	movf	0,w
  7926  16AF  00A0               	movwf	??_decodifica
  7927  16B0  01A1               	clrf	??_decodifica+1
  7928                           
  7929                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7930                           ; Switch size 1, requested type "simple"
  7931                           ; Number of cases is 1, Range of values is 0 to 0
  7932                           ; switch strategies available:
  7933                           ; Name         Instructions Cycles
  7934                           ; simple_byte            4     3 (average)
  7935                           ; direct_byte           11     8 (fixed)
  7936                           ; jumptable            260     6 (fixed)
  7937                           ;	Chosen strategy is simple_byte
  7938  16B1  0821               	movf	??_decodifica+1,w
  7939  16B2  3A00               	xorlw	0	; case 0
  7940  16B3  1903               	skipnz
  7941  16B4  2EB6               	goto	l8706
  7942  16B5  2ED3               	goto	l324
  7943  16B6                     l8706:
  7944                           
  7945                           ; Switch size 1, requested type "simple"
  7946                           ; Number of cases is 9, Range of values is 221 to 254
  7947                           ; switch strategies available:
  7948                           ; Name         Instructions Cycles
  7949                           ; simple_byte           28    15 (average)
  7950                           ; direct_byte          113    11 (fixed)
  7951                           ; jumptable            263     9 (fixed)
  7952                           ;	Chosen strategy is simple_byte
  7953  16B6  0820               	movf	??_decodifica,w
  7954  16B7  3ADD               	xorlw	221	; case 221
  7955  16B8  1903               	skipnz
  7956  16B9  2E70               	goto	l6784
  7957  16BA  3A03               	xorlw	3	; case 222
  7958  16BB  1903               	skipnz
  7959  16BC  2E77               	goto	l6786
  7960  16BD  3A01               	xorlw	1	; case 223
  7961  16BE  1903               	skipnz
  7962  16BF  2E7E               	goto	l6788
  7963  16C0  3A3F               	xorlw	63	; case 224
  7964  16C1  1903               	skipnz
  7965  16C2  2E85               	goto	l6790
  7966  16C3  3A01               	xorlw	1	; case 225
  7967  16C4  1903               	skipnz
  7968  16C5  2E8C               	goto	l6792
  7969  16C6  3A03               	xorlw	3	; case 226
  7970  16C7  1903               	skipnz
  7971  16C8  2E93               	goto	l6794
  7972  16C9  3A01               	xorlw	1	; case 227
  7973  16CA  1903               	skipnz
  7974  16CB  2E9A               	goto	l6796
  7975  16CC  3A07               	xorlw	7	; case 228
  7976  16CD  1903               	skipnz
  7977  16CE  2EA1               	goto	l6798
  7978  16CF  3A1A               	xorlw	26	; case 254
  7979  16D0  1903               	skipnz
  7980  16D1  2EA8               	goto	l6800
  7981  16D2  2ED3               	goto	l324
  7982  16D3                     l324:
  7983  16D3  0008               	return
  7984  16D4                     __end_of_decodifica:
  7985                           
  7986                           	psect	text35
  7987  1E1F                     __ptext35:	
  7988 ;; *************** function _alt_atuador *****************
  7989 ;; Defined at:
  7990 ;;		line 92 in file "fifo.c"
  7991 ;; Parameters:    Size  Location     Type
  7992 ;;  tecla           1    wreg     unsigned char 
  7993 ;; Auto vars:     Size  Location     Type
  7994 ;;  tecla           1    2[BANK0 ] unsigned char 
  7995 ;; Return value:  Size  Location     Type
  7996 ;;                  1    wreg      void 
  7997 ;; Registers used:
  7998 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  7999 ;; Tracked objects:
  8000 ;;		On entry : 0/0
  8001 ;;		On exit  : 0/0
  8002 ;;		Unchanged: 0/0
  8003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8004 ;;      Params:         0       0       0       0       0
  8005 ;;      Locals:         0       1       0       0       0
  8006 ;;      Temps:          0       2       0       0       0
  8007 ;;      Totals:         0       3       0       0       0
  8008 ;;Total ram usage:        3 bytes
  8009 ;; Hardware stack levels used:    1
  8010 ;; Hardware stack levels required when called:    2
  8011 ;; This function calls:
  8012 ;;		Nothing
  8013 ;; This function is called by:
  8014 ;;		_fifo_delete
  8015 ;;		_main
  8016 ;;		_manipula_atuadores_init
  8017 ;; This function uses a non-reentrant model
  8018 ;;
  8019                           
  8020                           
  8021                           ;psect for function _alt_atuador
  8022  1E1F                     _alt_atuador:
  8023                           
  8024                           ;incstack = 0
  8025                           ; Regs used in _alt_atuador: [wreg-fsr0h+status,2+status,0]
  8026                           ;alt_atuador@tecla stored from wreg
  8027  1E1F  1283               	bcf	3,5	;RP0=0, select bank0
  8028  1E20  1303               	bcf	3,6	;RP1=0, select bank0
  8029  1E21  00A2               	movwf	alt_atuador@tecla
  8030  1E22                     l6764:
  8031                           
  8032                           ;fifo.c: 92: void alt_atuador( char tecla );fifo.c: 93: {;fifo.c: 94:     switch(tecla)
  8033  1E22  2E3F               	goto	l6768
  8034  1E23                     l241:	
  8035                           ;fifo.c: 95:     {;fifo.c: 96:         case 'A': atuador.A = atuador.A ^ 1; break;
  8036                           
  8037  1E23  1C79               	btfss	_atuador,0
  8038  1E24  2E26               	goto	u4871
  8039  1E25  2E28               	goto	u4870
  8040  1E26                     u4871:
  8041  1E26  1479               	bsf	_atuador,0
  8042  1E27  2E29               	goto	u4884
  8043  1E28                     u4870:
  8044  1E28  1079               	bcf	_atuador,0
  8045  1E29                     u4884:
  8046  1E29  2E55               	goto	l246
  8047  1E2A                     l243:	
  8048                           ;fifo.c: 97:         case 'B': atuador.B = atuador.B ^ 1; break;
  8049                           
  8050  1E2A  1CF9               	btfss	_atuador,1
  8051  1E2B  2E2D               	goto	u4891
  8052  1E2C  2E2F               	goto	u4890
  8053  1E2D                     u4891:
  8054  1E2D  14F9               	bsf	_atuador,1
  8055  1E2E  2E30               	goto	u4904
  8056  1E2F                     u4890:
  8057  1E2F  10F9               	bcf	_atuador,1
  8058  1E30                     u4904:
  8059  1E30  2E55               	goto	l246
  8060  1E31                     l244:	
  8061                           ;fifo.c: 98:         case 'C': atuador.C = atuador.C ^ 1; break;
  8062                           
  8063  1E31  1D79               	btfss	_atuador,2
  8064  1E32  2E34               	goto	u4911
  8065  1E33  2E36               	goto	u4910
  8066  1E34                     u4911:
  8067  1E34  1579               	bsf	_atuador,2
  8068  1E35  2E37               	goto	u4924
  8069  1E36                     u4910:
  8070  1E36  1179               	bcf	_atuador,2
  8071  1E37                     u4924:
  8072  1E37  2E55               	goto	l246
  8073  1E38                     l245:	
  8074                           ;fifo.c: 99:         case 'D': atuador.D = atuador.D ^ 1; break;
  8075                           
  8076  1E38  1DF9               	btfss	_atuador,3
  8077  1E39  2E3B               	goto	u4931
  8078  1E3A  2E3D               	goto	u4930
  8079  1E3B                     u4931:
  8080  1E3B  15F9               	bsf	_atuador,3
  8081  1E3C  2E3E               	goto	u4944
  8082  1E3D                     u4930:
  8083  1E3D  11F9               	bcf	_atuador,3
  8084  1E3E                     u4944:
  8085  1E3E  2E55               	goto	l246
  8086  1E3F                     l6768:
  8087  1E3F  0822               	movf	alt_atuador@tecla,w
  8088  1E40  00A0               	movwf	??_alt_atuador
  8089  1E41  01A1               	clrf	??_alt_atuador+1
  8090                           
  8091                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8092                           ; Switch size 1, requested type "simple"
  8093                           ; Number of cases is 1, Range of values is 0 to 0
  8094                           ; switch strategies available:
  8095                           ; Name         Instructions Cycles
  8096                           ; simple_byte            4     3 (average)
  8097                           ; direct_byte           11     8 (fixed)
  8098                           ; jumptable            260     6 (fixed)
  8099                           ;	Chosen strategy is simple_byte
  8100  1E42  0821               	movf	??_alt_atuador+1,w
  8101  1E43  3A00               	xorlw	0	; case 0
  8102  1E44  1903               	skipnz
  8103  1E45  2E47               	goto	l8708
  8104  1E46  2E55               	goto	l246
  8105  1E47                     l8708:
  8106                           
  8107                           ; Switch size 1, requested type "simple"
  8108                           ; Number of cases is 4, Range of values is 65 to 68
  8109                           ; switch strategies available:
  8110                           ; Name         Instructions Cycles
  8111                           ; simple_byte           13     7 (average)
  8112                           ; direct_byte           23    11 (fixed)
  8113                           ; jumptable            263     9 (fixed)
  8114                           ;	Chosen strategy is simple_byte
  8115  1E47  0820               	movf	??_alt_atuador,w
  8116  1E48  3A41               	xorlw	65	; case 65
  8117  1E49  1903               	skipnz
  8118  1E4A  2E23               	goto	l241
  8119  1E4B  3A03               	xorlw	3	; case 66
  8120  1E4C  1903               	skipnz
  8121  1E4D  2E2A               	goto	l243
  8122  1E4E  3A01               	xorlw	1	; case 67
  8123  1E4F  1903               	skipnz
  8124  1E50  2E31               	goto	l244
  8125  1E51  3A07               	xorlw	7	; case 68
  8126  1E52  1903               	skipnz
  8127  1E53  2E38               	goto	l245
  8128  1E54  2E55               	goto	l246
  8129  1E55                     l246:
  8130  1E55  0008               	return
  8131  1E56                     __end_of_alt_atuador:
  8132                           
  8133                           	psect	text36
  8134  19B1                     __ptext36:	
  8135 ;; *************** function _fifo_adrs *****************
  8136 ;; Defined at:
  8137 ;;		line 178 in file "fifo.c"
  8138 ;; Parameters:    Size  Location     Type
  8139 ;;		None
  8140 ;; Auto vars:     Size  Location     Type
  8141 ;;		None
  8142 ;; Return value:  Size  Location     Type
  8143 ;;                  1    wreg      PTR unsigned char 
  8144 ;; Registers used:
  8145 ;;		wreg
  8146 ;; Tracked objects:
  8147 ;;		On entry : 0/0
  8148 ;;		On exit  : 0/0
  8149 ;;		Unchanged: 0/0
  8150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8151 ;;      Params:         0       0       0       0       0
  8152 ;;      Locals:         0       0       0       0       0
  8153 ;;      Temps:          0       0       0       0       0
  8154 ;;      Totals:         0       0       0       0       0
  8155 ;;Total ram usage:        0 bytes
  8156 ;; Hardware stack levels used:    1
  8157 ;; Hardware stack levels required when called:    2
  8158 ;; This function calls:
  8159 ;;		Nothing
  8160 ;; This function is called by:
  8161 ;;		_main
  8162 ;; This function uses a non-reentrant model
  8163 ;;
  8164                           
  8165                           
  8166                           ;psect for function _fifo_adrs
  8167  19B1                     _fifo_adrs:
  8168  19B1                     l7126:	
  8169                           ;incstack = 0
  8170                           ; Regs used in _fifo_adrs: [wreg]
  8171                           
  8172                           
  8173                           ;fifo.c: 180:     return fila;
  8174  19B1  3052               	movlw	(low (_fila| 0))& (0+255)
  8175  19B2                     l281:
  8176  19B2  0008               	return
  8177  19B3                     __end_of_fifo_adrs:
  8178                           
  8179                           	psect	text37
  8180  0800                     __ptext37:	
  8181 ;; *************** function _fifo_add_tempo *****************
  8182 ;; Defined at:
  8183 ;;		line 269 in file "fifo.c"
  8184 ;; Parameters:    Size  Location     Type
  8185 ;;  t               1    wreg     const unsigned char 
  8186 ;; Auto vars:     Size  Location     Type
  8187 ;;  t               1   20[BANK0 ] const unsigned char 
  8188 ;; Return value:  Size  Location     Type
  8189 ;;                  1    wreg      void 
  8190 ;; Registers used:
  8191 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8192 ;; Tracked objects:
  8193 ;;		On entry : 0/0
  8194 ;;		On exit  : 0/0
  8195 ;;		Unchanged: 0/0
  8196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8197 ;;      Params:         0       0       0       0       0
  8198 ;;      Locals:         0       1       0       0       0
  8199 ;;      Temps:          0       1       0       0       0
  8200 ;;      Totals:         0       2       0       0       0
  8201 ;;Total ram usage:        2 bytes
  8202 ;; Hardware stack levels used:    1
  8203 ;; Hardware stack levels required when called:    5
  8204 ;; This function calls:
  8205 ;;		_codifica
  8206 ;;		_fifo_alinharPrint
  8207 ;; This function is called by:
  8208 ;;		_main
  8209 ;; This function uses a non-reentrant model
  8210 ;;
  8211                           
  8212                           
  8213                           ;psect for function _fifo_add_tempo
  8214  0800                     _fifo_add_tempo:
  8215                           
  8216                           ;incstack = 0
  8217                           ; Regs used in _fifo_add_tempo: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8218                           ;fifo_add_tempo@t stored from wreg
  8219  0800  1283               	bcf	3,5	;RP0=0, select bank0
  8220  0801  1303               	bcf	3,6	;RP1=0, select bank0
  8221  0802  00B4               	movwf	fifo_add_tempo@t
  8222  0803                     l7158:
  8223                           
  8224                           ;fifo.c: 269: void fifo_add_tempo(const char t);fifo.c: 270: {;fifo.c: 271:     if(ind_f
      +                          ila < 18)
  8225  0803  3012               	movlw	18
  8226  0804  026D               	subwf	_ind_fila,w
  8227  0805  1803               	skipnc
  8228  0806  2808               	goto	u5371
  8229  0807  2809               	goto	u5370
  8230  0808                     u5371:
  8231  0808  282A               	goto	l7170
  8232  0809                     u5370:
  8233  0809                     l7160:
  8234                           
  8235                           ;fifo.c: 272:     {;fifo.c: 273:         if(t)
  8236  0809  0834               	movf	fifo_add_tempo@t,w
  8237  080A  1903               	btfsc	3,2
  8238  080B  280D               	goto	u5381
  8239  080C  280E               	goto	u5380
  8240  080D                     u5381:
  8241  080D  282A               	goto	l7170
  8242  080E                     u5380:
  8243  080E                     l7162:
  8244                           
  8245                           ;fifo.c: 274:         {;fifo.c: 275:             codifica('t', &t);
  8246  080E  3034               	movlw	(low (fifo_add_tempo@t| 0))& (0+255)
  8247  080F  00A0               	movwf	codifica@dado
  8248  0810  3000               	movlw	0
  8249  0811  00A1               	movwf	codifica@dado+1
  8250  0812  3074               	movlw	116
  8251  0813  160A  118A  2753  120A  158A  	fcall	_codifica
  8252  0818                     l7164:
  8253                           
  8254                           ;fifo.c: 276:             fila[ind_fila] = t;
  8255  0818  1283               	bcf	3,5	;RP0=0, select bank0
  8256  0819  1303               	bcf	3,6	;RP1=0, select bank0
  8257  081A  0834               	movf	fifo_add_tempo@t,w
  8258  081B  00B3               	movwf	??_fifo_add_tempo
  8259  081C  086D               	movf	_ind_fila,w
  8260  081D  3E52               	addlw	(low (_fila| 0))& (0+255)
  8261  081E  0084               	movwf	4
  8262  081F  0833               	movf	??_fifo_add_tempo,w
  8263  0820  1383               	bcf	3,7	;select IRP bank0
  8264  0821  0080               	movwf	0
  8265  0822                     l7166:
  8266                           
  8267                           ;fifo.c: 277:             ind_fila++;
  8268  0822  3001               	movlw	1
  8269  0823  00B3               	movwf	??_fifo_add_tempo
  8270  0824  0833               	movf	??_fifo_add_tempo,w
  8271  0825  07ED               	addwf	_ind_fila,f
  8272  0826                     l7168:
  8273                           
  8274                           ;fifo.c: 278:             fila[ind_fila] = 0;
  8275  0826  086D               	movf	_ind_fila,w
  8276  0827  3E52               	addlw	(low (_fila| 0))& (0+255)
  8277  0828  0084               	movwf	4
  8278  0829  0180               	clrf	0
  8279  082A                     l7170:
  8280                           
  8281                           ;fifo.c: 281:     fifo_alinharPrint();
  8282  082A  120A  118A  276C  120A  158A  	fcall	_fifo_alinharPrint
  8283  082F                     l334:
  8284  082F  0008               	return
  8285  0830                     __end_of_fifo_add_tempo:
  8286                           
  8287                           	psect	text38
  8288  1C47                     __ptext38:	
  8289 ;; *************** function _fifo_add_control *****************
  8290 ;; Defined at:
  8291 ;;		line 284 in file "fifo.c"
  8292 ;; Parameters:    Size  Location     Type
  8293 ;;  c               1    wreg     const unsigned char 
  8294 ;; Auto vars:     Size  Location     Type
  8295 ;;  c               1   20[BANK0 ] const unsigned char 
  8296 ;; Return value:  Size  Location     Type
  8297 ;;                  1    wreg      void 
  8298 ;; Registers used:
  8299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8300 ;; Tracked objects:
  8301 ;;		On entry : 0/0
  8302 ;;		On exit  : 0/0
  8303 ;;		Unchanged: 0/0
  8304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8305 ;;      Params:         0       0       0       0       0
  8306 ;;      Locals:         0       1       0       0       0
  8307 ;;      Temps:          0       1       0       0       0
  8308 ;;      Totals:         0       2       0       0       0
  8309 ;;Total ram usage:        2 bytes
  8310 ;; Hardware stack levels used:    1
  8311 ;; Hardware stack levels required when called:    5
  8312 ;; This function calls:
  8313 ;;		_codifica
  8314 ;;		_fifo_alinharPrint
  8315 ;; This function is called by:
  8316 ;;		_main
  8317 ;; This function uses a non-reentrant model
  8318 ;;
  8319                           
  8320                           
  8321                           ;psect for function _fifo_add_control
  8322  1C47                     _fifo_add_control:
  8323                           
  8324                           ;incstack = 0
  8325                           ; Regs used in _fifo_add_control: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8326                           ;fifo_add_control@c stored from wreg
  8327  1C47  1283               	bcf	3,5	;RP0=0, select bank0
  8328  1C48  1303               	bcf	3,6	;RP1=0, select bank0
  8329  1C49  00B4               	movwf	fifo_add_control@c
  8330  1C4A                     l7172:
  8331                           
  8332                           ;fifo.c: 284: void fifo_add_control(const char c);fifo.c: 285: {;fifo.c: 286:     if(ind
      +                          _fila < 18)
  8333  1C4A  3012               	movlw	18
  8334  1C4B  026D               	subwf	_ind_fila,w
  8335  1C4C  1803               	skipnc
  8336  1C4D  2C4F               	goto	u5391
  8337  1C4E  2C50               	goto	u5390
  8338  1C4F                     u5391:
  8339  1C4F  2C6C               	goto	l7182
  8340  1C50                     u5390:
  8341  1C50                     l7174:
  8342                           
  8343                           ;fifo.c: 287:     {;fifo.c: 290:             codifica('p', &c);
  8344  1C50  3034               	movlw	(low (fifo_add_control@c| 0))& (0+255)
  8345  1C51  00A0               	movwf	codifica@dado
  8346  1C52  3000               	movlw	0
  8347  1C53  00A1               	movwf	codifica@dado+1
  8348  1C54  3070               	movlw	112
  8349  1C55  160A  118A  2753  160A  158A  	fcall	_codifica
  8350  1C5A                     l7176:
  8351                           
  8352                           ;fifo.c: 291:             fila[ind_fila] = c;
  8353  1C5A  1283               	bcf	3,5	;RP0=0, select bank0
  8354  1C5B  1303               	bcf	3,6	;RP1=0, select bank0
  8355  1C5C  0834               	movf	fifo_add_control@c,w
  8356  1C5D  00B3               	movwf	??_fifo_add_control
  8357  1C5E  086D               	movf	_ind_fila,w
  8358  1C5F  3E52               	addlw	(low (_fila| 0))& (0+255)
  8359  1C60  0084               	movwf	4
  8360  1C61  0833               	movf	??_fifo_add_control,w
  8361  1C62  1383               	bcf	3,7	;select IRP bank0
  8362  1C63  0080               	movwf	0
  8363  1C64                     l7178:
  8364                           
  8365                           ;fifo.c: 292:             ind_fila++;
  8366  1C64  3001               	movlw	1
  8367  1C65  00B3               	movwf	??_fifo_add_control
  8368  1C66  0833               	movf	??_fifo_add_control,w
  8369  1C67  07ED               	addwf	_ind_fila,f
  8370  1C68                     l7180:
  8371                           
  8372                           ;fifo.c: 293:             fila[ind_fila] = 0;
  8373  1C68  086D               	movf	_ind_fila,w
  8374  1C69  3E52               	addlw	(low (_fila| 0))& (0+255)
  8375  1C6A  0084               	movwf	4
  8376  1C6B  0180               	clrf	0
  8377  1C6C                     l7182:
  8378                           
  8379                           ;fifo.c: 296:     fifo_alinharPrint();
  8380  1C6C  120A  118A  276C  160A  158A  	fcall	_fifo_alinharPrint
  8381  1C71                     l338:
  8382  1C71  0008               	return
  8383  1C72                     __end_of_fifo_add_control:
  8384                           
  8385                           	psect	text39
  8386  1A25                     __ptext39:	
  8387 ;; *************** function _fifo_add_ciclo *****************
  8388 ;; Defined at:
  8389 ;;		line 299 in file "fifo.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;  ciclos          2    0[BANK0 ] unsigned int 
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;		None
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  1    wreg      void 
  8396 ;; Registers used:
  8397 ;;		wreg, status,2
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/0
  8400 ;;		On exit  : 0/0
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8403 ;;      Params:         0       2       0       0       0
  8404 ;;      Locals:         0       0       0       0       0
  8405 ;;      Temps:          0       1       0       0       0
  8406 ;;      Totals:         0       3       0       0       0
  8407 ;;Total ram usage:        3 bytes
  8408 ;; Hardware stack levels used:    1
  8409 ;; Hardware stack levels required when called:    2
  8410 ;; This function calls:
  8411 ;;		Nothing
  8412 ;; This function is called by:
  8413 ;;		_main
  8414 ;; This function uses a non-reentrant model
  8415 ;;
  8416                           
  8417                           
  8418                           ;psect for function _fifo_add_ciclo
  8419  1A25                     _fifo_add_ciclo:
  8420  1A25                     l7184:	
  8421                           ;incstack = 0
  8422                           ; Regs used in _fifo_add_ciclo: [wreg+status,2]
  8423                           
  8424                           
  8425                           ;fifo.c: 299: void fifo_add_ciclo(unsigned int ciclos);fifo.c: 300: {;fifo.c: 301:     f
      +                          ila[0] = ciclos & 0x00ff;
  8426  1A25  1283               	bcf	3,5	;RP0=0, select bank0
  8427  1A26  1303               	bcf	3,6	;RP1=0, select bank0
  8428  1A27  0820               	movf	fifo_add_ciclo@ciclos,w
  8429  1A28  00A2               	movwf	??_fifo_add_ciclo
  8430  1A29  0822               	movf	??_fifo_add_ciclo,w
  8431  1A2A  00D2               	movwf	_fila
  8432  1A2B                     l7186:
  8433                           
  8434                           ;fifo.c: 302:     fila[1] = ciclos >> 8;
  8435  1A2B  0821               	movf	fifo_add_ciclo@ciclos+1,w
  8436  1A2C  00A2               	movwf	??_fifo_add_ciclo
  8437  1A2D  0822               	movf	??_fifo_add_ciclo,w
  8438  1A2E  00D3               	movwf	_fila+1
  8439  1A2F                     l341:
  8440  1A2F  0008               	return
  8441  1A30                     __end_of_fifo_add_ciclo:
  8442                           
  8443                           	psect	text40
  8444  1D5A                     __ptext40:	
  8445 ;; *************** function _fifo_add *****************
  8446 ;; Defined at:
  8447 ;;		line 254 in file "fifo.c"
  8448 ;; Parameters:    Size  Location     Type
  8449 ;;  passo           1    wreg     const unsigned char 
  8450 ;; Auto vars:     Size  Location     Type
  8451 ;;  passo           1   20[BANK0 ] const unsigned char 
  8452 ;; Return value:  Size  Location     Type
  8453 ;;                  1    wreg      void 
  8454 ;; Registers used:
  8455 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8456 ;; Tracked objects:
  8457 ;;		On entry : 0/0
  8458 ;;		On exit  : 0/0
  8459 ;;		Unchanged: 0/0
  8460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8461 ;;      Params:         0       0       0       0       0
  8462 ;;      Locals:         0       1       0       0       0
  8463 ;;      Temps:          0       1       0       0       0
  8464 ;;      Totals:         0       2       0       0       0
  8465 ;;Total ram usage:        2 bytes
  8466 ;; Hardware stack levels used:    1
  8467 ;; Hardware stack levels required when called:    5
  8468 ;; This function calls:
  8469 ;;		_codifica
  8470 ;;		_fifo_alinharPrint
  8471 ;; This function is called by:
  8472 ;;		_main
  8473 ;; This function uses a non-reentrant model
  8474 ;;
  8475                           
  8476                           
  8477                           ;psect for function _fifo_add
  8478  1D5A                     _fifo_add:
  8479                           
  8480                           ;incstack = 0
  8481                           ; Regs used in _fifo_add: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8482                           ;fifo_add@passo stored from wreg
  8483  1D5A  1283               	bcf	3,5	;RP0=0, select bank0
  8484  1D5B  1303               	bcf	3,6	;RP1=0, select bank0
  8485  1D5C  00B4               	movwf	fifo_add@passo
  8486  1D5D                     l7144:
  8487                           
  8488                           ;fifo.c: 254: void fifo_add(const char passo);fifo.c: 255: {;fifo.c: 256:     if(ind_fil
      +                          a < 18)
  8489  1D5D  3012               	movlw	18
  8490  1D5E  026D               	subwf	_ind_fila,w
  8491  1D5F  1803               	skipnc
  8492  1D60  2D62               	goto	u5351
  8493  1D61  2D63               	goto	u5350
  8494  1D62                     u5351:
  8495  1D62  2D84               	goto	l7156
  8496  1D63                     u5350:
  8497  1D63                     l7146:
  8498                           
  8499                           ;fifo.c: 257:     {;fifo.c: 258:         if(passo)
  8500  1D63  0834               	movf	fifo_add@passo,w
  8501  1D64  1903               	btfsc	3,2
  8502  1D65  2D67               	goto	u5361
  8503  1D66  2D68               	goto	u5360
  8504  1D67                     u5361:
  8505  1D67  2D84               	goto	l7156
  8506  1D68                     u5360:
  8507  1D68                     l7148:
  8508                           
  8509                           ;fifo.c: 259:         {;fifo.c: 260:             codifica('a', &passo);
  8510  1D68  3034               	movlw	(low (fifo_add@passo| 0))& (0+255)
  8511  1D69  00A0               	movwf	codifica@dado
  8512  1D6A  3000               	movlw	0
  8513  1D6B  00A1               	movwf	codifica@dado+1
  8514  1D6C  3061               	movlw	97
  8515  1D6D  160A  118A  2753  160A  158A  	fcall	_codifica
  8516  1D72                     l7150:
  8517                           
  8518                           ;fifo.c: 261:             fila[ind_fila] = passo;
  8519  1D72  1283               	bcf	3,5	;RP0=0, select bank0
  8520  1D73  1303               	bcf	3,6	;RP1=0, select bank0
  8521  1D74  0834               	movf	fifo_add@passo,w
  8522  1D75  00B3               	movwf	??_fifo_add
  8523  1D76  086D               	movf	_ind_fila,w
  8524  1D77  3E52               	addlw	(low (_fila| 0))& (0+255)
  8525  1D78  0084               	movwf	4
  8526  1D79  0833               	movf	??_fifo_add,w
  8527  1D7A  1383               	bcf	3,7	;select IRP bank0
  8528  1D7B  0080               	movwf	0
  8529  1D7C                     l7152:
  8530                           
  8531                           ;fifo.c: 262:             ind_fila++;
  8532  1D7C  3001               	movlw	1
  8533  1D7D  00B3               	movwf	??_fifo_add
  8534  1D7E  0833               	movf	??_fifo_add,w
  8535  1D7F  07ED               	addwf	_ind_fila,f
  8536  1D80                     l7154:
  8537                           
  8538                           ;fifo.c: 263:             fila[ind_fila] = 0;
  8539  1D80  086D               	movf	_ind_fila,w
  8540  1D81  3E52               	addlw	(low (_fila| 0))& (0+255)
  8541  1D82  0084               	movwf	4
  8542  1D83  0180               	clrf	0
  8543  1D84                     l7156:
  8544                           
  8545                           ;fifo.c: 266:      fifo_alinharPrint();
  8546  1D84  120A  118A  276C  160A  158A  	fcall	_fifo_alinharPrint
  8547  1D89                     l329:
  8548  1D89  0008               	return
  8549  1D8A                     __end_of_fifo_add:
  8550                           
  8551                           	psect	text41
  8552  076C                     __ptext41:	
  8553 ;; *************** function _fifo_alinharPrint *****************
  8554 ;; Defined at:
  8555 ;;		line 482 in file "fifo.c"
  8556 ;; Parameters:    Size  Location     Type
  8557 ;;		None
  8558 ;; Auto vars:     Size  Location     Type
  8559 ;;  aux             1   18[BANK0 ] unsigned char 
  8560 ;;  i               1   17[BANK0 ] unsigned char 
  8561 ;;  cont            1   16[BANK0 ] unsigned char 
  8562 ;; Return value:  Size  Location     Type
  8563 ;;                  1    wreg      void 
  8564 ;; Registers used:
  8565 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8566 ;; Tracked objects:
  8567 ;;		On entry : 0/0
  8568 ;;		On exit  : 0/0
  8569 ;;		Unchanged: 0/0
  8570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8571 ;;      Params:         0       0       0       0       0
  8572 ;;      Locals:         0       3       0       0       0
  8573 ;;      Temps:          0       3       0       0       0
  8574 ;;      Totals:         0       6       0       0       0
  8575 ;;Total ram usage:        6 bytes
  8576 ;; Hardware stack levels used:    1
  8577 ;; Hardware stack levels required when called:    4
  8578 ;; This function calls:
  8579 ;;		_dignum_tam
  8580 ;; This function is called by:
  8581 ;;		_fifo_delete
  8582 ;;		_fifo_add
  8583 ;;		_fifo_add_tempo
  8584 ;;		_fifo_add_control
  8585 ;; This function uses a non-reentrant model
  8586 ;;
  8587                           
  8588                           
  8589                           ;psect for function _fifo_alinharPrint
  8590  076C                     _fifo_alinharPrint:
  8591  076C                     l6854:	
  8592                           ;incstack = 0
  8593                           ; Regs used in _fifo_alinharPrint: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8594                           
  8595                           
  8596                           ;fifo.c: 484:     unsigned char i;;fifo.c: 485:     unsigned char aux;;fifo.c: 486:     
      +                          unsigned char cont = 0;
  8597  076C  1283               	bcf	3,5	;RP0=0, select bank0
  8598  076D  1303               	bcf	3,6	;RP1=0, select bank0
  8599  076E  01B0               	clrf	fifo_alinharPrint@cont
  8600  076F                     l6856:
  8601                           
  8602                           ;fifo.c: 488:     for( i=ind_fila-1; i>=2; i-- )
  8603  076F  086D               	movf	_ind_fila,w
  8604  0770  3EFF               	addlw	255
  8605  0771  00AD               	movwf	??_fifo_alinharPrint
  8606  0772  082D               	movf	??_fifo_alinharPrint,w
  8607  0773  00B1               	movwf	fifo_alinharPrint@i
  8608  0774                     l6858:
  8609  0774  3002               	movlw	2
  8610  0775  0231               	subwf	fifo_alinharPrint@i,w
  8611  0776  1803               	skipnc
  8612  0777  2F79               	goto	u4981
  8613  0778  2F7A               	goto	u4980
  8614  0779                     u4981:
  8615  0779  2F7B               	goto	l6862
  8616  077A                     u4980:
  8617  077A  2FEF               	goto	l420
  8618  077B                     l6862:
  8619                           
  8620                           ;fifo.c: 489:     {;fifo.c: 490:         aux = fila[i];
  8621  077B  0831               	movf	fifo_alinharPrint@i,w
  8622  077C  3E52               	addlw	(low (_fila| 0))& (0+255)
  8623  077D  0084               	movwf	4
  8624  077E  1383               	bcf	3,7	;select IRP bank0
  8625  077F  0800               	movf	0,w
  8626  0780  00AD               	movwf	??_fifo_alinharPrint
  8627  0781  082D               	movf	??_fifo_alinharPrint,w
  8628  0782  00B2               	movwf	fifo_alinharPrint@aux
  8629  0783                     l6864:
  8630                           
  8631                           ;fifo.c: 491:         if( aux <= 0x64 )
  8632  0783  3065               	movlw	101
  8633  0784  0232               	subwf	fifo_alinharPrint@aux,w
  8634  0785  1803               	skipnc
  8635  0786  2F88               	goto	u4991
  8636  0787  2F89               	goto	u4990
  8637  0788                     u4991:
  8638  0788  2F9B               	goto	l6868
  8639  0789                     u4990:
  8640  0789                     l6866:
  8641                           
  8642                           ;fifo.c: 492:             cont += dignum_tam( aux )+1;
  8643  0789  0832               	movf	fifo_alinharPrint@aux,w
  8644  078A  00AD               	movwf	??_fifo_alinharPrint
  8645  078B  01AE               	clrf	??_fifo_alinharPrint+1
  8646  078C  082D               	movf	??_fifo_alinharPrint,w
  8647  078D  00A9               	movwf	dignum_tam@num
  8648  078E  082E               	movf	??_fifo_alinharPrint+1,w
  8649  078F  00AA               	movwf	dignum_tam@num+1
  8650  0790  160A  158A  2384  120A  118A  	fcall	_dignum_tam
  8651  0795  3E01               	addlw	1
  8652  0796  1283               	bcf	3,5	;RP0=0, select bank0
  8653  0797  1303               	bcf	3,6	;RP1=0, select bank0
  8654  0798  00AF               	movwf	??_fifo_alinharPrint+2
  8655  0799  082F               	movf	??_fifo_alinharPrint+2,w
  8656  079A  07B0               	addwf	fifo_alinharPrint@cont,f
  8657  079B                     l6868:
  8658                           
  8659                           ;fifo.c: 494:         if( aux > 0x64 && aux <= 0xDC )
  8660  079B  3065               	movlw	101
  8661  079C  0232               	subwf	fifo_alinharPrint@aux,w
  8662  079D  1C03               	skipc
  8663  079E  2FA0               	goto	u5001
  8664  079F  2FA1               	goto	u5000
  8665  07A0                     u5001:
  8666  07A0  2FB9               	goto	l6874
  8667  07A1                     u5000:
  8668  07A1                     l6870:
  8669  07A1  30DD               	movlw	221
  8670  07A2  0232               	subwf	fifo_alinharPrint@aux,w
  8671  07A3  1803               	skipnc
  8672  07A4  2FA6               	goto	u5011
  8673  07A5  2FA7               	goto	u5010
  8674  07A6                     u5011:
  8675  07A6  2FB9               	goto	l6874
  8676  07A7                     u5010:
  8677  07A7                     l6872:
  8678                           
  8679                           ;fifo.c: 495:             cont += dignum_tam( aux - 0x64 )+1;
  8680  07A7  0832               	movf	fifo_alinharPrint@aux,w
  8681  07A8  3E9C               	addlw	156
  8682  07A9  00A9               	movwf	dignum_tam@num
  8683  07AA  30FF               	movlw	255
  8684  07AB  1803               	skipnc
  8685  07AC  3000               	movlw	0
  8686  07AD  00AA               	movwf	dignum_tam@num+1
  8687  07AE  160A  158A  2384  120A  118A  	fcall	_dignum_tam
  8688  07B3  3E01               	addlw	1
  8689  07B4  1283               	bcf	3,5	;RP0=0, select bank0
  8690  07B5  1303               	bcf	3,6	;RP1=0, select bank0
  8691  07B6  00AD               	movwf	??_fifo_alinharPrint
  8692  07B7  082D               	movf	??_fifo_alinharPrint,w
  8693  07B8  07B0               	addwf	fifo_alinharPrint@cont,f
  8694  07B9                     l6874:
  8695                           
  8696                           ;fifo.c: 497:         if( aux > 0xDC && aux < 0xFE )
  8697  07B9  30DD               	movlw	221
  8698  07BA  0232               	subwf	fifo_alinharPrint@aux,w
  8699  07BB  1C03               	skipc
  8700  07BC  2FBE               	goto	u5021
  8701  07BD  2FBF               	goto	u5020
  8702  07BE                     u5021:
  8703  07BE  2FC9               	goto	l416
  8704  07BF                     u5020:
  8705  07BF                     l6876:
  8706  07BF  30FE               	movlw	254
  8707  07C0  0232               	subwf	fifo_alinharPrint@aux,w
  8708  07C1  1803               	skipnc
  8709  07C2  2FC4               	goto	u5031
  8710  07C3  2FC5               	goto	u5030
  8711  07C4                     u5031:
  8712  07C4  2FC9               	goto	l416
  8713  07C5                     u5030:
  8714  07C5                     l6878:
  8715                           
  8716                           ;fifo.c: 498:             cont += 2;
  8717  07C5  3002               	movlw	2
  8718  07C6  00AD               	movwf	??_fifo_alinharPrint
  8719  07C7  082D               	movf	??_fifo_alinharPrint,w
  8720  07C8  07B0               	addwf	fifo_alinharPrint@cont,f
  8721  07C9                     l416:
  8722                           
  8723                           ;fifo.c: 500:         if( aux == 0xFE )
  8724  07C9  30FE               	movlw	254
  8725  07CA  0632               	xorwf	fifo_alinharPrint@aux,w
  8726  07CB  1D03               	btfss	3,2
  8727  07CC  2FCE               	goto	u5041
  8728  07CD  2FCF               	goto	u5040
  8729  07CE                     u5041:
  8730  07CE  2FE1               	goto	l6882
  8731  07CF                     u5040:
  8732  07CF                     l6880:
  8733                           
  8734                           ;fifo.c: 501:             cont += dignum_tam( aux )+1;
  8735  07CF  0832               	movf	fifo_alinharPrint@aux,w
  8736  07D0  00AD               	movwf	??_fifo_alinharPrint
  8737  07D1  01AE               	clrf	??_fifo_alinharPrint+1
  8738  07D2  082D               	movf	??_fifo_alinharPrint,w
  8739  07D3  00A9               	movwf	dignum_tam@num
  8740  07D4  082E               	movf	??_fifo_alinharPrint+1,w
  8741  07D5  00AA               	movwf	dignum_tam@num+1
  8742  07D6  160A  158A  2384  120A  118A  	fcall	_dignum_tam
  8743  07DB  3E01               	addlw	1
  8744  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  8745  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  8746  07DE  00AF               	movwf	??_fifo_alinharPrint+2
  8747  07DF  082F               	movf	??_fifo_alinharPrint+2,w
  8748  07E0  07B0               	addwf	fifo_alinharPrint@cont,f
  8749  07E1                     l6882:
  8750                           
  8751                           ;fifo.c: 503:         if( cont > 20 )
  8752  07E1  3015               	movlw	21
  8753  07E2  0230               	subwf	fifo_alinharPrint@cont,w
  8754  07E3  1C03               	skipc
  8755  07E4  2FE6               	goto	u5051
  8756  07E5  2FE7               	goto	u5050
  8757  07E6                     u5051:
  8758  07E6  2FE8               	goto	l6888
  8759  07E7                     u5050:
  8760  07E7  2FEF               	goto	l420
  8761  07E8                     l6888:
  8762                           
  8763                           ;fifo.c: 508:             ind_print = i;
  8764  07E8  0831               	movf	fifo_alinharPrint@i,w
  8765  07E9  00AD               	movwf	??_fifo_alinharPrint
  8766  07EA  082D               	movf	??_fifo_alinharPrint,w
  8767  07EB  00EC               	movwf	_ind_print
  8768  07EC                     l6890:
  8769                           
  8770                           ;fifo.c: 509:     }
  8771  07EC  3001               	movlw	1
  8772  07ED  02B1               	subwf	fifo_alinharPrint@i,f
  8773  07EE  2F74               	goto	l6858
  8774  07EF                     l420:
  8775  07EF  0008               	return
  8776  07F0                     __end_of_fifo_alinharPrint:
  8777                           
  8778                           	psect	text42
  8779  1B84                     __ptext42:	
  8780 ;; *************** function _dignum_tam *****************
  8781 ;; Defined at:
  8782 ;;		line 470 in file "fifo.c"
  8783 ;; Parameters:    Size  Location     Type
  8784 ;;  num             2    9[BANK0 ] int 
  8785 ;; Auto vars:     Size  Location     Type
  8786 ;;  tam             1   12[BANK0 ] unsigned char 
  8787 ;; Return value:  Size  Location     Type
  8788 ;;                  1    wreg      unsigned char 
  8789 ;; Registers used:
  8790 ;;		wreg, status,2, status,0, pclath, cstack
  8791 ;; Tracked objects:
  8792 ;;		On entry : 0/0
  8793 ;;		On exit  : 0/0
  8794 ;;		Unchanged: 0/0
  8795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8796 ;;      Params:         0       2       0       0       0
  8797 ;;      Locals:         0       1       0       0       0
  8798 ;;      Temps:          0       1       0       0       0
  8799 ;;      Totals:         0       4       0       0       0
  8800 ;;Total ram usage:        4 bytes
  8801 ;; Hardware stack levels used:    1
  8802 ;; Hardware stack levels required when called:    3
  8803 ;; This function calls:
  8804 ;;		___awdiv
  8805 ;; This function is called by:
  8806 ;;		_fifo_alinharPrint
  8807 ;;		_printExec
  8808 ;; This function uses a non-reentrant model
  8809 ;;
  8810                           
  8811                           
  8812                           ;psect for function _dignum_tam
  8813  1B84                     _dignum_tam:
  8814  1B84                     l6588:	
  8815                           ;incstack = 0
  8816                           ; Regs used in _dignum_tam: [wreg+status,2+status,0+pclath+cstack]
  8817                           
  8818                           
  8819                           ;fifo.c: 470: unsigned char dignum_tam(int num);fifo.c: 471: {;fifo.c: 472:     unsigned
      +                           char tam = 0;
  8820  1B84  1283               	bcf	3,5	;RP0=0, select bank0
  8821  1B85  1303               	bcf	3,6	;RP1=0, select bank0
  8822  1B86  01AC               	clrf	dignum_tam@tam
  8823                           
  8824                           ;fifo.c: 474:     while(num != 0)
  8825  1B87  2B9F               	goto	l6594
  8826  1B88                     l6590:
  8827                           
  8828                           ;fifo.c: 475:     {;fifo.c: 476:         num /= 10;
  8829  1B88  300A               	movlw	10
  8830  1B89  00A0               	movwf	___awdiv@divisor
  8831  1B8A  3000               	movlw	0
  8832  1B8B  00A1               	movwf	___awdiv@divisor+1
  8833  1B8C  082A               	movf	dignum_tam@num+1,w
  8834  1B8D  00A3               	movwf	___awdiv@dividend+1
  8835  1B8E  0829               	movf	dignum_tam@num,w
  8836  1B8F  00A2               	movwf	___awdiv@dividend
  8837  1B90  160A  118A  25ED  160A  158A  	fcall	___awdiv
  8838  1B95  1283               	bcf	3,5	;RP0=0, select bank0
  8839  1B96  1303               	bcf	3,6	;RP1=0, select bank0
  8840  1B97  0821               	movf	?___awdiv+1,w
  8841  1B98  00AA               	movwf	dignum_tam@num+1
  8842  1B99  0820               	movf	?___awdiv,w
  8843  1B9A  00A9               	movwf	dignum_tam@num
  8844  1B9B                     l6592:
  8845                           
  8846                           ;fifo.c: 477:         tam++;
  8847  1B9B  3001               	movlw	1
  8848  1B9C  00AB               	movwf	??_dignum_tam
  8849  1B9D  082B               	movf	??_dignum_tam,w
  8850  1B9E  07AC               	addwf	dignum_tam@tam,f
  8851  1B9F                     l6594:
  8852                           
  8853                           ;fifo.c: 474:     while(num != 0)
  8854  1B9F  0829               	movf	dignum_tam@num,w
  8855  1BA0  042A               	iorwf	dignum_tam@num+1,w
  8856  1BA1  1D03               	btfss	3,2
  8857  1BA2  2BA4               	goto	u4571
  8858  1BA3  2BA5               	goto	u4570
  8859  1BA4                     u4571:
  8860  1BA4  2B88               	goto	l6590
  8861  1BA5                     u4570:
  8862  1BA5                     l6596:
  8863                           
  8864                           ;fifo.c: 479:     return ( tam );
  8865  1BA5  082C               	movf	dignum_tam@tam,w
  8866  1BA6                     l409:
  8867  1BA6  0008               	return
  8868  1BA7                     __end_of_dignum_tam:
  8869                           
  8870                           	psect	text43
  8871  15ED                     __ptext43:	
  8872 ;; *************** function ___awdiv *****************
  8873 ;; Defined at:
  8874 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\awdiv.c"
  8875 ;; Parameters:    Size  Location     Type
  8876 ;;  divisor         2    0[BANK0 ] int 
  8877 ;;  dividend        2    2[BANK0 ] int 
  8878 ;; Auto vars:     Size  Location     Type
  8879 ;;  quotient        2    7[BANK0 ] int 
  8880 ;;  sign            1    6[BANK0 ] unsigned char 
  8881 ;;  counter         1    5[BANK0 ] unsigned char 
  8882 ;; Return value:  Size  Location     Type
  8883 ;;                  2    0[BANK0 ] int 
  8884 ;; Registers used:
  8885 ;;		wreg, status,2, status,0
  8886 ;; Tracked objects:
  8887 ;;		On entry : 0/0
  8888 ;;		On exit  : 0/0
  8889 ;;		Unchanged: 0/0
  8890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8891 ;;      Params:         0       4       0       0       0
  8892 ;;      Locals:         0       4       0       0       0
  8893 ;;      Temps:          0       1       0       0       0
  8894 ;;      Totals:         0       9       0       0       0
  8895 ;;Total ram usage:        9 bytes
  8896 ;; Hardware stack levels used:    1
  8897 ;; Hardware stack levels required when called:    2
  8898 ;; This function calls:
  8899 ;;		Nothing
  8900 ;; This function is called by:
  8901 ;;		_dispLCD_num
  8902 ;;		_fifo_print
  8903 ;;		_dignum_tam
  8904 ;; This function uses a non-reentrant model
  8905 ;;
  8906                           
  8907                           
  8908                           ;psect for function ___awdiv
  8909  15ED                     ___awdiv:
  8910  15ED                     l6494:	
  8911                           ;incstack = 0
  8912                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  8913                           
  8914  15ED  1283               	bcf	3,5	;RP0=0, select bank0
  8915  15EE  1303               	bcf	3,6	;RP1=0, select bank0
  8916  15EF  01A6               	clrf	___awdiv@sign
  8917  15F0                     l6496:
  8918  15F0  1FA1               	btfss	___awdiv@divisor+1,7
  8919  15F1  2DF3               	goto	u4451
  8920  15F2  2DF4               	goto	u4450
  8921  15F3                     u4451:
  8922  15F3  2DFB               	goto	l6502
  8923  15F4                     u4450:
  8924  15F4                     l6498:
  8925  15F4  09A0               	comf	___awdiv@divisor,f
  8926  15F5  09A1               	comf	___awdiv@divisor+1,f
  8927  15F6  0AA0               	incf	___awdiv@divisor,f
  8928  15F7  1903               	skipnz
  8929  15F8  0AA1               	incf	___awdiv@divisor+1,f
  8930  15F9                     l6500:
  8931  15F9  01A6               	clrf	___awdiv@sign
  8932  15FA  0AA6               	incf	___awdiv@sign,f
  8933  15FB                     l6502:
  8934  15FB  1FA3               	btfss	___awdiv@dividend+1,7
  8935  15FC  2DFE               	goto	u4461
  8936  15FD  2DFF               	goto	u4460
  8937  15FE                     u4461:
  8938  15FE  2E08               	goto	l6508
  8939  15FF                     u4460:
  8940  15FF                     l6504:
  8941  15FF  09A2               	comf	___awdiv@dividend,f
  8942  1600  09A3               	comf	___awdiv@dividend+1,f
  8943  1601  0AA2               	incf	___awdiv@dividend,f
  8944  1602  1903               	skipnz
  8945  1603  0AA3               	incf	___awdiv@dividend+1,f
  8946  1604                     l6506:
  8947  1604  3001               	movlw	1
  8948  1605  00A4               	movwf	??___awdiv
  8949  1606  0824               	movf	??___awdiv,w
  8950  1607  06A6               	xorwf	___awdiv@sign,f
  8951  1608                     l6508:
  8952  1608  01A7               	clrf	___awdiv@quotient
  8953  1609  01A8               	clrf	___awdiv@quotient+1
  8954  160A                     l6510:
  8955  160A  0820               	movf	___awdiv@divisor,w
  8956  160B  0421               	iorwf	___awdiv@divisor+1,w
  8957  160C  1903               	btfsc	3,2
  8958  160D  2E0F               	goto	u4471
  8959  160E  2E10               	goto	u4470
  8960  160F                     u4471:
  8961  160F  2E47               	goto	l6530
  8962  1610                     u4470:
  8963  1610                     l6512:
  8964  1610  01A5               	clrf	___awdiv@counter
  8965  1611  0AA5               	incf	___awdiv@counter,f
  8966  1612  2E1E               	goto	l6518
  8967  1613                     l6514:
  8968  1613  3001               	movlw	1
  8969  1614                     u4485:
  8970  1614  1003               	clrc
  8971  1615  0DA0               	rlf	___awdiv@divisor,f
  8972  1616  0DA1               	rlf	___awdiv@divisor+1,f
  8973  1617  3EFF               	addlw	-1
  8974  1618  1D03               	skipz
  8975  1619  2E14               	goto	u4485
  8976  161A                     l6516:
  8977  161A  3001               	movlw	1
  8978  161B  00A4               	movwf	??___awdiv
  8979  161C  0824               	movf	??___awdiv,w
  8980  161D  07A5               	addwf	___awdiv@counter,f
  8981  161E                     l6518:
  8982  161E  1FA1               	btfss	___awdiv@divisor+1,7
  8983  161F  2E21               	goto	u4491
  8984  1620  2E22               	goto	u4490
  8985  1621                     u4491:
  8986  1621  2E13               	goto	l6514
  8987  1622                     u4490:
  8988  1622                     l6520:
  8989  1622  3001               	movlw	1
  8990  1623                     u4505:
  8991  1623  1003               	clrc
  8992  1624  0DA7               	rlf	___awdiv@quotient,f
  8993  1625  0DA8               	rlf	___awdiv@quotient+1,f
  8994  1626  3EFF               	addlw	-1
  8995  1627  1D03               	skipz
  8996  1628  2E23               	goto	u4505
  8997  1629  0821               	movf	___awdiv@divisor+1,w
  8998  162A  0223               	subwf	___awdiv@dividend+1,w
  8999  162B  1D03               	skipz
  9000  162C  2E2F               	goto	u4515
  9001  162D  0820               	movf	___awdiv@divisor,w
  9002  162E  0222               	subwf	___awdiv@dividend,w
  9003  162F                     u4515:
  9004  162F  1C03               	skipc
  9005  1630  2E32               	goto	u4511
  9006  1631  2E33               	goto	u4510
  9007  1632                     u4511:
  9008  1632  2E3A               	goto	l6526
  9009  1633                     u4510:
  9010  1633                     l6522:
  9011  1633  0820               	movf	___awdiv@divisor,w
  9012  1634  02A2               	subwf	___awdiv@dividend,f
  9013  1635  0821               	movf	___awdiv@divisor+1,w
  9014  1636  1C03               	skipc
  9015  1637  03A3               	decf	___awdiv@dividend+1,f
  9016  1638  02A3               	subwf	___awdiv@dividend+1,f
  9017  1639                     l6524:
  9018  1639  1427               	bsf	___awdiv@quotient,0
  9019  163A                     l6526:
  9020  163A  3001               	movlw	1
  9021  163B                     u4525:
  9022  163B  1003               	clrc
  9023  163C  0CA1               	rrf	___awdiv@divisor+1,f
  9024  163D  0CA0               	rrf	___awdiv@divisor,f
  9025  163E  3EFF               	addlw	-1
  9026  163F  1D03               	skipz
  9027  1640  2E3B               	goto	u4525
  9028  1641                     l6528:
  9029  1641  3001               	movlw	1
  9030  1642  02A5               	subwf	___awdiv@counter,f
  9031  1643  1D03               	btfss	3,2
  9032  1644  2E46               	goto	u4531
  9033  1645  2E47               	goto	u4530
  9034  1646                     u4531:
  9035  1646  2E22               	goto	l6520
  9036  1647                     u4530:
  9037  1647                     l6530:
  9038  1647  0826               	movf	___awdiv@sign,w
  9039  1648  1903               	btfsc	3,2
  9040  1649  2E4B               	goto	u4541
  9041  164A  2E4C               	goto	u4540
  9042  164B                     u4541:
  9043  164B  2E51               	goto	l6534
  9044  164C                     u4540:
  9045  164C                     l6532:
  9046  164C  09A7               	comf	___awdiv@quotient,f
  9047  164D  09A8               	comf	___awdiv@quotient+1,f
  9048  164E  0AA7               	incf	___awdiv@quotient,f
  9049  164F  1903               	skipnz
  9050  1650  0AA8               	incf	___awdiv@quotient+1,f
  9051  1651                     l6534:
  9052  1651  0828               	movf	___awdiv@quotient+1,w
  9053  1652  00A1               	movwf	?___awdiv+1
  9054  1653  0827               	movf	___awdiv@quotient,w
  9055  1654  00A0               	movwf	?___awdiv
  9056  1655                     l1337:
  9057  1655  0008               	return
  9058  1656                     __end_of___awdiv:
  9059                           
  9060                           	psect	text44
  9061  1753                     __ptext44:	
  9062 ;; *************** function _codifica *****************
  9063 ;; Defined at:
  9064 ;;		line 200 in file "fifo.c"
  9065 ;; Parameters:    Size  Location     Type
  9066 ;;  tipo            1    wreg     unsigned char 
  9067 ;;  dado            2    0[BANK0 ] PTR unsigned char 
  9068 ;;		 -> fifo_add_control@c(1), fifo_add_tempo@t(1), fifo_add@passo(1), RAM(512), 
  9069 ;; Auto vars:     Size  Location     Type
  9070 ;;  tipo            1    4[BANK0 ] unsigned char 
  9071 ;; Return value:  Size  Location     Type
  9072 ;;                  1    wreg      void 
  9073 ;; Registers used:
  9074 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9075 ;; Tracked objects:
  9076 ;;		On entry : 0/0
  9077 ;;		On exit  : 0/0
  9078 ;;		Unchanged: 0/0
  9079 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9080 ;;      Params:         0       2       0       0       0
  9081 ;;      Locals:         0       1       0       0       0
  9082 ;;      Temps:          0       2       0       0       0
  9083 ;;      Totals:         0       5       0       0       0
  9084 ;;Total ram usage:        5 bytes
  9085 ;; Hardware stack levels used:    1
  9086 ;; Hardware stack levels required when called:    2
  9087 ;; This function calls:
  9088 ;;		Nothing
  9089 ;; This function is called by:
  9090 ;;		_fifo_delete
  9091 ;;		_fifo_add
  9092 ;;		_fifo_add_tempo
  9093 ;;		_fifo_add_control
  9094 ;; This function uses a non-reentrant model
  9095 ;;
  9096                           
  9097                           
  9098                           ;psect for function _codifica
  9099  1753                     _codifica:
  9100                           
  9101                           ;incstack = 0
  9102                           ; Regs used in _codifica: [wreg-fsr0h+status,2+status,0]
  9103                           ;codifica@tipo stored from wreg
  9104  1753  1283               	bcf	3,5	;RP0=0, select bank0
  9105  1754  1303               	bcf	3,6	;RP1=0, select bank0
  9106  1755  00A4               	movwf	codifica@tipo
  9107  1756                     l6810:
  9108                           
  9109                           ;fifo.c: 200: void codifica( unsigned char tipo, unsigned char *dado );fifo.c: 201: {;fi
      +                          fo.c: 202:     switch( tipo )
  9110  1756  2FEC               	goto	l6840
  9111  1757                     l6812:
  9112  1757  0820               	movf	codifica@dado,w
  9113  1758  0084               	movwf	4
  9114  1759  1783               	bsf	3,7
  9115  175A  1C21               	btfss	codifica@dado+1,0
  9116  175B  1383               	bcf	3,7
  9117  175C  0800               	movf	0,w
  9118  175D  1D03               	btfss	3,2
  9119  175E  2F60               	goto	u4971
  9120  175F  2F61               	goto	u4970
  9121  1760                     u4971:
  9122  1760  2FFF               	goto	l306
  9123  1761                     u4970:
  9124  1761                     l6814:
  9125                           
  9126                           ;fifo.c: 205:                        *dado = 254;
  9127  1761  30FE               	movlw	254
  9128  1762  00A2               	movwf	??_codifica
  9129  1763  0820               	movf	codifica@dado,w
  9130  1764  0084               	movwf	4
  9131  1765  1783               	bsf	3,7
  9132  1766  1C21               	btfss	codifica@dado+1,0
  9133  1767  1383               	bcf	3,7
  9134  1768  0822               	movf	??_codifica,w
  9135  1769  0080               	movwf	0
  9136  176A  2FFF               	goto	l306
  9137  176B                     l6816:
  9138  176B  3064               	movlw	100
  9139  176C  00A2               	movwf	??_codifica
  9140  176D  0820               	movf	codifica@dado,w
  9141  176E  0084               	movwf	4
  9142  176F  1783               	bsf	3,7
  9143  1770  1C21               	btfss	codifica@dado+1,0
  9144  1771  1383               	bcf	3,7
  9145  1772  0822               	movf	??_codifica,w
  9146  1773  0780               	addwf	0,f
  9147  1774  2FFF               	goto	l306
  9148  1775                     l6818:
  9149  1775  30DD               	movlw	221
  9150  1776  00A2               	movwf	??_codifica
  9151  1777  0820               	movf	codifica@dado,w
  9152  1778  0084               	movwf	4
  9153  1779  1783               	bsf	3,7
  9154  177A  1C21               	btfss	codifica@dado+1,0
  9155  177B  1383               	bcf	3,7
  9156  177C  0822               	movf	??_codifica,w
  9157  177D  0080               	movwf	0
  9158  177E  2FFF               	goto	l306
  9159  177F                     l6820:
  9160  177F  30DE               	movlw	222
  9161  1780  00A2               	movwf	??_codifica
  9162  1781  0820               	movf	codifica@dado,w
  9163  1782  0084               	movwf	4
  9164  1783  1783               	bsf	3,7
  9165  1784  1C21               	btfss	codifica@dado+1,0
  9166  1785  1383               	bcf	3,7
  9167  1786  0822               	movf	??_codifica,w
  9168  1787  0080               	movwf	0
  9169  1788  2FFF               	goto	l306
  9170  1789                     l6822:
  9171  1789  30DF               	movlw	223
  9172  178A  00A2               	movwf	??_codifica
  9173  178B  0820               	movf	codifica@dado,w
  9174  178C  0084               	movwf	4
  9175  178D  1783               	bsf	3,7
  9176  178E  1C21               	btfss	codifica@dado+1,0
  9177  178F  1383               	bcf	3,7
  9178  1790  0822               	movf	??_codifica,w
  9179  1791  0080               	movwf	0
  9180  1792  2FFF               	goto	l306
  9181  1793                     l6824:
  9182  1793  30E0               	movlw	224
  9183  1794  00A2               	movwf	??_codifica
  9184  1795  0820               	movf	codifica@dado,w
  9185  1796  0084               	movwf	4
  9186  1797  1783               	bsf	3,7
  9187  1798  1C21               	btfss	codifica@dado+1,0
  9188  1799  1383               	bcf	3,7
  9189  179A  0822               	movf	??_codifica,w
  9190  179B  0080               	movwf	0
  9191  179C  2FFF               	goto	l306
  9192  179D                     l6826:
  9193  179D  30E1               	movlw	225
  9194  179E  00A2               	movwf	??_codifica
  9195  179F  0820               	movf	codifica@dado,w
  9196  17A0  0084               	movwf	4
  9197  17A1  1783               	bsf	3,7
  9198  17A2  1C21               	btfss	codifica@dado+1,0
  9199  17A3  1383               	bcf	3,7
  9200  17A4  0822               	movf	??_codifica,w
  9201  17A5  0080               	movwf	0
  9202  17A6  2FFF               	goto	l306
  9203  17A7                     l6828:
  9204  17A7  30E2               	movlw	226
  9205  17A8  00A2               	movwf	??_codifica
  9206  17A9  0820               	movf	codifica@dado,w
  9207  17AA  0084               	movwf	4
  9208  17AB  1783               	bsf	3,7
  9209  17AC  1C21               	btfss	codifica@dado+1,0
  9210  17AD  1383               	bcf	3,7
  9211  17AE  0822               	movf	??_codifica,w
  9212  17AF  0080               	movwf	0
  9213  17B0  2FFF               	goto	l306
  9214  17B1                     l6830:
  9215  17B1  30E3               	movlw	227
  9216  17B2  00A2               	movwf	??_codifica
  9217  17B3  0820               	movf	codifica@dado,w
  9218  17B4  0084               	movwf	4
  9219  17B5  1783               	bsf	3,7
  9220  17B6  1C21               	btfss	codifica@dado+1,0
  9221  17B7  1383               	bcf	3,7
  9222  17B8  0822               	movf	??_codifica,w
  9223  17B9  0080               	movwf	0
  9224  17BA  2FFF               	goto	l306
  9225  17BB                     l6832:
  9226  17BB  30E4               	movlw	228
  9227  17BC  00A2               	movwf	??_codifica
  9228  17BD  0820               	movf	codifica@dado,w
  9229  17BE  0084               	movwf	4
  9230  17BF  1783               	bsf	3,7
  9231  17C0  1C21               	btfss	codifica@dado+1,0
  9232  17C1  1383               	bcf	3,7
  9233  17C2  0822               	movf	??_codifica,w
  9234  17C3  0080               	movwf	0
  9235  17C4  2FFF               	goto	l306
  9236  17C5                     l6836:
  9237  17C5  0820               	movf	codifica@dado,w
  9238  17C6  0084               	movwf	4
  9239  17C7  1783               	bsf	3,7
  9240  17C8  1C21               	btfss	codifica@dado+1,0
  9241  17C9  1383               	bcf	3,7
  9242  17CA  0800               	movf	0,w
  9243  17CB  00A2               	movwf	??_codifica
  9244  17CC  01A3               	clrf	??_codifica+1
  9245                           
  9246                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9247                           ; Switch size 1, requested type "simple"
  9248                           ; Number of cases is 1, Range of values is 0 to 0
  9249                           ; switch strategies available:
  9250                           ; Name         Instructions Cycles
  9251                           ; simple_byte            4     3 (average)
  9252                           ; direct_byte           11     8 (fixed)
  9253                           ; jumptable            260     6 (fixed)
  9254                           ;	Chosen strategy is simple_byte
  9255  17CD  0823               	movf	??_codifica+1,w
  9256  17CE  3A00               	xorlw	0	; case 0
  9257  17CF  1903               	skipnz
  9258  17D0  2FD2               	goto	l8710
  9259  17D1  2FFF               	goto	l306
  9260  17D2                     l8710:
  9261                           
  9262                           ; Switch size 1, requested type "simple"
  9263                           ; Number of cases is 8, Range of values is 65 to 100
  9264                           ; switch strategies available:
  9265                           ; Name         Instructions Cycles
  9266                           ; simple_byte           25    13 (average)
  9267                           ; direct_byte          119    11 (fixed)
  9268                           ; jumptable            263     9 (fixed)
  9269                           ;	Chosen strategy is simple_byte
  9270  17D2  0822               	movf	??_codifica,w
  9271  17D3  3A41               	xorlw	65	; case 65
  9272  17D4  1903               	skipnz
  9273  17D5  2F75               	goto	l6818
  9274  17D6  3A03               	xorlw	3	; case 66
  9275  17D7  1903               	skipnz
  9276  17D8  2F89               	goto	l6822
  9277  17D9  3A01               	xorlw	1	; case 67
  9278  17DA  1903               	skipnz
  9279  17DB  2F9D               	goto	l6826
  9280  17DC  3A07               	xorlw	7	; case 68
  9281  17DD  1903               	skipnz
  9282  17DE  2FB1               	goto	l6830
  9283  17DF  3A25               	xorlw	37	; case 97
  9284  17E0  1903               	skipnz
  9285  17E1  2F7F               	goto	l6820
  9286  17E2  3A03               	xorlw	3	; case 98
  9287  17E3  1903               	skipnz
  9288  17E4  2F93               	goto	l6824
  9289  17E5  3A01               	xorlw	1	; case 99
  9290  17E6  1903               	skipnz
  9291  17E7  2FA7               	goto	l6828
  9292  17E8  3A07               	xorlw	7	; case 100
  9293  17E9  1903               	skipnz
  9294  17EA  2FBB               	goto	l6832
  9295  17EB  2FFF               	goto	l306
  9296  17EC                     l6840:
  9297  17EC  0824               	movf	codifica@tipo,w
  9298  17ED  00A2               	movwf	??_codifica
  9299  17EE  01A3               	clrf	??_codifica+1
  9300                           
  9301                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9302                           ; Switch size 1, requested type "simple"
  9303                           ; Number of cases is 1, Range of values is 0 to 0
  9304                           ; switch strategies available:
  9305                           ; Name         Instructions Cycles
  9306                           ; simple_byte            4     3 (average)
  9307                           ; direct_byte           11     8 (fixed)
  9308                           ; jumptable            260     6 (fixed)
  9309                           ;	Chosen strategy is simple_byte
  9310  17EF  0823               	movf	??_codifica+1,w
  9311  17F0  3A00               	xorlw	0	; case 0
  9312  17F1  1903               	skipnz
  9313  17F2  2FF4               	goto	l8712
  9314  17F3  2FFF               	goto	l306
  9315  17F4                     l8712:
  9316                           
  9317                           ; Switch size 1, requested type "simple"
  9318                           ; Number of cases is 3, Range of values is 97 to 116
  9319                           ; switch strategies available:
  9320                           ; Name         Instructions Cycles
  9321                           ; simple_byte           10     6 (average)
  9322                           ; direct_byte           71    11 (fixed)
  9323                           ; jumptable            263     9 (fixed)
  9324                           ;	Chosen strategy is simple_byte
  9325  17F4  0822               	movf	??_codifica,w
  9326  17F5  3A61               	xorlw	97	; case 97
  9327  17F6  1903               	skipnz
  9328  17F7  2FC5               	goto	l6836
  9329  17F8  3A11               	xorlw	17	; case 112
  9330  17F9  1903               	skipnz
  9331  17FA  2F57               	goto	l6812
  9332  17FB  3A04               	xorlw	4	; case 116
  9333  17FC  1903               	skipnz
  9334  17FD  2F6B               	goto	l6816
  9335  17FE  2FFF               	goto	l306
  9336  17FF                     l306:
  9337  17FF  0008               	return
  9338  1800                     __end_of_codifica:
  9339                           
  9340                           	psect	text45
  9341  1F7C                     __ptext45:	
  9342 ;; *************** function _dispLCD_str *****************
  9343 ;; Defined at:
  9344 ;;		line 249 in file "dispLCD4vias.c"
  9345 ;; Parameters:    Size  Location     Type
  9346 ;;  str             2    8[BANK0 ] PTR const unsigned char 
  9347 ;;		 -> STR_16(78), STR_15(62), STR_4(83), 
  9348 ;; Auto vars:     Size  Location     Type
  9349 ;;  c               1   12[BANK0 ] unsigned char 
  9350 ;;  lin             1   11[BANK0 ] unsigned char 
  9351 ;; Return value:  Size  Location     Type
  9352 ;;                  1    wreg      void 
  9353 ;; Registers used:
  9354 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9355 ;; Tracked objects:
  9356 ;;		On entry : 0/0
  9357 ;;		On exit  : 0/0
  9358 ;;		Unchanged: 0/0
  9359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9360 ;;      Params:         0       2       0       0       0
  9361 ;;      Locals:         0       2       0       0       0
  9362 ;;      Temps:          0       1       0       0       0
  9363 ;;      Totals:         0       5       0       0       0
  9364 ;;Total ram usage:        5 bytes
  9365 ;; Hardware stack levels used:    1
  9366 ;; Hardware stack levels required when called:    4
  9367 ;; This function calls:
  9368 ;;		_dispLCD_dataReg
  9369 ;;		_dispLCD_lincol
  9370 ;; This function is called by:
  9371 ;;		_main
  9372 ;; This function uses a non-reentrant model
  9373 ;;
  9374                           
  9375                           
  9376                           ;psect for function _dispLCD_str
  9377  1F7C                     _dispLCD_str:
  9378  1F7C                     l7062:	
  9379                           ;incstack = 0
  9380                           ; Regs used in _dispLCD_str: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9381                           
  9382                           
  9383                           ;dispLCD4vias.c: 249: void dispLCD_str( const char * str );dispLCD4vias.c: 250: {;dispLC
      +                          D4vias.c: 251:     char lin = 0;
  9384  1F7C  1283               	bcf	3,5	;RP0=0, select bank0
  9385  1F7D  1303               	bcf	3,6	;RP1=0, select bank0
  9386  1F7E  01AB               	clrf	dispLCD_str@lin
  9387  1F7F                     l7064:
  9388                           
  9389                           ;dispLCD4vias.c: 252:     char c;;dispLCD4vias.c: 253:     dispLCD_lincol(0,0);
  9390  1F7F  01A3               	clrf	dispLCD_lincol@col
  9391  1F80  3000               	movlw	0
  9392  1F81  160A  158A  25BB  160A  158A  	fcall	_dispLCD_lincol
  9393                           
  9394                           ;dispLCD4vias.c: 255:     while( c = *str )
  9395  1F86  2FA7               	goto	l7074
  9396  1F87                     l7066:
  9397                           
  9398                           ;dispLCD4vias.c: 256:     {;dispLCD4vias.c: 257:         if( c != '\n' )
  9399  1F87  300A               	movlw	10
  9400  1F88  062C               	xorwf	dispLCD_str@c,w
  9401  1F89  1903               	btfsc	3,2
  9402  1F8A  2F8C               	goto	u5271
  9403  1F8B  2F8D               	goto	u5270
  9404  1F8C                     u5271:
  9405  1F8C  2F94               	goto	l7070
  9406  1F8D                     u5270:
  9407  1F8D                     l7068:
  9408                           
  9409                           ;dispLCD4vias.c: 258:             dispLCD_dataReg( c );
  9410  1F8D  082C               	movf	dispLCD_str@c,w
  9411  1F8E  160A  158A  258A  160A  158A  	fcall	_dispLCD_dataReg
  9412  1F93  2F9F               	goto	l7072
  9413  1F94                     l7070:
  9414                           
  9415                           ;dispLCD4vias.c: 260:             dispLCD_lincol(++lin,0);
  9416  1F94  01A3               	clrf	dispLCD_lincol@col
  9417  1F95  3001               	movlw	1
  9418  1F96  00AA               	movwf	??_dispLCD_str
  9419  1F97  082A               	movf	??_dispLCD_str,w
  9420  1F98  07AB               	addwf	dispLCD_str@lin,f
  9421  1F99  082B               	movf	dispLCD_str@lin,w
  9422  1F9A  160A  158A  25BB  160A  158A  	fcall	_dispLCD_lincol
  9423  1F9F                     l7072:
  9424                           
  9425                           ;dispLCD4vias.c: 261:         ++str;
  9426  1F9F  3001               	movlw	1
  9427  1FA0  1283               	bcf	3,5	;RP0=0, select bank0
  9428  1FA1  1303               	bcf	3,6	;RP1=0, select bank0
  9429  1FA2  07A8               	addwf	dispLCD_str@str,f
  9430  1FA3  1803               	skipnc
  9431  1FA4  0AA9               	incf	dispLCD_str@str+1,f
  9432  1FA5  3000               	movlw	0
  9433  1FA6  07A9               	addwf	dispLCD_str@str+1,f
  9434  1FA7                     l7074:
  9435                           
  9436                           ;dispLCD4vias.c: 255:     while( c = *str )
  9437  1FA7  1283               	bcf	3,5	;RP0=0, select bank0
  9438  1FA8  1303               	bcf	3,6	;RP1=0, select bank0
  9439  1FA9  0829               	movf	dispLCD_str@str+1,w
  9440  1FAA  00FF               	movwf	btemp+1
  9441  1FAB  0828               	movf	dispLCD_str@str,w
  9442  1FAC  0084               	movwf	4
  9443  1FAD  160A  158A  2000  160A  158A  	fcall	stringtab
  9444  1FB2  00AA               	movwf	??_dispLCD_str
  9445  1FB3  082A               	movf	??_dispLCD_str,w
  9446  1FB4  00AC               	movwf	dispLCD_str@c
  9447  1FB5  082C               	movf	dispLCD_str@c,w
  9448  1FB6  1D03               	btfss	3,2
  9449  1FB7  2FB9               	goto	u5281
  9450  1FB8  2FBA               	goto	u5280
  9451  1FB9                     u5281:
  9452  1FB9  2F87               	goto	l7066
  9453  1FBA                     u5280:
  9454  1FBA                     l105:
  9455  1FBA  0008               	return
  9456  1FBB                     __end_of_dispLCD_str:
  9457                           
  9458                           	psect	text46
  9459  1D2A                     __ptext46:	
  9460 ;; *************** function _dispLCD_init *****************
  9461 ;; Defined at:
  9462 ;;		line 165 in file "dispLCD4vias.c"
  9463 ;; Parameters:    Size  Location     Type
  9464 ;;		None
  9465 ;; Auto vars:     Size  Location     Type
  9466 ;;		None
  9467 ;; Return value:  Size  Location     Type
  9468 ;;                  1    wreg      void 
  9469 ;; Registers used:
  9470 ;;		wreg, status,2, status,0, pclath, cstack
  9471 ;; Tracked objects:
  9472 ;;		On entry : 0/0
  9473 ;;		On exit  : 0/0
  9474 ;;		Unchanged: 0/0
  9475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9476 ;;      Params:         0       0       0       0       0
  9477 ;;      Locals:         0       0       0       0       0
  9478 ;;      Temps:          0       0       0       0       0
  9479 ;;      Totals:         0       0       0       0       0
  9480 ;;Total ram usage:        0 bytes
  9481 ;; Hardware stack levels used:    1
  9482 ;; Hardware stack levels required when called:    3
  9483 ;; This function calls:
  9484 ;;		_delay
  9485 ;;		_dispLCD_instReg
  9486 ;; This function is called by:
  9487 ;;		_main
  9488 ;; This function uses a non-reentrant model
  9489 ;;
  9490                           
  9491                           
  9492                           ;psect for function _dispLCD_init
  9493  1D2A                     _dispLCD_init:
  9494  1D2A                     l7022:	
  9495                           ;incstack = 0
  9496                           ; Regs used in _dispLCD_init: [wreg+status,2+status,0+pclath+cstack]
  9497                           
  9498                           
  9499                           ;dispLCD4vias.c: 167:     ANSELH = 0x00;
  9500  1D2A  1683               	bsf	3,5	;RP0=1, select bank3
  9501  1D2B  1703               	bsf	3,6	;RP1=1, select bank3
  9502  1D2C  0189               	clrf	9	;volatile
  9503  1D2D                     l7024:
  9504                           
  9505                           ;dispLCD4vias.c: 169:     TRISBbits.TRISB4 = 0;
  9506  1D2D  1683               	bsf	3,5	;RP0=1, select bank1
  9507  1D2E  1303               	bcf	3,6	;RP1=0, select bank1
  9508  1D2F  1206               	bcf	6,4	;volatile
  9509  1D30                     l7026:
  9510                           
  9511                           ;dispLCD4vias.c: 170:     TRISBbits.TRISB5 = 0;
  9512  1D30  1286               	bcf	6,5	;volatile
  9513  1D31                     l7028:
  9514                           
  9515                           ;dispLCD4vias.c: 172:     TRISBbits.TRISB0 = 0;
  9516  1D31  1006               	bcf	6,0	;volatile
  9517  1D32                     l7030:
  9518                           
  9519                           ;dispLCD4vias.c: 173:     TRISBbits.TRISB1 = 0;
  9520  1D32  1086               	bcf	6,1	;volatile
  9521  1D33                     l7032:
  9522                           
  9523                           ;dispLCD4vias.c: 174:     TRISBbits.TRISB2 = 0;
  9524  1D33  1106               	bcf	6,2	;volatile
  9525  1D34                     l7034:
  9526                           
  9527                           ;dispLCD4vias.c: 175:     TRISBbits.TRISB3 = 0;
  9528  1D34  1186               	bcf	6,3	;volatile
  9529  1D35                     l7036:
  9530                           
  9531                           ;dispLCD4vias.c: 177:     LCDbits.EN = 1;
  9532  1D35  1283               	bcf	3,5	;RP0=0, select bank0
  9533  1D36  1303               	bcf	3,6	;RP1=0, select bank0
  9534  1D37  1686               	bsf	6,5	;volatile
  9535  1D38                     l7038:
  9536                           
  9537                           ;dispLCD4vias.c: 178:     delay(5);
  9538  1D38  3005               	movlw	5
  9539  1D39  00A0               	movwf	delay@t
  9540  1D3A  3000               	movlw	0
  9541  1D3B  00A1               	movwf	delay@t+1
  9542  1D3C  160A  158A  22C7  160A  158A  	fcall	_delay
  9543  1D41                     l7040:
  9544                           
  9545                           ;dispLCD4vias.c: 179:     dispLCD_instReg( 0x20|0x00|0x08);
  9546  1D41  3028               	movlw	40
  9547  1D42  160A  118A  26D4  160A  158A  	fcall	_dispLCD_instReg
  9548  1D47                     l7042:
  9549                           
  9550                           ;dispLCD4vias.c: 180:     dispLCD_instReg( 0x08|0x04|0x00|0x00 );
  9551  1D47  300C               	movlw	12
  9552  1D48  160A  118A  26D4  160A  158A  	fcall	_dispLCD_instReg
  9553  1D4D                     l7044:
  9554                           
  9555                           ;dispLCD4vias.c: 181:     dispLCD_instReg( 0x01 );
  9556  1D4D  3001               	movlw	1
  9557  1D4E  160A  118A  26D4  160A  158A  	fcall	_dispLCD_instReg
  9558  1D53                     l7046:
  9559                           
  9560                           ;dispLCD4vias.c: 182:     dispLCD_instReg( 0x02 );
  9561  1D53  3002               	movlw	2
  9562  1D54  160A  118A  26D4  160A  158A  	fcall	_dispLCD_instReg
  9563  1D59                     l71:
  9564  1D59  0008               	return
  9565  1D5A                     __end_of_dispLCD_init:
  9566                           
  9567                           	psect	text47
  9568  19CD                     __ptext47:	
  9569 ;; *************** function _dispLCD_clr *****************
  9570 ;; Defined at:
  9571 ;;		line 243 in file "dispLCD4vias.c"
  9572 ;; Parameters:    Size  Location     Type
  9573 ;;		None
  9574 ;; Auto vars:     Size  Location     Type
  9575 ;;		None
  9576 ;; Return value:  Size  Location     Type
  9577 ;;                  1    wreg      void 
  9578 ;; Registers used:
  9579 ;;		wreg, status,2, status,0, pclath, cstack
  9580 ;; Tracked objects:
  9581 ;;		On entry : 0/0
  9582 ;;		On exit  : 0/0
  9583 ;;		Unchanged: 0/0
  9584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9585 ;;      Params:         0       0       0       0       0
  9586 ;;      Locals:         0       0       0       0       0
  9587 ;;      Temps:          0       0       0       0       0
  9588 ;;      Totals:         0       0       0       0       0
  9589 ;;Total ram usage:        0 bytes
  9590 ;; Hardware stack levels used:    1
  9591 ;; Hardware stack levels required when called:    3
  9592 ;; This function calls:
  9593 ;;		_dispLCD_instReg
  9594 ;; This function is called by:
  9595 ;;		_main
  9596 ;; This function uses a non-reentrant model
  9597 ;;
  9598                           
  9599                           
  9600                           ;psect for function _dispLCD_clr
  9601  19CD                     _dispLCD_clr:
  9602  19CD                     l7060:	
  9603                           ;incstack = 0
  9604                           ; Regs used in _dispLCD_clr: [wreg+status,2+status,0+pclath+cstack]
  9605                           
  9606                           
  9607                           ;dispLCD4vias.c: 245:     dispLCD_instReg(0x01);
  9608  19CD  3001               	movlw	1
  9609  19CE  160A  118A  26D4  160A  158A  	fcall	_dispLCD_instReg
  9610  19D3                     l97:
  9611  19D3  0008               	return
  9612  19D4                     __end_of_dispLCD_clr:
  9613                           
  9614                           	psect	text48
  9615  1F03                     __ptext48:	
  9616 ;; *************** function _dispLCD *****************
  9617 ;; Defined at:
  9618 ;;		line 186 in file "dispLCD4vias.c"
  9619 ;; Parameters:    Size  Location     Type
  9620 ;;  lin             1    8[BANK0 ] unsigned char 
  9621 ;;  col             1    9[BANK0 ] unsigned char 
  9622 ;;  str             2   10[BANK0 ] PTR const unsigned char 
  9623 ;;		 -> STR_21(21), STR_20(21), STR_19(21), STR_18(2), 
  9624 ;;		 -> STR_17(2), STR_14(21), STR_13(21), STR_12(21), 
  9625 ;;		 -> STR_11(21), STR_10(21), STR_9(8), STR_8(21), 
  9626 ;;		 -> STR_7(21), STR_6(21), STR_5(21), STR_3(21), 
  9627 ;;		 -> STR_2(2), STR_1(2), 
  9628 ;; Auto vars:     Size  Location     Type
  9629 ;;  pos             1   13[BANK0 ] unsigned char 
  9630 ;; Return value:  Size  Location     Type
  9631 ;;                  1    wreg      void 
  9632 ;; Registers used:
  9633 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9634 ;; Tracked objects:
  9635 ;;		On entry : 0/0
  9636 ;;		On exit  : 0/0
  9637 ;;		Unchanged: 0/0
  9638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9639 ;;      Params:         0       4       0       0       0
  9640 ;;      Locals:         0       1       0       0       0
  9641 ;;      Temps:          0       1       0       0       0
  9642 ;;      Totals:         0       6       0       0       0
  9643 ;;Total ram usage:        6 bytes
  9644 ;; Hardware stack levels used:    1
  9645 ;; Hardware stack levels required when called:    4
  9646 ;; This function calls:
  9647 ;;		_dispLCD_dataReg
  9648 ;;		_dispLCD_lincol
  9649 ;; This function is called by:
  9650 ;;		_main
  9651 ;; This function uses a non-reentrant model
  9652 ;;
  9653                           
  9654                           
  9655                           ;psect for function _dispLCD
  9656  1F03                     _dispLCD:
  9657  1F03                     l7048:	
  9658                           ;incstack = 0
  9659                           ; Regs used in _dispLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9660                           
  9661                           
  9662                           ;dispLCD4vias.c: 186: void dispLCD( unsigned char lin, unsigned char col, const char * s
      +                          tr );dispLCD4vias.c: 187: {;dispLCD4vias.c: 188:     char pos = col;
  9663  1F03  1283               	bcf	3,5	;RP0=0, select bank0
  9664  1F04  1303               	bcf	3,6	;RP1=0, select bank0
  9665  1F05  0829               	movf	dispLCD@col,w
  9666  1F06  00AC               	movwf	??_dispLCD
  9667  1F07  082C               	movf	??_dispLCD,w
  9668  1F08  00AD               	movwf	dispLCD@pos
  9669  1F09                     l7050:
  9670                           
  9671                           ;dispLCD4vias.c: 189:     dispLCD_lincol( lin, col );
  9672  1F09  0829               	movf	dispLCD@col,w
  9673  1F0A  00AC               	movwf	??_dispLCD
  9674  1F0B  082C               	movf	??_dispLCD,w
  9675  1F0C  00A3               	movwf	dispLCD_lincol@col
  9676  1F0D  0828               	movf	dispLCD@lin,w
  9677  1F0E  160A  158A  25BB  160A  158A  	fcall	_dispLCD_lincol
  9678                           
  9679                           ;dispLCD4vias.c: 191:     while( *str )
  9680  1F13  2F2E               	goto	l7058
  9681  1F14                     l7052:
  9682                           
  9683                           ;dispLCD4vias.c: 192:     {;dispLCD4vias.c: 193:         dispLCD_dataReg( *str );
  9684  1F14  082B               	movf	dispLCD@str+1,w
  9685  1F15  00FF               	movwf	btemp+1
  9686  1F16  082A               	movf	dispLCD@str,w
  9687  1F17  0084               	movwf	4
  9688  1F18  160A  158A  2000  160A  158A  	fcall	stringtab
  9689  1F1D  160A  158A  258A  160A  158A  	fcall	_dispLCD_dataReg
  9690  1F22                     l7054:
  9691                           
  9692                           ;dispLCD4vias.c: 194:         ++str;
  9693  1F22  3001               	movlw	1
  9694  1F23  1283               	bcf	3,5	;RP0=0, select bank0
  9695  1F24  1303               	bcf	3,6	;RP1=0, select bank0
  9696  1F25  07AA               	addwf	dispLCD@str,f
  9697  1F26  1803               	skipnc
  9698  1F27  0AAB               	incf	dispLCD@str+1,f
  9699  1F28  3000               	movlw	0
  9700  1F29  07AB               	addwf	dispLCD@str+1,f
  9701  1F2A                     l7056:
  9702                           
  9703                           ;dispLCD4vias.c: 195:         ++pos;
  9704  1F2A  3001               	movlw	1
  9705  1F2B  00AC               	movwf	??_dispLCD
  9706  1F2C  082C               	movf	??_dispLCD,w
  9707  1F2D  07AD               	addwf	dispLCD@pos,f
  9708  1F2E                     l7058:
  9709                           
  9710                           ;dispLCD4vias.c: 191:     while( *str )
  9711  1F2E  1283               	bcf	3,5	;RP0=0, select bank0
  9712  1F2F  1303               	bcf	3,6	;RP1=0, select bank0
  9713  1F30  082B               	movf	dispLCD@str+1,w
  9714  1F31  00FF               	movwf	btemp+1
  9715  1F32  082A               	movf	dispLCD@str,w
  9716  1F33  0084               	movwf	4
  9717  1F34  160A  158A  2000  160A  158A  	fcall	stringtab
  9718  1F39  3A00               	xorlw	0
  9719  1F3A  1D03               	skipz
  9720  1F3B  2F3D               	goto	u5261
  9721  1F3C  2F3E               	goto	u5260
  9722  1F3D                     u5261:
  9723  1F3D  2F14               	goto	l7052
  9724  1F3E                     u5260:
  9725  1F3E                     l77:
  9726  1F3E  0008               	return
  9727  1F3F                     __end_of_dispLCD:
  9728                           
  9729                           	psect	text49
  9730  1DBB                     __ptext49:	
  9731 ;; *************** function _dispLCD_lincol *****************
  9732 ;; Defined at:
  9733 ;;		line 150 in file "dispLCD4vias.c"
  9734 ;; Parameters:    Size  Location     Type
  9735 ;;  lin             1    wreg     unsigned char 
  9736 ;;  col             1    3[BANK0 ] unsigned char 
  9737 ;; Auto vars:     Size  Location     Type
  9738 ;;  lin             1    6[BANK0 ] unsigned char 
  9739 ;;  aux             1    7[BANK0 ] unsigned char 
  9740 ;; Return value:  Size  Location     Type
  9741 ;;                  1    wreg      void 
  9742 ;; Registers used:
  9743 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  9744 ;; Tracked objects:
  9745 ;;		On entry : 0/0
  9746 ;;		On exit  : 0/0
  9747 ;;		Unchanged: 0/0
  9748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9749 ;;      Params:         0       1       0       0       0
  9750 ;;      Locals:         0       2       0       0       0
  9751 ;;      Temps:          0       2       0       0       0
  9752 ;;      Totals:         0       5       0       0       0
  9753 ;;Total ram usage:        5 bytes
  9754 ;; Hardware stack levels used:    1
  9755 ;; Hardware stack levels required when called:    3
  9756 ;; This function calls:
  9757 ;;		_dispLCD_instReg
  9758 ;; This function is called by:
  9759 ;;		_dispLCD
  9760 ;;		_dispLCD_num
  9761 ;;		_dispLCD_str
  9762 ;;		_fifo_print
  9763 ;;		_printExec
  9764 ;;		_main
  9765 ;; This function uses a non-reentrant model
  9766 ;;
  9767                           
  9768                           
  9769                           ;psect for function _dispLCD_lincol
  9770  1DBB                     _dispLCD_lincol:
  9771                           
  9772                           ;incstack = 0
  9773                           ; Regs used in _dispLCD_lincol: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  9774                           ;dispLCD_lincol@lin stored from wreg
  9775  1DBB  1283               	bcf	3,5	;RP0=0, select bank0
  9776  1DBC  1303               	bcf	3,6	;RP1=0, select bank0
  9777  1DBD  00A6               	movwf	dispLCD_lincol@lin
  9778  1DBE                     l6562:
  9779                           
  9780                           ;dispLCD4vias.c: 150: void dispLCD_lincol( unsigned char lin, unsigned char col);dispLCD
      +                          4vias.c: 151: {;dispLCD4vias.c: 152:     char aux = 0x00;
  9781  1DBE  01A7               	clrf	dispLCD_lincol@aux
  9782                           
  9783                           ;dispLCD4vias.c: 154:     switch(lin)
  9784  1DBF  2DCF               	goto	l6572
  9785  1DC0                     l6564:
  9786  1DC0  3040               	movlw	64
  9787  1DC1  00A4               	movwf	??_dispLCD_lincol
  9788  1DC2  0824               	movf	??_dispLCD_lincol,w
  9789  1DC3  00A7               	movwf	dispLCD_lincol@aux
  9790  1DC4  2DE2               	goto	l6574
  9791  1DC5                     l6566:
  9792  1DC5  3014               	movlw	20
  9793  1DC6  00A4               	movwf	??_dispLCD_lincol
  9794  1DC7  0824               	movf	??_dispLCD_lincol,w
  9795  1DC8  00A7               	movwf	dispLCD_lincol@aux
  9796  1DC9  2DE2               	goto	l6574
  9797  1DCA                     l6568:
  9798  1DCA  3054               	movlw	84
  9799  1DCB  00A4               	movwf	??_dispLCD_lincol
  9800  1DCC  0824               	movf	??_dispLCD_lincol,w
  9801  1DCD  00A7               	movwf	dispLCD_lincol@aux
  9802  1DCE  2DE2               	goto	l6574
  9803  1DCF                     l6572:
  9804  1DCF  0826               	movf	dispLCD_lincol@lin,w
  9805  1DD0  00A4               	movwf	??_dispLCD_lincol
  9806  1DD1  01A5               	clrf	??_dispLCD_lincol+1
  9807                           
  9808                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9809                           ; Switch size 1, requested type "simple"
  9810                           ; Number of cases is 1, Range of values is 0 to 0
  9811                           ; switch strategies available:
  9812                           ; Name         Instructions Cycles
  9813                           ; simple_byte            4     3 (average)
  9814                           ; direct_byte           11     8 (fixed)
  9815                           ; jumptable            260     6 (fixed)
  9816                           ;	Chosen strategy is simple_byte
  9817  1DD2  0825               	movf	??_dispLCD_lincol+1,w
  9818  1DD3  3A00               	xorlw	0	; case 0
  9819  1DD4  1903               	skipnz
  9820  1DD5  2DD7               	goto	l8714
  9821  1DD6  2DE2               	goto	l6574
  9822  1DD7                     l8714:
  9823                           
  9824                           ; Switch size 1, requested type "simple"
  9825                           ; Number of cases is 3, Range of values is 1 to 3
  9826                           ; switch strategies available:
  9827                           ; Name         Instructions Cycles
  9828                           ; simple_byte           10     6 (average)
  9829                           ; direct_byte           20    11 (fixed)
  9830                           ; jumptable            263     9 (fixed)
  9831                           ;	Chosen strategy is simple_byte
  9832  1DD7  0824               	movf	??_dispLCD_lincol,w
  9833  1DD8  3A01               	xorlw	1	; case 1
  9834  1DD9  1903               	skipnz
  9835  1DDA  2DC0               	goto	l6564
  9836  1DDB  3A03               	xorlw	3	; case 2
  9837  1DDC  1903               	skipnz
  9838  1DDD  2DC5               	goto	l6566
  9839  1DDE  3A01               	xorlw	1	; case 3
  9840  1DDF  1903               	skipnz
  9841  1DE0  2DCA               	goto	l6568
  9842  1DE1  2DE2               	goto	l6574
  9843  1DE2                     l6574:
  9844                           
  9845                           ;dispLCD4vias.c: 161:     dispLCD_instReg( (0x80+(aux + (col + 0x00) & 0x7F)) );
  9846  1DE2  0823               	movf	dispLCD_lincol@col,w
  9847  1DE3  0727               	addwf	dispLCD_lincol@aux,w
  9848  1DE4  397F               	andlw	127
  9849  1DE5  3E80               	addlw	128
  9850  1DE6  160A  118A  26D4  160A  158A  	fcall	_dispLCD_instReg
  9851  1DEB                     l68:
  9852  1DEB  0008               	return
  9853  1DEC                     __end_of_dispLCD_lincol:
  9854                           
  9855                           	psect	text50
  9856  16D4                     __ptext50:	
  9857 ;; *************** function _dispLCD_instReg *****************
  9858 ;; Defined at:
  9859 ;;		line 101 in file "dispLCD4vias.c"
  9860 ;; Parameters:    Size  Location     Type
  9861 ;;  i               1    wreg     unsigned char 
  9862 ;; Auto vars:     Size  Location     Type
  9863 ;;  i               1    2[BANK0 ] unsigned char 
  9864 ;; Return value:  Size  Location     Type
  9865 ;;                  1    wreg      void 
  9866 ;; Registers used:
  9867 ;;		wreg, status,2, status,0
  9868 ;; Tracked objects:
  9869 ;;		On entry : 0/0
  9870 ;;		On exit  : 0/0
  9871 ;;		Unchanged: 0/0
  9872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9873 ;;      Params:         0       0       0       0       0
  9874 ;;      Locals:         0       1       0       0       0
  9875 ;;      Temps:          0       2       0       0       0
  9876 ;;      Totals:         0       3       0       0       0
  9877 ;;Total ram usage:        3 bytes
  9878 ;; Hardware stack levels used:    1
  9879 ;; Hardware stack levels required when called:    2
  9880 ;; This function calls:
  9881 ;;		Nothing
  9882 ;; This function is called by:
  9883 ;;		_dispLCD_lincol
  9884 ;;		_dispLCD_init
  9885 ;;		_dispLCD_clr
  9886 ;; This function uses a non-reentrant model
  9887 ;;
  9888                           
  9889                           
  9890                           ;psect for function _dispLCD_instReg
  9891  16D4                     _dispLCD_instReg:
  9892                           
  9893                           ;incstack = 0
  9894                           ; Regs used in _dispLCD_instReg: [wreg+status,2+status,0]
  9895                           ;dispLCD_instReg@i stored from wreg
  9896  16D4  1283               	bcf	3,5	;RP0=0, select bank0
  9897  16D5  1303               	bcf	3,6	;RP1=0, select bank0
  9898  16D6  00A2               	movwf	dispLCD_instReg@i
  9899  16D7                     l6452:
  9900                           
  9901                           ;dispLCD4vias.c: 101: void dispLCD_instReg( unsigned char i );dispLCD4vias.c: 102: {;dis
      +                          pLCD4vias.c: 103:     LCDbits.RS = 0;
  9902  16D7  1206               	bcf	6,4	;volatile
  9903  16D8                     l6454:
  9904                           
  9905                           ;dispLCD4vias.c: 104:     LCDbits.BUS = (i>>4);
  9906  16D8  0822               	movf	dispLCD_instReg@i,w
  9907  16D9  00A0               	movwf	??_dispLCD_instReg
  9908  16DA  3004               	movlw	4
  9909  16DB                     u4385:
  9910  16DB  1003               	clrc
  9911  16DC  0CA0               	rrf	??_dispLCD_instReg,f
  9912  16DD  3EFF               	addlw	-1
  9913  16DE  1D03               	skipz
  9914  16DF  2EDB               	goto	u4385
  9915  16E0  0806               	movf	6,w	;volatile
  9916  16E1  0620               	xorwf	??_dispLCD_instReg,w
  9917  16E2  39F0               	andlw	-16
  9918  16E3  0620               	xorwf	??_dispLCD_instReg,w
  9919  16E4  0086               	movwf	6	;volatile
  9920  16E5                     l6456:
  9921                           
  9922                           ;dispLCD4vias.c: 106:     LCDbits.EN = 0;
  9923  16E5  1286               	bcf	6,5	;volatile
  9924                           
  9925                           ;dispLCD4vias.c: 107:     if( i == 0x01 || i == 0x02 )
  9926  16E6  0322               	decf	dispLCD_instReg@i,w
  9927  16E7  1903               	btfsc	3,2
  9928  16E8  2EEA               	goto	u4391
  9929  16E9  2EEB               	goto	u4390
  9930  16EA                     u4391:
  9931  16EA  2EF1               	goto	l6460
  9932  16EB                     u4390:
  9933  16EB                     l6458:
  9934  16EB  3002               	movlw	2
  9935  16EC  0622               	xorwf	dispLCD_instReg@i,w
  9936  16ED  1D03               	btfss	3,2
  9937  16EE  2EF0               	goto	u4401
  9938  16EF  2EF1               	goto	u4400
  9939  16F0                     u4401:
  9940  16F0  2EFC               	goto	l6462
  9941  16F1                     u4400:
  9942  16F1                     l6460:
  9943                           
  9944                           ;dispLCD4vias.c: 108:         _delay((unsigned long)((2)*(20000000/4000.0)));
  9945  16F1  300D               	movlw	13
  9946  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  9947  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  9948  16F4  00A1               	movwf	??_dispLCD_instReg+1
  9949  16F5  30FB               	movlw	251
  9950  16F6  00A0               	movwf	??_dispLCD_instReg
  9951  16F7                     u6317:
  9952  16F7  0BA0               	decfsz	??_dispLCD_instReg,f
  9953  16F8  2EF7               	goto	u6317
  9954  16F9  0BA1               	decfsz	??_dispLCD_instReg+1,f
  9955  16FA  2EF7               	goto	u6317
  9956  16FB  2F03               	goto	l6464
  9957  16FC                     l6462:
  9958                           
  9959                           ;dispLCD4vias.c: 110:         _delay((unsigned long)((40)*(20000000/4000000.0)));
  9960  16FC  3041               	movlw	65
  9961  16FD  1283               	bcf	3,5	;RP0=0, select bank0
  9962  16FE  1303               	bcf	3,6	;RP1=0, select bank0
  9963  16FF  00A0               	movwf	??_dispLCD_instReg
  9964  1700                     u6327:
  9965  1700  0BA0               	decfsz	??_dispLCD_instReg,f
  9966  1701  2F00               	goto	u6327
  9967  1702  2F03               	nop2
  9968  1703                     l6464:
  9969                           
  9970                           ;dispLCD4vias.c: 111:     LCDbits.EN = 1;
  9971  1703  1283               	bcf	3,5	;RP0=0, select bank0
  9972  1704  1303               	bcf	3,6	;RP1=0, select bank0
  9973  1705  1686               	bsf	6,5	;volatile
  9974  1706                     l6466:
  9975                           
  9976                           ;dispLCD4vias.c: 114:     if( (i & 0xF0) == (0x20 | 0x00) )
  9977  1706  30F0               	movlw	240
  9978  1707  0522               	andwf	dispLCD_instReg@i,w
  9979  1708  00A0               	movwf	??_dispLCD_instReg
  9980  1709  3020               	movlw	32
  9981  170A  0620               	xorwf	??_dispLCD_instReg,w
  9982  170B  1D03               	btfss	3,2
  9983  170C  2F0E               	goto	u4411
  9984  170D  2F0F               	goto	u4410
  9985  170E                     u4411:
  9986  170E  2F28               	goto	l6478
  9987  170F                     u4410:
  9988  170F                     l6468:
  9989                           
  9990                           ;dispLCD4vias.c: 115:     {;dispLCD4vias.c: 116:         LCDbits.RS = 0;
  9991  170F  1206               	bcf	6,4	;volatile
  9992  1710                     l6470:
  9993                           
  9994                           ;dispLCD4vias.c: 117:         LCDbits.BUS = i>>4;
  9995  1710  0822               	movf	dispLCD_instReg@i,w
  9996  1711  00A0               	movwf	??_dispLCD_instReg
  9997  1712  3004               	movlw	4
  9998  1713                     u4425:
  9999  1713  1003               	clrc
 10000  1714  0CA0               	rrf	??_dispLCD_instReg,f
 10001  1715  3EFF               	addlw	-1
 10002  1716  1D03               	skipz
 10003  1717  2F13               	goto	u4425
 10004  1718  0806               	movf	6,w	;volatile
 10005  1719  0620               	xorwf	??_dispLCD_instReg,w
 10006  171A  39F0               	andlw	-16
 10007  171B  0620               	xorwf	??_dispLCD_instReg,w
 10008  171C  0086               	movwf	6	;volatile
 10009  171D                     l6472:
 10010                           
 10011                           ;dispLCD4vias.c: 118:         LCDbits.EN = 0;
 10012  171D  1286               	bcf	6,5	;volatile
 10013  171E                     l6474:
 10014                           
 10015                           ;dispLCD4vias.c: 119:         _delay((unsigned long)((40)*(20000000/4000000.0)));
 10016  171E  3041               	movlw	65
 10017  171F  1283               	bcf	3,5	;RP0=0, select bank0
 10018  1720  1303               	bcf	3,6	;RP1=0, select bank0
 10019  1721  00A0               	movwf	??_dispLCD_instReg
 10020  1722                     u6337:
 10021  1722  0BA0               	decfsz	??_dispLCD_instReg,f
 10022  1723  2F22               	goto	u6337
 10023  1724  2F25               	nop2
 10024  1725                     l6476:
 10025                           
 10026                           ;dispLCD4vias.c: 120:         LCDbits.EN = 1;
 10027  1725  1283               	bcf	3,5	;RP0=0, select bank0
 10028  1726  1303               	bcf	3,6	;RP1=0, select bank0
 10029  1727  1686               	bsf	6,5	;volatile
 10030  1728                     l6478:
 10031                           
 10032                           ;dispLCD4vias.c: 123:     LCDbits.RS = 0;
 10033  1728  1206               	bcf	6,4	;volatile
 10034  1729                     l6480:
 10035                           
 10036                           ;dispLCD4vias.c: 124:     LCDbits.BUS = i & 0x0F;
 10037  1729  300F               	movlw	15
 10038  172A  0522               	andwf	dispLCD_instReg@i,w
 10039  172B  00A0               	movwf	??_dispLCD_instReg
 10040  172C  0806               	movf	6,w	;volatile
 10041  172D  0620               	xorwf	??_dispLCD_instReg,w
 10042  172E  39F0               	andlw	-16
 10043  172F  0620               	xorwf	??_dispLCD_instReg,w
 10044  1730  0086               	movwf	6	;volatile
 10045  1731                     l6482:
 10046                           
 10047                           ;dispLCD4vias.c: 125:     LCDbits.EN = 0;
 10048  1731  1286               	bcf	6,5	;volatile
 10049  1732                     l6484:
 10050                           
 10051                           ;dispLCD4vias.c: 126:     if( i == 0x01 || i == 0x02 )
 10052  1732  0322               	decf	dispLCD_instReg@i,w
 10053  1733  1903               	btfsc	3,2
 10054  1734  2F36               	goto	u4431
 10055  1735  2F37               	goto	u4430
 10056  1736                     u4431:
 10057  1736  2F3D               	goto	l6488
 10058  1737                     u4430:
 10059  1737                     l6486:
 10060  1737  3002               	movlw	2
 10061  1738  0622               	xorwf	dispLCD_instReg@i,w
 10062  1739  1D03               	btfss	3,2
 10063  173A  2F3C               	goto	u4441
 10064  173B  2F3D               	goto	u4440
 10065  173C                     u4441:
 10066  173C  2F48               	goto	l6490
 10067  173D                     u4440:
 10068  173D                     l6488:
 10069                           
 10070                           ;dispLCD4vias.c: 127:         _delay((unsigned long)((2)*(20000000/4000.0)));
 10071  173D  300D               	movlw	13
 10072  173E  1283               	bcf	3,5	;RP0=0, select bank0
 10073  173F  1303               	bcf	3,6	;RP1=0, select bank0
 10074  1740  00A1               	movwf	??_dispLCD_instReg+1
 10075  1741  30FB               	movlw	251
 10076  1742  00A0               	movwf	??_dispLCD_instReg
 10077  1743                     u6347:
 10078  1743  0BA0               	decfsz	??_dispLCD_instReg,f
 10079  1744  2F43               	goto	u6347
 10080  1745  0BA1               	decfsz	??_dispLCD_instReg+1,f
 10081  1746  2F43               	goto	u6347
 10082  1747  2F4F               	goto	l6492
 10083  1748                     l6490:
 10084                           
 10085                           ;dispLCD4vias.c: 129:         _delay((unsigned long)((40)*(20000000/4000000.0)));
 10086  1748  3041               	movlw	65
 10087  1749  1283               	bcf	3,5	;RP0=0, select bank0
 10088  174A  1303               	bcf	3,6	;RP1=0, select bank0
 10089  174B  00A0               	movwf	??_dispLCD_instReg
 10090  174C                     u6357:
 10091  174C  0BA0               	decfsz	??_dispLCD_instReg,f
 10092  174D  2F4C               	goto	u6357
 10093  174E  2F4F               	nop2
 10094  174F                     l6492:
 10095                           
 10096                           ;dispLCD4vias.c: 130:     LCDbits.EN = 1;
 10097  174F  1283               	bcf	3,5	;RP0=0, select bank0
 10098  1750  1303               	bcf	3,6	;RP1=0, select bank0
 10099  1751  1686               	bsf	6,5	;volatile
 10100  1752                     l57:
 10101  1752  0008               	return
 10102  1753                     __end_of_dispLCD_instReg:
 10103                           
 10104                           	psect	text51
 10105  1D8A                     __ptext51:	
 10106 ;; *************** function _dispLCD_dataReg *****************
 10107 ;; Defined at:
 10108 ;;		line 134 in file "dispLCD4vias.c"
 10109 ;; Parameters:    Size  Location     Type
 10110 ;;  d               1    wreg     unsigned char 
 10111 ;; Auto vars:     Size  Location     Type
 10112 ;;  d               1    1[BANK0 ] unsigned char 
 10113 ;; Return value:  Size  Location     Type
 10114 ;;                  1    wreg      void 
 10115 ;; Registers used:
 10116 ;;		wreg, status,2, status,0
 10117 ;; Tracked objects:
 10118 ;;		On entry : 0/0
 10119 ;;		On exit  : 0/0
 10120 ;;		Unchanged: 0/0
 10121 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10122 ;;      Params:         0       0       0       0       0
 10123 ;;      Locals:         0       1       0       0       0
 10124 ;;      Temps:          0       1       0       0       0
 10125 ;;      Totals:         0       2       0       0       0
 10126 ;;Total ram usage:        2 bytes
 10127 ;; Hardware stack levels used:    1
 10128 ;; Hardware stack levels required when called:    2
 10129 ;; This function calls:
 10130 ;;		Nothing
 10131 ;; This function is called by:
 10132 ;;		_dispLCD
 10133 ;;		_dispLCD_num
 10134 ;;		_dispLCD_str
 10135 ;;		_fifo_print
 10136 ;;		_printExec
 10137 ;;		_main
 10138 ;; This function uses a non-reentrant model
 10139 ;;
 10140                           
 10141                           
 10142                           ;psect for function _dispLCD_dataReg
 10143  1D8A                     _dispLCD_dataReg:
 10144                           
 10145                           ;incstack = 0
 10146                           ; Regs used in _dispLCD_dataReg: [wreg+status,2+status,0]
 10147                           ;dispLCD_dataReg@d stored from wreg
 10148  1D8A  1283               	bcf	3,5	;RP0=0, select bank0
 10149  1D8B  1303               	bcf	3,6	;RP1=0, select bank0
 10150  1D8C  00A1               	movwf	dispLCD_dataReg@d
 10151  1D8D                     l6544:
 10152                           
 10153                           ;dispLCD4vias.c: 134: void dispLCD_dataReg( unsigned char d );dispLCD4vias.c: 135: {;dis
      +                          pLCD4vias.c: 136:     LCDbits.RS = 1;
 10154  1D8D  1606               	bsf	6,4	;volatile
 10155  1D8E                     l6546:
 10156                           
 10157                           ;dispLCD4vias.c: 137:     LCDbits.BUS = d >> 4;
 10158  1D8E  0821               	movf	dispLCD_dataReg@d,w
 10159  1D8F  00A0               	movwf	??_dispLCD_dataReg
 10160  1D90  3004               	movlw	4
 10161  1D91                     u4565:
 10162  1D91  1003               	clrc
 10163  1D92  0CA0               	rrf	??_dispLCD_dataReg,f
 10164  1D93  3EFF               	addlw	-1
 10165  1D94  1D03               	skipz
 10166  1D95  2D91               	goto	u4565
 10167  1D96  0806               	movf	6,w	;volatile
 10168  1D97  0620               	xorwf	??_dispLCD_dataReg,w
 10169  1D98  39F0               	andlw	-16
 10170  1D99  0620               	xorwf	??_dispLCD_dataReg,w
 10171  1D9A  0086               	movwf	6	;volatile
 10172  1D9B                     l6548:
 10173                           
 10174                           ;dispLCD4vias.c: 138:     LCDbits.EN = 0;
 10175  1D9B  1286               	bcf	6,5	;volatile
 10176  1D9C                     l6550:
 10177                           
 10178                           ;dispLCD4vias.c: 139:     _delay((unsigned long)((40)*(20000000/4000000.0)));
 10179  1D9C  3041               	movlw	65
 10180  1D9D  1283               	bcf	3,5	;RP0=0, select bank0
 10181  1D9E  1303               	bcf	3,6	;RP1=0, select bank0
 10182  1D9F  00A0               	movwf	??_dispLCD_dataReg
 10183  1DA0                     u6367:
 10184  1DA0  0BA0               	decfsz	??_dispLCD_dataReg,f
 10185  1DA1  2DA0               	goto	u6367
 10186  1DA2  2DA3               	nop2
 10187  1DA3                     l6552:
 10188                           
 10189                           ;dispLCD4vias.c: 140:     LCDbits.EN = 1;
 10190  1DA3  1283               	bcf	3,5	;RP0=0, select bank0
 10191  1DA4  1303               	bcf	3,6	;RP1=0, select bank0
 10192  1DA5  1686               	bsf	6,5	;volatile
 10193  1DA6                     l6554:
 10194                           
 10195                           ;dispLCD4vias.c: 142:     LCDbits.RS = 1;
 10196  1DA6  1606               	bsf	6,4	;volatile
 10197  1DA7                     l6556:
 10198                           
 10199                           ;dispLCD4vias.c: 143:     LCDbits.BUS = d & 0x0F;
 10200  1DA7  300F               	movlw	15
 10201  1DA8  0521               	andwf	dispLCD_dataReg@d,w
 10202  1DA9  00A0               	movwf	??_dispLCD_dataReg
 10203  1DAA  0806               	movf	6,w	;volatile
 10204  1DAB  0620               	xorwf	??_dispLCD_dataReg,w
 10205  1DAC  39F0               	andlw	-16
 10206  1DAD  0620               	xorwf	??_dispLCD_dataReg,w
 10207  1DAE  0086               	movwf	6	;volatile
 10208  1DAF                     l6558:
 10209                           
 10210                           ;dispLCD4vias.c: 144:     LCDbits.EN = 0;
 10211  1DAF  1286               	bcf	6,5	;volatile
 10212                           
 10213                           ;dispLCD4vias.c: 145:     _delay((unsigned long)((40)*(20000000/4000000.0)));
 10214  1DB0  3041               	movlw	65
 10215  1DB1  1283               	bcf	3,5	;RP0=0, select bank0
 10216  1DB2  1303               	bcf	3,6	;RP1=0, select bank0
 10217  1DB3  00A0               	movwf	??_dispLCD_dataReg
 10218  1DB4                     u6377:
 10219  1DB4  0BA0               	decfsz	??_dispLCD_dataReg,f
 10220  1DB5  2DB4               	goto	u6377
 10221  1DB6  2DB7               	nop2
 10222  1DB7                     l6560:
 10223                           
 10224                           ;dispLCD4vias.c: 146:     LCDbits.EN = 1;
 10225  1DB7  1283               	bcf	3,5	;RP0=0, select bank0
 10226  1DB8  1303               	bcf	3,6	;RP1=0, select bank0
 10227  1DB9  1686               	bsf	6,5	;volatile
 10228  1DBA                     l60:
 10229  1DBA  0008               	return
 10230  1DBB                     __end_of_dispLCD_dataReg:
 10231                           
 10232                           	psect	text52
 10233  1CFB                     __ptext52:	
 10234 ;; *************** function _dignum_conc *****************
 10235 ;; Defined at:
 10236 ;;		line 460 in file "fifo.c"
 10237 ;; Parameters:    Size  Location     Type
 10238 ;;  dig             1    wreg     unsigned char 
 10239 ;;  ptrNum          1    6[BANK0 ] PTR unsigned int 
 10240 ;;		 -> main@ciclos(2), main@num(2), 
 10241 ;; Auto vars:     Size  Location     Type
 10242 ;;  dig             1   11[BANK0 ] unsigned char 
 10243 ;; Return value:  Size  Location     Type
 10244 ;;                  1    wreg      void 
 10245 ;; Registers used:
 10246 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10247 ;; Tracked objects:
 10248 ;;		On entry : 0/0
 10249 ;;		On exit  : 0/0
 10250 ;;		Unchanged: 0/0
 10251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10252 ;;      Params:         0       1       0       0       0
 10253 ;;      Locals:         0       1       0       0       0
 10254 ;;      Temps:          0       4       0       0       0
 10255 ;;      Totals:         0       6       0       0       0
 10256 ;;Total ram usage:        6 bytes
 10257 ;; Hardware stack levels used:    1
 10258 ;; Hardware stack levels required when called:    3
 10259 ;; This function calls:
 10260 ;;		___wmul
 10261 ;; This function is called by:
 10262 ;;		_main
 10263 ;; This function uses a non-reentrant model
 10264 ;;
 10265                           
 10266                           
 10267                           ;psect for function _dignum_conc
 10268  1CFB                     _dignum_conc:
 10269                           
 10270                           ;incstack = 0
 10271                           ; Regs used in _dignum_conc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10272                           ;dignum_conc@dig stored from wreg
 10273  1CFB  1283               	bcf	3,5	;RP0=0, select bank0
 10274  1CFC  1303               	bcf	3,6	;RP1=0, select bank0
 10275  1CFD  00AB               	movwf	dignum_conc@dig
 10276  1CFE                     l7346:
 10277                           
 10278                           ;fifo.c: 460: void dignum_conc(char dig, unsigned int * ptrNum );fifo.c: 461: {;fifo.c: 
      +                          462:     *ptrNum = (*ptrNum * 10) + (dig - '0');
 10279  1CFE  0826               	movf	dignum_conc@ptrNum,w
 10280  1CFF  0084               	movwf	4
 10281  1D00  1383               	bcf	3,7	;select IRP bank0
 10282  1D01  0800               	movf	0,w
 10283  1D02  00A0               	movwf	___wmul@multiplier
 10284  1D03  0A84               	incf	4,f
 10285  1D04  0800               	movf	0,w
 10286  1D05  00A1               	movwf	___wmul@multiplier+1
 10287  1D06  300A               	movlw	10
 10288  1D07  00A2               	movwf	___wmul@multiplicand
 10289  1D08  3000               	movlw	0
 10290  1D09  00A3               	movwf	___wmul@multiplicand+1
 10291  1D0A  160A  158A  23CD  160A  158A  	fcall	___wmul
 10292  1D0F  1283               	bcf	3,5	;RP0=0, select bank0
 10293  1D10  1303               	bcf	3,6	;RP1=0, select bank0
 10294  1D11  082B               	movf	dignum_conc@dig,w
 10295  1D12  0720               	addwf	?___wmul,w
 10296  1D13  00A7               	movwf	??_dignum_conc
 10297  1D14  3000               	movlw	0
 10298  1D15  1803               	skipnc
 10299  1D16  3001               	movlw	1
 10300  1D17  0721               	addwf	?___wmul+1,w
 10301  1D18  00A8               	movwf	??_dignum_conc+1
 10302  1D19  0827               	movf	??_dignum_conc,w
 10303  1D1A  3ED0               	addlw	208
 10304  1D1B  00A9               	movwf	??_dignum_conc+2
 10305  1D1C  0828               	movf	??_dignum_conc+1,w
 10306  1D1D  1803               	skipnc
 10307  1D1E  3E01               	addlw	1
 10308  1D1F  3EFF               	addlw	255
 10309  1D20  00AA               	movwf	??_dignum_conc+3
 10310  1D21  0826               	movf	dignum_conc@ptrNum,w
 10311  1D22  0084               	movwf	4
 10312  1D23  0829               	movf	??_dignum_conc+2,w
 10313  1D24  1383               	bcf	3,7	;select IRP bank0
 10314  1D25  0080               	movwf	0
 10315  1D26  0A84               	incf	4,f
 10316  1D27  082A               	movf	??_dignum_conc+3,w
 10317  1D28  0080               	movwf	0
 10318  1D29                     l400:
 10319  1D29  0008               	return
 10320  1D2A                     __end_of_dignum_conc:
 10321                           
 10322                           	psect	text53
 10323  1BCD                     __ptext53:	
 10324 ;; *************** function ___wmul *****************
 10325 ;; Defined at:
 10326 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
 10327 ;; Parameters:    Size  Location     Type
 10328 ;;  multiplier      2    0[BANK0 ] unsigned int 
 10329 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 10330 ;; Auto vars:     Size  Location     Type
 10331 ;;  product         2    4[BANK0 ] unsigned int 
 10332 ;; Return value:  Size  Location     Type
 10333 ;;                  2    0[BANK0 ] unsigned int 
 10334 ;; Registers used:
 10335 ;;		wreg, status,2, status,0
 10336 ;; Tracked objects:
 10337 ;;		On entry : 0/0
 10338 ;;		On exit  : 0/0
 10339 ;;		Unchanged: 0/0
 10340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10341 ;;      Params:         0       4       0       0       0
 10342 ;;      Locals:         0       2       0       0       0
 10343 ;;      Temps:          0       0       0       0       0
 10344 ;;      Totals:         0       6       0       0       0
 10345 ;;Total ram usage:        6 bytes
 10346 ;; Hardware stack levels used:    1
 10347 ;; Hardware stack levels required when called:    2
 10348 ;; This function calls:
 10349 ;;		Nothing
 10350 ;; This function is called by:
 10351 ;;		_dignum_conc
 10352 ;; This function uses a non-reentrant model
 10353 ;;
 10354                           
 10355                           
 10356                           ;psect for function ___wmul
 10357  1BCD                     ___wmul:
 10358  1BCD                     l6982:	
 10359                           ;incstack = 0
 10360                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 10361                           
 10362  1BCD  1283               	bcf	3,5	;RP0=0, select bank0
 10363  1BCE  1303               	bcf	3,6	;RP1=0, select bank0
 10364  1BCF  01A4               	clrf	___wmul@product
 10365  1BD0  01A5               	clrf	___wmul@product+1
 10366  1BD1                     l6984:
 10367  1BD1  1C20               	btfss	___wmul@multiplier,0
 10368  1BD2  2BD4               	goto	u5151
 10369  1BD3  2BD5               	goto	u5150
 10370  1BD4                     u5151:
 10371  1BD4  2BDB               	goto	l1184
 10372  1BD5                     u5150:
 10373  1BD5                     l6986:
 10374  1BD5  0822               	movf	___wmul@multiplicand,w
 10375  1BD6  07A4               	addwf	___wmul@product,f
 10376  1BD7  1803               	skipnc
 10377  1BD8  0AA5               	incf	___wmul@product+1,f
 10378  1BD9  0823               	movf	___wmul@multiplicand+1,w
 10379  1BDA  07A5               	addwf	___wmul@product+1,f
 10380  1BDB                     l1184:
 10381  1BDB  3001               	movlw	1
 10382  1BDC                     u5165:
 10383  1BDC  1003               	clrc
 10384  1BDD  0DA2               	rlf	___wmul@multiplicand,f
 10385  1BDE  0DA3               	rlf	___wmul@multiplicand+1,f
 10386  1BDF  3EFF               	addlw	-1
 10387  1BE0  1D03               	skipz
 10388  1BE1  2BDC               	goto	u5165
 10389  1BE2                     l6988:
 10390  1BE2  3001               	movlw	1
 10391  1BE3                     u5175:
 10392  1BE3  1003               	clrc
 10393  1BE4  0CA1               	rrf	___wmul@multiplier+1,f
 10394  1BE5  0CA0               	rrf	___wmul@multiplier,f
 10395  1BE6  3EFF               	addlw	-1
 10396  1BE7  1D03               	skipz
 10397  1BE8  2BE3               	goto	u5175
 10398  1BE9                     l6990:
 10399  1BE9  0820               	movf	___wmul@multiplier,w
 10400  1BEA  0421               	iorwf	___wmul@multiplier+1,w
 10401  1BEB  1D03               	btfss	3,2
 10402  1BEC  2BEE               	goto	u5181
 10403  1BED  2BEF               	goto	u5180
 10404  1BEE                     u5181:
 10405  1BEE  2BD1               	goto	l6984
 10406  1BEF                     u5180:
 10407  1BEF                     l6992:
 10408  1BEF  0825               	movf	___wmul@product+1,w
 10409  1BF0  00A1               	movwf	?___wmul+1
 10410  1BF1  0824               	movf	___wmul@product,w
 10411  1BF2  00A0               	movwf	?___wmul
 10412  1BF3                     l1186:
 10413  1BF3  0008               	return
 10414  1BF4                     __end_of___wmul:
 10415                           
 10416                           	psect	text54
 10417  1B02                     __ptext54:	
 10418 ;; *************** function _dignum_apagar *****************
 10419 ;; Defined at:
 10420 ;;		line 465 in file "fifo.c"
 10421 ;; Parameters:    Size  Location     Type
 10422 ;;  ptrNum          1    wreg     PTR unsigned int 
 10423 ;;		 -> main@ciclos(2), main@num(2), 
 10424 ;; Auto vars:     Size  Location     Type
 10425 ;;  ptrNum          1    8[BANK0 ] PTR unsigned int 
 10426 ;;		 -> main@ciclos(2), main@num(2), 
 10427 ;; Return value:  Size  Location     Type
 10428 ;;                  1    wreg      void 
 10429 ;; Registers used:
 10430 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10431 ;; Tracked objects:
 10432 ;;		On entry : 0/0
 10433 ;;		On exit  : 0/0
 10434 ;;		Unchanged: 0/0
 10435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10436 ;;      Params:         0       0       0       0       0
 10437 ;;      Locals:         0       1       0       0       0
 10438 ;;      Temps:          0       0       0       0       0
 10439 ;;      Totals:         0       1       0       0       0
 10440 ;;Total ram usage:        1 bytes
 10441 ;; Hardware stack levels used:    1
 10442 ;; Hardware stack levels required when called:    3
 10443 ;; This function calls:
 10444 ;;		___lwdiv
 10445 ;; This function is called by:
 10446 ;;		_main
 10447 ;; This function uses a non-reentrant model
 10448 ;;
 10449                           
 10450                           
 10451                           ;psect for function _dignum_apagar
 10452  1B02                     _dignum_apagar:
 10453                           
 10454                           ;incstack = 0
 10455                           ; Regs used in _dignum_apagar: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10456                           ;dignum_apagar@ptrNum stored from wreg
 10457  1B02  1283               	bcf	3,5	;RP0=0, select bank0
 10458  1B03  1303               	bcf	3,6	;RP1=0, select bank0
 10459  1B04  00A8               	movwf	dignum_apagar@ptrNum
 10460  1B05                     l7348:
 10461                           
 10462                           ;fifo.c: 465: void dignum_apagar(unsigned int * ptrNum );fifo.c: 466: {;fifo.c: 467:    
      +                           *ptrNum /= 10;
 10463  1B05  300A               	movlw	10
 10464  1B06  00A0               	movwf	___lwdiv@divisor
 10465  1B07  3000               	movlw	0
 10466  1B08  00A1               	movwf	___lwdiv@divisor+1
 10467  1B09  0828               	movf	dignum_apagar@ptrNum,w
 10468  1B0A  0084               	movwf	4
 10469  1B0B  1383               	bcf	3,7	;select IRP bank0
 10470  1B0C  0800               	movf	0,w
 10471  1B0D  00A2               	movwf	___lwdiv@dividend
 10472  1B0E  0A84               	incf	4,f
 10473  1B0F  0800               	movf	0,w
 10474  1B10  00A3               	movwf	___lwdiv@dividend+1
 10475  1B11  160A  118A  22FE  160A  158A  	fcall	___lwdiv
 10476  1B16  1283               	bcf	3,5	;RP0=0, select bank0
 10477  1B17  1303               	bcf	3,6	;RP1=0, select bank0
 10478  1B18  0828               	movf	dignum_apagar@ptrNum,w
 10479  1B19  0084               	movwf	4
 10480  1B1A  0820               	movf	?___lwdiv,w
 10481  1B1B  1383               	bcf	3,7	;select IRP bank0
 10482  1B1C  0080               	movwf	0
 10483  1B1D  0A84               	incf	4,f
 10484  1B1E  0821               	movf	?___lwdiv+1,w
 10485  1B1F  0080               	movwf	0
 10486  1B20                     l403:
 10487  1B20  0008               	return
 10488  1B21                     __end_of_dignum_apagar:
 10489                           
 10490                           	psect	text55
 10491  12FE                     __ptext55:	
 10492 ;; *************** function ___lwdiv *****************
 10493 ;; Defined at:
 10494 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\lwdiv.c"
 10495 ;; Parameters:    Size  Location     Type
 10496 ;;  divisor         2    0[BANK0 ] unsigned int 
 10497 ;;  dividend        2    2[BANK0 ] unsigned int 
 10498 ;; Auto vars:     Size  Location     Type
 10499 ;;  quotient        2    6[BANK0 ] unsigned int 
 10500 ;;  counter         1    5[BANK0 ] unsigned char 
 10501 ;; Return value:  Size  Location     Type
 10502 ;;                  2    0[BANK0 ] unsigned int 
 10503 ;; Registers used:
 10504 ;;		wreg, status,2, status,0
 10505 ;; Tracked objects:
 10506 ;;		On entry : 0/0
 10507 ;;		On exit  : 0/0
 10508 ;;		Unchanged: 0/0
 10509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10510 ;;      Params:         0       4       0       0       0
 10511 ;;      Locals:         0       3       0       0       0
 10512 ;;      Temps:          0       1       0       0       0
 10513 ;;      Totals:         0       8       0       0       0
 10514 ;;Total ram usage:        8 bytes
 10515 ;; Hardware stack levels used:    1
 10516 ;; Hardware stack levels required when called:    2
 10517 ;; This function calls:
 10518 ;;		Nothing
 10519 ;; This function is called by:
 10520 ;;		_dignum_apagar
 10521 ;; This function uses a non-reentrant model
 10522 ;;
 10523                           
 10524                           
 10525                           ;psect for function ___lwdiv
 10526  12FE                     ___lwdiv:
 10527  12FE                     l6996:	
 10528                           ;incstack = 0
 10529                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10530                           
 10531  12FE  1283               	bcf	3,5	;RP0=0, select bank0
 10532  12FF  1303               	bcf	3,6	;RP1=0, select bank0
 10533  1300  01A6               	clrf	___lwdiv@quotient
 10534  1301  01A7               	clrf	___lwdiv@quotient+1
 10535  1302                     l6998:
 10536  1302  0820               	movf	___lwdiv@divisor,w
 10537  1303  0421               	iorwf	___lwdiv@divisor+1,w
 10538  1304  1903               	btfsc	3,2
 10539  1305  2B07               	goto	u5191
 10540  1306  2B08               	goto	u5190
 10541  1307                     u5191:
 10542  1307  2B3F               	goto	l7018
 10543  1308                     u5190:
 10544  1308                     l7000:
 10545  1308  01A5               	clrf	___lwdiv@counter
 10546  1309  0AA5               	incf	___lwdiv@counter,f
 10547  130A  2B16               	goto	l7006
 10548  130B                     l7002:
 10549  130B  3001               	movlw	1
 10550  130C                     u5205:
 10551  130C  1003               	clrc
 10552  130D  0DA0               	rlf	___lwdiv@divisor,f
 10553  130E  0DA1               	rlf	___lwdiv@divisor+1,f
 10554  130F  3EFF               	addlw	-1
 10555  1310  1D03               	skipz
 10556  1311  2B0C               	goto	u5205
 10557  1312                     l7004:
 10558  1312  3001               	movlw	1
 10559  1313  00A4               	movwf	??___lwdiv
 10560  1314  0824               	movf	??___lwdiv,w
 10561  1315  07A5               	addwf	___lwdiv@counter,f
 10562  1316                     l7006:
 10563  1316  1FA1               	btfss	___lwdiv@divisor+1,7
 10564  1317  2B19               	goto	u5211
 10565  1318  2B1A               	goto	u5210
 10566  1319                     u5211:
 10567  1319  2B0B               	goto	l7002
 10568  131A                     u5210:
 10569  131A                     l7008:
 10570  131A  3001               	movlw	1
 10571  131B                     u5225:
 10572  131B  1003               	clrc
 10573  131C  0DA6               	rlf	___lwdiv@quotient,f
 10574  131D  0DA7               	rlf	___lwdiv@quotient+1,f
 10575  131E  3EFF               	addlw	-1
 10576  131F  1D03               	skipz
 10577  1320  2B1B               	goto	u5225
 10578  1321  0821               	movf	___lwdiv@divisor+1,w
 10579  1322  0223               	subwf	___lwdiv@dividend+1,w
 10580  1323  1D03               	skipz
 10581  1324  2B27               	goto	u5235
 10582  1325  0820               	movf	___lwdiv@divisor,w
 10583  1326  0222               	subwf	___lwdiv@dividend,w
 10584  1327                     u5235:
 10585  1327  1C03               	skipc
 10586  1328  2B2A               	goto	u5231
 10587  1329  2B2B               	goto	u5230
 10588  132A                     u5231:
 10589  132A  2B32               	goto	l7014
 10590  132B                     u5230:
 10591  132B                     l7010:
 10592  132B  0820               	movf	___lwdiv@divisor,w
 10593  132C  02A2               	subwf	___lwdiv@dividend,f
 10594  132D  0821               	movf	___lwdiv@divisor+1,w
 10595  132E  1C03               	skipc
 10596  132F  03A3               	decf	___lwdiv@dividend+1,f
 10597  1330  02A3               	subwf	___lwdiv@dividend+1,f
 10598  1331                     l7012:
 10599  1331  1426               	bsf	___lwdiv@quotient,0
 10600  1332                     l7014:
 10601  1332  3001               	movlw	1
 10602  1333                     u5245:
 10603  1333  1003               	clrc
 10604  1334  0CA1               	rrf	___lwdiv@divisor+1,f
 10605  1335  0CA0               	rrf	___lwdiv@divisor,f
 10606  1336  3EFF               	addlw	-1
 10607  1337  1D03               	skipz
 10608  1338  2B33               	goto	u5245
 10609  1339                     l7016:
 10610  1339  3001               	movlw	1
 10611  133A  02A5               	subwf	___lwdiv@counter,f
 10612  133B  1D03               	btfss	3,2
 10613  133C  2B3E               	goto	u5251
 10614  133D  2B3F               	goto	u5250
 10615  133E                     u5251:
 10616  133E  2B1A               	goto	l7008
 10617  133F                     u5250:
 10618  133F                     l7018:
 10619  133F  0827               	movf	___lwdiv@quotient+1,w
 10620  1340  00A1               	movwf	?___lwdiv+1
 10621  1341  0826               	movf	___lwdiv@quotient,w
 10622  1342  00A0               	movwf	?___lwdiv
 10623  1343                     l1456:
 10624  1343  0008               	return
 10625  1344                     __end_of___lwdiv:
 10626                           
 10627                           	psect	text56
 10628  1429                     __ptext56:	
 10629 ;; *************** function _Wifi_mode *****************
 10630 ;; Defined at:
 10631 ;;		line 46 in file "wifi.c"
 10632 ;; Parameters:    Size  Location     Type
 10633 ;;  d               1    4[BANK0 ] unsigned char 
 10634 ;; Auto vars:     Size  Location     Type
 10635 ;;		None
 10636 ;; Return value:  Size  Location     Type
 10637 ;;                  1    wreg      void 
 10638 ;; Registers used:
 10639 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10640 ;; Tracked objects:
 10641 ;;		On entry : 0/0
 10642 ;;		On exit  : 0/0
 10643 ;;		Unchanged: 0/0
 10644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10645 ;;      Params:         0       1       0       0       0
 10646 ;;      Locals:         0       0       0       0       0
 10647 ;;      Temps:          0       0       0       0       0
 10648 ;;      Totals:         0       1       0       0       0
 10649 ;;Total ram usage:        1 bytes
 10650 ;; Hardware stack levels used:    1
 10651 ;; Hardware stack levels required when called:    4
 10652 ;; This function calls:
 10653 ;;		_wifi_send
 10654 ;; This function is called by:
 10655 ;;		_main
 10656 ;; This function uses a non-reentrant model
 10657 ;;
 10658                           
 10659                           
 10660                           ;psect for function _Wifi_mode
 10661  1429                     _Wifi_mode:
 10662  1429                     l7506:	
 10663                           ;incstack = 0
 10664                           ; Regs used in _Wifi_mode: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10665                           
 10666                           
 10667                           ;wifi.c: 46: void Wifi_mode(unsigned char d );wifi.c: 47: {;wifi.c: 48:     if(d == 1)
 10668  1429  1283               	bcf	3,5	;RP0=0, select bank0
 10669  142A  1303               	bcf	3,6	;RP1=0, select bank0
 10670  142B  0324               	decf	Wifi_mode@d,w
 10671  142C  1D03               	btfss	3,2
 10672  142D  2C2F               	goto	u5741
 10673  142E  2C30               	goto	u5740
 10674  142F                     u5741:
 10675  142F  2C39               	goto	l7510
 10676  1430                     u5740:
 10677  1430                     l7508:
 10678                           
 10679                           ;wifi.c: 49:     {;wifi.c: 50:         wifi_send("AT+CWMODE=1\r\n");
 10680  1430  3085               	movlw	low (STR_22| (0+32768))
 10681  1431  00A1               	movwf	wifi_send@msg
 10682  1432  3092               	movlw	high (STR_22| (0+32768))
 10683  1433  00A2               	movwf	wifi_send@msg+1
 10684  1434  160A  158A  268D  160A  118A  	fcall	_wifi_send
 10685  1439                     l7510:
 10686                           
 10687                           ;wifi.c: 53:     if(d == 2)
 10688  1439  3002               	movlw	2
 10689  143A  1283               	bcf	3,5	;RP0=0, select bank0
 10690  143B  1303               	bcf	3,6	;RP1=0, select bank0
 10691  143C  0624               	xorwf	Wifi_mode@d,w
 10692  143D  1D03               	btfss	3,2
 10693  143E  2C40               	goto	u5751
 10694  143F  2C41               	goto	u5750
 10695  1440                     u5751:
 10696  1440  2C55               	goto	l7514
 10697  1441                     u5750:
 10698  1441                     l7512:
 10699                           
 10700                           ;wifi.c: 54:     {;wifi.c: 55:         wifi_send("AT+CWMODE=2\r\n");
 10701  1441  30A1               	movlw	low (STR_23| (0+32768))
 10702  1442  00A1               	movwf	wifi_send@msg
 10703  1443  3092               	movlw	high (STR_23| (0+32768))
 10704  1444  00A2               	movwf	wifi_send@msg+1
 10705  1445  160A  158A  268D  160A  118A  	fcall	_wifi_send
 10706                           
 10707                           ;wifi.c: 56:         wifi_send("AT+CWSAP=\"Wireless\",\"********\",1,2,4,0\r\n");
 10708  144A  30DF               	movlw	low (STR_24| (0+32768))
 10709  144B  1283               	bcf	3,5	;RP0=0, select bank0
 10710  144C  1303               	bcf	3,6	;RP1=0, select bank0
 10711  144D  00A1               	movwf	wifi_send@msg
 10712  144E  3090               	movlw	high (STR_24| (0+32768))
 10713  144F  00A2               	movwf	wifi_send@msg+1
 10714  1450  160A  158A  268D  160A  118A  	fcall	_wifi_send
 10715  1455                     l7514:
 10716                           
 10717                           ;wifi.c: 58:     if(d == 3)
 10718  1455  3003               	movlw	3
 10719  1456  1283               	bcf	3,5	;RP0=0, select bank0
 10720  1457  1303               	bcf	3,6	;RP1=0, select bank0
 10721  1458  0624               	xorwf	Wifi_mode@d,w
 10722  1459  1D03               	btfss	3,2
 10723  145A  2C5C               	goto	u5761
 10724  145B  2C5D               	goto	u5760
 10725  145C                     u5761:
 10726  145C  2C72               	goto	l7518
 10727  145D                     u5760:
 10728  145D                     l7516:
 10729                           
 10730                           ;wifi.c: 59:     {;wifi.c: 60:         wifi_send("AT+CWMODE=3\r\n");
 10731  145D  30AF               	movlw	low (STR_25| (0+32768))
 10732  145E  00A1               	movwf	wifi_send@msg
 10733  145F  3092               	movlw	high (STR_25| (0+32768))
 10734  1460  00A2               	movwf	wifi_send@msg+1
 10735  1461  160A  158A  268D  160A  118A  	fcall	_wifi_send
 10736                           
 10737                           ;wifi.c: 61:         wifi_send("AT+CWSAP=\"Wireless\",\"********\",1,2,4,0\r\n");
 10738  1466  30DF               	movlw	low (STR_24| (0+32768))
 10739  1467  1283               	bcf	3,5	;RP0=0, select bank0
 10740  1468  1303               	bcf	3,6	;RP1=0, select bank0
 10741  1469  00A1               	movwf	wifi_send@msg
 10742  146A  3090               	movlw	high (STR_24| (0+32768))
 10743  146B  00A2               	movwf	wifi_send@msg+1
 10744  146C  160A  158A  268D  160A  118A  	fcall	_wifi_send
 10745                           
 10746                           ;wifi.c: 62:     }
 10747  1471  2C7B               	goto	l1062
 10748  1472                     l7518:
 10749                           
 10750                           ;wifi.c: 64:         wifi_send("AT+CWMODE=0\r\n");
 10751  1472  3077               	movlw	low (STR_27| (0+32768))
 10752  1473  00A1               	movwf	wifi_send@msg
 10753  1474  3092               	movlw	high (STR_27| (0+32768))
 10754  1475  00A2               	movwf	wifi_send@msg+1
 10755  1476  160A  158A  268D  160A  118A  	fcall	_wifi_send
 10756  147B                     l1062:
 10757  147B  0008               	return
 10758  147C                     __end_of_Wifi_mode:
 10759                           
 10760                           	psect	text57
 10761  1E8D                     __ptext57:	
 10762 ;; *************** function _wifi_send *****************
 10763 ;; Defined at:
 10764 ;;		line 17 in file "wifi.c"
 10765 ;; Parameters:    Size  Location     Type
 10766 ;;  msg             2    1[BANK0 ] PTR const unsigned char 
 10767 ;;		 -> STR_35(14), STR_34(40), Wifi_cipsend@vtr(30), Wifi_cipsend@str(30), 
 10768 ;;		 -> STR_33(21), STR_32(14), STR_31(15), STR_30(18), 
 10769 ;;		 -> STR_29(11), STR_28(11), Wifi_connect@str(40), STR_27(14), 
 10770 ;;		 -> STR_26(41), STR_25(14), STR_24(41), STR_23(14), 
 10771 ;;		 -> STR_22(14), 
 10772 ;; Auto vars:     Size  Location     Type
 10773 ;;		None
 10774 ;; Return value:  Size  Location     Type
 10775 ;;                  1    wreg      void 
 10776 ;; Registers used:
 10777 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10778 ;; Tracked objects:
 10779 ;;		On entry : 0/0
 10780 ;;		On exit  : 0/0
 10781 ;;		Unchanged: 0/0
 10782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10783 ;;      Params:         0       2       0       0       0
 10784 ;;      Locals:         0       0       0       0       0
 10785 ;;      Temps:          0       1       0       0       0
 10786 ;;      Totals:         0       3       0       0       0
 10787 ;;Total ram usage:        3 bytes
 10788 ;; Hardware stack levels used:    1
 10789 ;; Hardware stack levels required when called:    3
 10790 ;; This function calls:
 10791 ;;		_txEUSART
 10792 ;;		_txStatusEUSART
 10793 ;; This function is called by:
 10794 ;;		_Wifi_mode
 10795 ;;		_Wifi_connect
 10796 ;;		_Wifi_scan
 10797 ;;		_Wifi_ip
 10798 ;;		_Wifi_autoconnect
 10799 ;;		_Wifi_config_servidor
 10800 ;;		_Wifi_cipsend
 10801 ;; This function uses a non-reentrant model
 10802 ;;
 10803                           
 10804                           
 10805                           ;psect for function _wifi_send
 10806  1E8D                     _wifi_send:
 10807  1E8D                     l6972:	
 10808                           ;incstack = 0
 10809                           ; Regs used in _wifi_send: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10810                           
 10811                           
 10812                           ;wifi.c: 17: void wifi_send( const char * msg );wifi.c: 18: {;wifi.c: 19:     while( *ms
      +                          g )
 10813  1E8D  2EB7               	goto	l6980
 10814  1E8E                     l6974:
 10815  1E8E  1283               	bcf	3,5	;RP0=0, select bank0
 10816  1E8F  1303               	bcf	3,6	;RP1=0, select bank0
 10817  1E90  0869               	movf	low ((_eusart| 0+5)),w
 10818  1E91  120A  118A  2069  160A  158A  	fcall	fptable
 10819  1E96  3A00               	xorlw	0
 10820  1E97  1D03               	skipz
 10821  1E98  2E9A               	goto	u5131
 10822  1E99  2E9B               	goto	u5130
 10823  1E9A                     u5131:
 10824  1E9A  2E8E               	goto	l6974
 10825  1E9B                     u5130:
 10826  1E9B                     l6976:
 10827                           
 10828                           ;wifi.c: 22:         eusart.tx( *msg );
 10829  1E9B  1283               	bcf	3,5	;RP0=0, select bank0
 10830  1E9C  1303               	bcf	3,6	;RP1=0, select bank0
 10831  1E9D  0822               	movf	wifi_send@msg+1,w
 10832  1E9E  00FF               	movwf	btemp+1
 10833  1E9F  0821               	movf	wifi_send@msg,w
 10834  1EA0  0084               	movwf	4
 10835  1EA1  160A  158A  2000  160A  158A  	fcall	stringtab
 10836  1EA6  00A3               	movwf	??_wifi_send
 10837  1EA7  0823               	movf	??_wifi_send,w
 10838  1EA8  00A0               	movwf	txEUSART@d
 10839  1EA9  0868               	movf	low ((_eusart| 0+4)),w
 10840  1EAA  120A  118A  2069  160A  158A  	fcall	fptable
 10841  1EAF                     l6978:
 10842                           
 10843                           ;wifi.c: 23:         ++msg;
 10844  1EAF  3001               	movlw	1
 10845  1EB0  1283               	bcf	3,5	;RP0=0, select bank0
 10846  1EB1  1303               	bcf	3,6	;RP1=0, select bank0
 10847  1EB2  07A1               	addwf	wifi_send@msg,f
 10848  1EB3  1803               	skipnc
 10849  1EB4  0AA2               	incf	wifi_send@msg+1,f
 10850  1EB5  3000               	movlw	0
 10851  1EB6  07A2               	addwf	wifi_send@msg+1,f
 10852  1EB7                     l6980:
 10853                           
 10854                           ;wifi.c: 19:     while( *msg )
 10855  1EB7  1283               	bcf	3,5	;RP0=0, select bank0
 10856  1EB8  1303               	bcf	3,6	;RP1=0, select bank0
 10857  1EB9  0822               	movf	wifi_send@msg+1,w
 10858  1EBA  00FF               	movwf	btemp+1
 10859  1EBB  0821               	movf	wifi_send@msg,w
 10860  1EBC  0084               	movwf	4
 10861  1EBD  160A  158A  2000  160A  158A  	fcall	stringtab
 10862  1EC2  3A00               	xorlw	0
 10863  1EC3  1D03               	skipz
 10864  1EC4  2EC6               	goto	u5141
 10865  1EC5  2EC7               	goto	u5140
 10866  1EC6                     u5141:
 10867  1EC6  2E8E               	goto	l6974
 10868  1EC7                     u5140:
 10869  1EC7                     l1043:
 10870  1EC7  0008               	return
 10871  1EC8                     __end_of_wifi_send:
 10872                           
 10873                           	psect	text58
 10874  19EB                     __ptext58:	
 10875 ;; *************** function _txStatusEUSART *****************
 10876 ;; Defined at:
 10877 ;;		line 126 in file "eusart.c"
 10878 ;; Parameters:    Size  Location     Type
 10879 ;;		None
 10880 ;; Auto vars:     Size  Location     Type
 10881 ;;		None
 10882 ;; Return value:  Size  Location     Type
 10883 ;;                  1    wreg      unsigned char 
 10884 ;; Registers used:
 10885 ;;		wreg, status,0
 10886 ;; Tracked objects:
 10887 ;;		On entry : 0/0
 10888 ;;		On exit  : 0/0
 10889 ;;		Unchanged: 0/0
 10890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10891 ;;      Params:         0       0       0       0       0
 10892 ;;      Locals:         0       0       0       0       0
 10893 ;;      Temps:          0       0       0       0       0
 10894 ;;      Totals:         0       0       0       0       0
 10895 ;;Total ram usage:        0 bytes
 10896 ;; Hardware stack levels used:    1
 10897 ;; Hardware stack levels required when called:    2
 10898 ;; This function calls:
 10899 ;;		Nothing
 10900 ;; This function is called by:
 10901 ;;		_wifi_send
 10902 ;; This function uses a non-reentrant model
 10903 ;;
 10904                           
 10905                           
 10906                           ;psect for function _txStatusEUSART
 10907  19EB                     _txStatusEUSART:
 10908  19EB                     l6608:	
 10909                           ;incstack = 0
 10910                           ; Regs used in _txStatusEUSART: [wreg+status,0]
 10911                           
 10912                           
 10913                           ;eusart.c: 128:     return( !TXSTAbits.TRMT );
 10914  19EB  1003               	clrc
 10915  19EC  1683               	bsf	3,5	;RP0=1, select bank1
 10916  19ED  1303               	bcf	3,6	;RP1=0, select bank1
 10917  19EE  1C98               	btfss	24,1	;volatile
 10918  19EF  1403               	setc
 10919  19F0  3000               	movlw	0
 10920  19F1  1803               	skipnc
 10921  19F2  3001               	movlw	1
 10922  19F3                     l993:
 10923  19F3  0008               	return
 10924  19F4                     __end_of_txStatusEUSART:
 10925                           
 10926                           	psect	text59
 10927  19B7                     __ptext59:	
 10928 ;; *************** function _txEUSART *****************
 10929 ;; Defined at:
 10930 ;;		line 115 in file "eusart.c"
 10931 ;; Parameters:    Size  Location     Type
 10932 ;;  d               1    0[BANK0 ] unsigned char 
 10933 ;; Auto vars:     Size  Location     Type
 10934 ;;		None
 10935 ;; Return value:  Size  Location     Type
 10936 ;;                  1    wreg      void 
 10937 ;; Registers used:
 10938 ;;		wreg
 10939 ;; Tracked objects:
 10940 ;;		On entry : 0/0
 10941 ;;		On exit  : 0/0
 10942 ;;		Unchanged: 0/0
 10943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10944 ;;      Params:         0       1       0       0       0
 10945 ;;      Locals:         0       0       0       0       0
 10946 ;;      Temps:          0       0       0       0       0
 10947 ;;      Totals:         0       1       0       0       0
 10948 ;;Total ram usage:        1 bytes
 10949 ;; Hardware stack levels used:    1
 10950 ;; Hardware stack levels required when called:    2
 10951 ;; This function calls:
 10952 ;;		Nothing
 10953 ;; This function is called by:
 10954 ;;		_wifi_send
 10955 ;; This function uses a non-reentrant model
 10956 ;;
 10957                           
 10958                           
 10959                           ;psect for function _txEUSART
 10960  19B7                     _txEUSART:
 10961  19B7                     l6606:	
 10962                           ;incstack = 0
 10963                           ; Regs used in _txEUSART: [wreg]
 10964                           
 10965                           
 10966                           ;eusart.c: 115: void txEUSART( unsigned char d );eusart.c: 116: {;eusart.c: 117:     TXR
      +                          EG = d;
 10967  19B7  1283               	bcf	3,5	;RP0=0, select bank0
 10968  19B8  1303               	bcf	3,6	;RP1=0, select bank0
 10969  19B9  0820               	movf	txEUSART@d,w
 10970  19BA  0099               	movwf	25	;volatile
 10971  19BB                     l990:
 10972  19BB  0008               	return
 10973  19BC                     __end_of_txEUSART:
 10974                           
 10975                           	psect	text60
 10976  1B21                     __ptext60:	
 10977 ;; *************** function _MCP4725 *****************
 10978 ;; Defined at:
 10979 ;;		line 35 in file "MCP4725.c"
 10980 ;; Parameters:    Size  Location     Type
 10981 ;;  Vout            2    8[BANK0 ] unsigned int 
 10982 ;; Auto vars:     Size  Location     Type
 10983 ;;		None
 10984 ;; Return value:  Size  Location     Type
 10985 ;;                  1    wreg      void 
 10986 ;; Registers used:
 10987 ;;		wreg, status,2, status,0, pclath, cstack
 10988 ;; Tracked objects:
 10989 ;;		On entry : 0/0
 10990 ;;		On exit  : 0/0
 10991 ;;		Unchanged: 0/0
 10992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10993 ;;      Params:         0       2       0       0       0
 10994 ;;      Locals:         0       0       0       0       0
 10995 ;;      Temps:          0       0       0       0       0
 10996 ;;      Totals:         0       2       0       0       0
 10997 ;;Total ram usage:        2 bytes
 10998 ;; Hardware stack levels used:    1
 10999 ;; Hardware stack levels required when called:    4
 11000 ;; This function calls:
 11001 ;;		_I2C_stop
 11002 ;;		_dac_init
 11003 ;;		_dac_write
 11004 ;;		_delay
 11005 ;; This function is called by:
 11006 ;;		_main
 11007 ;; This function uses a non-reentrant model
 11008 ;;
 11009                           
 11010                           
 11011                           ;psect for function _MCP4725
 11012  1B21                     _MCP4725:
 11013  1B21                     l7498:	
 11014                           ;incstack = 0
 11015                           ; Regs used in _MCP4725: [wreg+status,2+status,0+pclath+cstack]
 11016                           
 11017                           
 11018                           ;MCP4725.c: 35: void MCP4725 (unsigned int Vout);MCP4725.c: 36: {;MCP4725.c: 37:     dac
      +                          _init();
 11019  1B21  160A  158A  273F  160A  158A  	fcall	_dac_init
 11020                           
 11021                           ;MCP4725.c: 38:     dac_write(Vout);
 11022  1B26  1283               	bcf	3,5	;RP0=0, select bank0
 11023  1B27  1303               	bcf	3,6	;RP1=0, select bank0
 11024  1B28  0829               	movf	MCP4725@Vout+1,w
 11025  1B29  00A5               	movwf	dac_write@code+1
 11026  1B2A  0828               	movf	MCP4725@Vout,w
 11027  1B2B  00A4               	movwf	dac_write@code
 11028  1B2C  160A  158A  27BB  160A  158A  	fcall	_dac_write
 11029  1B31                     l7500:
 11030                           
 11031                           ;MCP4725.c: 39:     I2C_stop();
 11032  1B31  160A  158A  21FD  160A  158A  	fcall	_I2C_stop
 11033  1B36                     l7502:
 11034                           
 11035                           ;MCP4725.c: 40:     delay(1);
 11036  1B36  3001               	movlw	1
 11037  1B37  1283               	bcf	3,5	;RP0=0, select bank0
 11038  1B38  1303               	bcf	3,6	;RP1=0, select bank0
 11039  1B39  00A0               	movwf	delay@t
 11040  1B3A  3000               	movlw	0
 11041  1B3B  00A1               	movwf	delay@t+1
 11042  1B3C  160A  158A  22C7  160A  158A  	fcall	_delay
 11043  1B41                     l861:
 11044  1B41  0008               	return
 11045  1B42                     __end_of_MCP4725:
 11046                           
 11047                           	psect	text61
 11048  1FBB                     __ptext61:	
 11049 ;; *************** function _dac_write *****************
 11050 ;; Defined at:
 11051 ;;		line 25 in file "MCP4725.c"
 11052 ;; Parameters:    Size  Location     Type
 11053 ;;  code            2    4[BANK0 ] unsigned int 
 11054 ;; Auto vars:     Size  Location     Type
 11055 ;;		None
 11056 ;; Return value:  Size  Location     Type
 11057 ;;                  1    wreg      void 
 11058 ;; Registers used:
 11059 ;;		wreg, status,2, status,0, pclath, cstack
 11060 ;; Tracked objects:
 11061 ;;		On entry : 0/0
 11062 ;;		On exit  : 0/0
 11063 ;;		Unchanged: 0/0
 11064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11065 ;;      Params:         0       2       0       0       0
 11066 ;;      Locals:         0       0       0       0       0
 11067 ;;      Temps:          0       2       0       0       0
 11068 ;;      Totals:         0       4       0       0       0
 11069 ;;Total ram usage:        4 bytes
 11070 ;; Hardware stack levels used:    1
 11071 ;; Hardware stack levels required when called:    3
 11072 ;; This function calls:
 11073 ;;		_I2C_ack_receive
 11074 ;;		_I2C_tx
 11075 ;;		_delay
 11076 ;; This function is called by:
 11077 ;;		_MCP4725
 11078 ;;		_MCP4725X
 11079 ;; This function uses a non-reentrant model
 11080 ;;
 11081                           
 11082                           
 11083                           ;psect for function _dac_write
 11084  1FBB                     _dac_write:
 11085  1FBB                     l6936:	
 11086                           ;incstack = 0
 11087                           ; Regs used in _dac_write: [wreg+status,2+status,0+pclath+cstack]
 11088                           
 11089                           
 11090                           ;MCP4725.c: 25: void dac_write ( unsigned int code );MCP4725.c: 26: {;MCP4725.c: 27:    
      +                           I2C_tx( code >> 4 );
 11091  1FBB  1283               	bcf	3,5	;RP0=0, select bank0
 11092  1FBC  1303               	bcf	3,6	;RP1=0, select bank0
 11093  1FBD  0825               	movf	dac_write@code+1,w
 11094  1FBE  00A7               	movwf	??_dac_write+1
 11095  1FBF  0824               	movf	dac_write@code,w
 11096  1FC0  00A6               	movwf	??_dac_write
 11097  1FC1  3004               	movlw	4
 11098  1FC2                     u5095:
 11099  1FC2  1003               	clrc
 11100  1FC3  0CA7               	rrf	??_dac_write+1,f
 11101  1FC4  0CA6               	rrf	??_dac_write,f
 11102  1FC5  3EFF               	addlw	-1
 11103  1FC6  1D03               	skipz
 11104  1FC7  2FC2               	goto	u5095
 11105  1FC8  0826               	movf	??_dac_write,w
 11106  1FC9  160A  158A  2251  160A  158A  	fcall	_I2C_tx
 11107  1FCE                     l6938:
 11108                           
 11109                           ;MCP4725.c: 28:     I2C_ack_receive();
 11110  1FCE  160A  158A  21C6  160A  158A  	fcall	_I2C_ack_receive
 11111  1FD3                     l6940:
 11112                           
 11113                           ;MCP4725.c: 29:     delay(1);
 11114  1FD3  3001               	movlw	1
 11115  1FD4  1283               	bcf	3,5	;RP0=0, select bank0
 11116  1FD5  1303               	bcf	3,6	;RP1=0, select bank0
 11117  1FD6  00A0               	movwf	delay@t
 11118  1FD7  3000               	movlw	0
 11119  1FD8  00A1               	movwf	delay@t+1
 11120  1FD9  160A  158A  22C7  160A  158A  	fcall	_delay
 11121  1FDE                     l6942:
 11122                           
 11123                           ;MCP4725.c: 30:     I2C_tx( code << 4);
 11124  1FDE  1283               	bcf	3,5	;RP0=0, select bank0
 11125  1FDF  1303               	bcf	3,6	;RP1=0, select bank0
 11126  1FE0  0824               	movf	dac_write@code,w
 11127  1FE1  00A6               	movwf	??_dac_write
 11128  1FE2  3003               	movlw	3
 11129  1FE3                     u5105:
 11130  1FE3  1003               	clrc
 11131  1FE4  0DA6               	rlf	??_dac_write,f
 11132  1FE5  3EFF               	addlw	-1
 11133  1FE6  1D03               	skipz
 11134  1FE7  2FE3               	goto	u5105
 11135  1FE8  1003               	clrc
 11136  1FE9  0D26               	rlf	??_dac_write,w
 11137  1FEA  160A  158A  2251  160A  158A  	fcall	_I2C_tx
 11138  1FEF                     l6944:
 11139                           
 11140                           ;MCP4725.c: 31:     I2C_ack_receive();
 11141  1FEF  160A  158A  21C6  160A  158A  	fcall	_I2C_ack_receive
 11142                           
 11143                           ;MCP4725.c: 32:     delay(1);
 11144  1FF4  3001               	movlw	1
 11145  1FF5  1283               	bcf	3,5	;RP0=0, select bank0
 11146  1FF6  1303               	bcf	3,6	;RP1=0, select bank0
 11147  1FF7  00A0               	movwf	delay@t
 11148  1FF8  3000               	movlw	0
 11149  1FF9  00A1               	movwf	delay@t+1
 11150  1FFA  160A  158A  22C7  160A  158A  	fcall	_delay
 11151  1FFF                     l858:
 11152  1FFF  0008               	return
 11153  2000                     __end_of_dac_write:
 11154                           
 11155                           	psect	text62
 11156  1F3F                     __ptext62:	
 11157 ;; *************** function _dac_init *****************
 11158 ;; Defined at:
 11159 ;;		line 13 in file "MCP4725.c"
 11160 ;; Parameters:    Size  Location     Type
 11161 ;;		None
 11162 ;; Auto vars:     Size  Location     Type
 11163 ;;		None
 11164 ;; Return value:  Size  Location     Type
 11165 ;;                  1    wreg      void 
 11166 ;; Registers used:
 11167 ;;		wreg, status,2, status,0, pclath, cstack
 11168 ;; Tracked objects:
 11169 ;;		On entry : 0/0
 11170 ;;		On exit  : 0/0
 11171 ;;		Unchanged: 0/0
 11172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11173 ;;      Params:         0       0       0       0       0
 11174 ;;      Locals:         0       0       0       0       0
 11175 ;;      Temps:          0       0       0       0       0
 11176 ;;      Totals:         0       0       0       0       0
 11177 ;;Total ram usage:        0 bytes
 11178 ;; Hardware stack levels used:    1
 11179 ;; Hardware stack levels required when called:    3
 11180 ;; This function calls:
 11181 ;;		_I2C_ack_receive
 11182 ;;		_I2C_start
 11183 ;;		_I2C_tx
 11184 ;;		_delay
 11185 ;; This function is called by:
 11186 ;;		_MCP4725
 11187 ;;		_MCP4725X
 11188 ;; This function uses a non-reentrant model
 11189 ;;
 11190                           
 11191                           
 11192                           ;psect for function _dac_init
 11193  1F3F                     _dac_init:
 11194  1F3F                     l6924:	
 11195                           ;incstack = 0
 11196                           ; Regs used in _dac_init: [wreg+status,2+status,0+pclath+cstack]
 11197                           
 11198                           
 11199                           ;MCP4725.c: 15:     I2C_start();
 11200  1F3F  160A  158A  2207  160A  158A  	fcall	_I2C_start
 11201  1F44                     l6926:
 11202                           
 11203                           ;MCP4725.c: 16:     delay(1);
 11204  1F44  3001               	movlw	1
 11205  1F45  1283               	bcf	3,5	;RP0=0, select bank0
 11206  1F46  1303               	bcf	3,6	;RP1=0, select bank0
 11207  1F47  00A0               	movwf	delay@t
 11208  1F48  3000               	movlw	0
 11209  1F49  00A1               	movwf	delay@t+1
 11210  1F4A  160A  158A  22C7  160A  158A  	fcall	_delay
 11211  1F4F                     l6928:
 11212                           
 11213                           ;MCP4725.c: 17:     I2C_tx( 0b11000000 );
 11214  1F4F  30C0               	movlw	192
 11215  1F50  160A  158A  2251  160A  158A  	fcall	_I2C_tx
 11216                           
 11217                           ;MCP4725.c: 18:     I2C_ack_receive();
 11218  1F55  160A  158A  21C6  160A  158A  	fcall	_I2C_ack_receive
 11219  1F5A                     l6930:
 11220                           
 11221                           ;MCP4725.c: 19:     delay(1);
 11222  1F5A  3001               	movlw	1
 11223  1F5B  1283               	bcf	3,5	;RP0=0, select bank0
 11224  1F5C  1303               	bcf	3,6	;RP1=0, select bank0
 11225  1F5D  00A0               	movwf	delay@t
 11226  1F5E  3000               	movlw	0
 11227  1F5F  00A1               	movwf	delay@t+1
 11228  1F60  160A  158A  22C7  160A  158A  	fcall	_delay
 11229  1F65                     l6932:
 11230                           
 11231                           ;MCP4725.c: 20:     I2C_tx( 0b01100000 );
 11232  1F65  3060               	movlw	96
 11233  1F66  160A  158A  2251  160A  158A  	fcall	_I2C_tx
 11234                           
 11235                           ;MCP4725.c: 21:     I2C_ack_receive();
 11236  1F6B  160A  158A  21C6  160A  158A  	fcall	_I2C_ack_receive
 11237  1F70                     l6934:
 11238                           
 11239                           ;MCP4725.c: 22:     delay(1);
 11240  1F70  3001               	movlw	1
 11241  1F71  1283               	bcf	3,5	;RP0=0, select bank0
 11242  1F72  1303               	bcf	3,6	;RP1=0, select bank0
 11243  1F73  00A0               	movwf	delay@t
 11244  1F74  3000               	movlw	0
 11245  1F75  00A1               	movwf	delay@t+1
 11246  1F76  160A  158A  22C7  160A  158A  	fcall	_delay
 11247  1F7B                     l855:
 11248  1F7B  0008               	return
 11249  1F7C                     __end_of_dac_init:
 11250                           
 11251                           	psect	text63
 11252  1AC7                     __ptext63:	
 11253 ;; *************** function _delay *****************
 11254 ;; Defined at:
 11255 ;;		line 10 in file "delay.c"
 11256 ;; Parameters:    Size  Location     Type
 11257 ;;  t               2    0[BANK0 ] unsigned int 
 11258 ;; Auto vars:     Size  Location     Type
 11259 ;;		None
 11260 ;; Return value:  Size  Location     Type
 11261 ;;                  1    wreg      void 
 11262 ;; Registers used:
 11263 ;;		wreg, status,2, status,0
 11264 ;; Tracked objects:
 11265 ;;		On entry : 0/0
 11266 ;;		On exit  : 0/0
 11267 ;;		Unchanged: 0/0
 11268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11269 ;;      Params:         0       2       0       0       0
 11270 ;;      Locals:         0       0       0       0       0
 11271 ;;      Temps:          0       2       0       0       0
 11272 ;;      Totals:         0       4       0       0       0
 11273 ;;Total ram usage:        4 bytes
 11274 ;; Hardware stack levels used:    1
 11275 ;; Hardware stack levels required when called:    2
 11276 ;; This function calls:
 11277 ;;		Nothing
 11278 ;; This function is called by:
 11279 ;;		_dispLCD_init
 11280 ;;		_main
 11281 ;;		_dac_init
 11282 ;;		_dac_write
 11283 ;;		_MCP4725
 11284 ;;		_MCP4725X
 11285 ;; This function uses a non-reentrant model
 11286 ;;
 11287                           
 11288                           
 11289                           ;psect for function _delay
 11290  1AC7                     _delay:
 11291  1AC7                     l6538:	
 11292                           ;incstack = 0
 11293                           ; Regs used in _delay: [wreg+status,2+status,0]
 11294                           
 11295                           
 11296                           ;delay.c: 10: void delay( unsigned int t );delay.c: 11: {;delay.c: 12:     while( t )
 11297  1AC7  2ADB               	goto	l6542
 11298  1AC8                     l6540:
 11299                           
 11300                           ;delay.c: 13:     {;delay.c: 14:         _delay((unsigned long)((1)*(20000000/4000.0)));
 11301  1AC8  3007               	movlw	7
 11302  1AC9  1283               	bcf	3,5	;RP0=0, select bank0
 11303  1ACA  1303               	bcf	3,6	;RP1=0, select bank0
 11304  1ACB  00A3               	movwf	??_delay+1
 11305  1ACC  307C               	movlw	124
 11306  1ACD  00A2               	movwf	??_delay
 11307  1ACE                     u6387:
 11308  1ACE  0BA2               	decfsz	??_delay,f
 11309  1ACF  2ACE               	goto	u6387
 11310  1AD0  0BA3               	decfsz	??_delay+1,f
 11311  1AD1  2ACE               	goto	u6387
 11312  1AD2  0000               	nop
 11313                           
 11314                           ;delay.c: 15:         --t;
 11315  1AD3  3001               	movlw	1
 11316  1AD4  1283               	bcf	3,5	;RP0=0, select bank0
 11317  1AD5  1303               	bcf	3,6	;RP1=0, select bank0
 11318  1AD6  02A0               	subwf	delay@t,f
 11319  1AD7  3000               	movlw	0
 11320  1AD8  1C03               	skipc
 11321  1AD9  03A1               	decf	delay@t+1,f
 11322  1ADA  02A1               	subwf	delay@t+1,f
 11323  1ADB                     l6542:
 11324                           
 11325                           ;delay.c: 12:     while( t )
 11326  1ADB  1283               	bcf	3,5	;RP0=0, select bank0
 11327  1ADC  1303               	bcf	3,6	;RP1=0, select bank0
 11328  1ADD  0820               	movf	delay@t,w
 11329  1ADE  0421               	iorwf	delay@t+1,w
 11330  1ADF  1D03               	btfss	3,2
 11331  1AE0  2AE2               	goto	u4551
 11332  1AE1  2AE3               	goto	u4550
 11333  1AE2                     u4551:
 11334  1AE2  2AC8               	goto	l6540
 11335  1AE3                     u4550:
 11336  1AE3                     l35:
 11337  1AE3  0008               	return
 11338  1AE4                     __end_of_delay:
 11339                           
 11340                           	psect	text64
 11341  1A51                     __ptext64:	
 11342 ;; *************** function _I2C_tx *****************
 11343 ;; Defined at:
 11344 ;;		line 36 in file "spi_i2c.c"
 11345 ;; Parameters:    Size  Location     Type
 11346 ;;  b               1    wreg     unsigned char 
 11347 ;; Auto vars:     Size  Location     Type
 11348 ;;  b               1    0[BANK0 ] unsigned char 
 11349 ;; Return value:  Size  Location     Type
 11350 ;;                  1    wreg      void 
 11351 ;; Registers used:
 11352 ;;		wreg
 11353 ;; Tracked objects:
 11354 ;;		On entry : 0/0
 11355 ;;		On exit  : 0/0
 11356 ;;		Unchanged: 0/0
 11357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11358 ;;      Params:         0       0       0       0       0
 11359 ;;      Locals:         0       1       0       0       0
 11360 ;;      Temps:          0       0       0       0       0
 11361 ;;      Totals:         0       1       0       0       0
 11362 ;;Total ram usage:        1 bytes
 11363 ;; Hardware stack levels used:    1
 11364 ;; Hardware stack levels required when called:    2
 11365 ;; This function calls:
 11366 ;;		Nothing
 11367 ;; This function is called by:
 11368 ;;		_dac_init
 11369 ;;		_dac_write
 11370 ;; This function uses a non-reentrant model
 11371 ;;
 11372                           
 11373                           
 11374                           ;psect for function _I2C_tx
 11375  1A51                     _I2C_tx:
 11376                           
 11377                           ;incstack = 0
 11378                           ; Regs used in _I2C_tx: [wreg]
 11379                           ;I2C_tx@b stored from wreg
 11380  1A51  1283               	bcf	3,5	;RP0=0, select bank0
 11381  1A52  1303               	bcf	3,6	;RP1=0, select bank0
 11382  1A53  00A0               	movwf	I2C_tx@b
 11383  1A54                     l6602:
 11384                           
 11385                           ;spi_i2c.c: 36: void I2C_tx( unsigned char b );spi_i2c.c: 37: {;spi_i2c.c: 38:     SSPBU
      +                          F = b;
 11386  1A54  0820               	movf	I2C_tx@b,w
 11387  1A55  0093               	movwf	19	;volatile
 11388  1A56                     l899:	
 11389                           ;spi_i2c.c: 39:     while( SSPSTATbits.BF );
 11390                           
 11391  1A56  1683               	bsf	3,5	;RP0=1, select bank1
 11392  1A57  1303               	bcf	3,6	;RP1=0, select bank1
 11393  1A58  1814               	btfsc	20,0	;volatile
 11394  1A59  2A5B               	goto	u4591
 11395  1A5A  2A5C               	goto	u4590
 11396  1A5B                     u4591:
 11397  1A5B  2A56               	goto	l899
 11398  1A5C                     u4590:
 11399  1A5C                     l902:
 11400  1A5C  0008               	return
 11401  1A5D                     __end_of_I2C_tx:
 11402                           
 11403                           	psect	text65
 11404  1A07                     __ptext65:	
 11405 ;; *************** function _I2C_start *****************
 11406 ;; Defined at:
 11407 ;;		line 22 in file "spi_i2c.c"
 11408 ;; Parameters:    Size  Location     Type
 11409 ;;		None
 11410 ;; Auto vars:     Size  Location     Type
 11411 ;;		None
 11412 ;; Return value:  Size  Location     Type
 11413 ;;                  1    wreg      void 
 11414 ;; Registers used:
 11415 ;;		None
 11416 ;; Tracked objects:
 11417 ;;		On entry : 0/0
 11418 ;;		On exit  : 0/0
 11419 ;;		Unchanged: 0/0
 11420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11421 ;;      Params:         0       0       0       0       0
 11422 ;;      Locals:         0       0       0       0       0
 11423 ;;      Temps:          0       0       0       0       0
 11424 ;;      Totals:         0       0       0       0       0
 11425 ;;Total ram usage:        0 bytes
 11426 ;; Hardware stack levels used:    1
 11427 ;; Hardware stack levels required when called:    2
 11428 ;; This function calls:
 11429 ;;		Nothing
 11430 ;; This function is called by:
 11431 ;;		_dac_init
 11432 ;; This function uses a non-reentrant model
 11433 ;;
 11434                           
 11435                           
 11436                           ;psect for function _I2C_start
 11437  1A07                     _I2C_start:
 11438  1A07                     l6600:	
 11439                           ;incstack = 0
 11440                           ; Regs used in _I2C_start: []
 11441                           
 11442                           
 11443                           ;spi_i2c.c: 24:     SSPCON2bits.SEN = 1;
 11444  1A07  1683               	bsf	3,5	;RP0=1, select bank1
 11445  1A08  1303               	bcf	3,6	;RP1=0, select bank1
 11446  1A09  1411               	bsf	17,0	;volatile
 11447  1A0A                     l884:	
 11448                           ;spi_i2c.c: 25:     while( !PIR1bits.SSPIF );
 11449                           
 11450  1A0A  1283               	bcf	3,5	;RP0=0, select bank0
 11451  1A0B  1D8C               	btfss	12,3	;volatile
 11452  1A0C  2A0E               	goto	u4581
 11453  1A0D  2A0F               	goto	u4580
 11454  1A0E                     u4581:
 11455  1A0E  2A0A               	goto	l884
 11456  1A0F                     u4580:
 11457  1A0F                     l886:
 11458                           
 11459                           ;spi_i2c.c: 26:     PIR1bits.SSPIF = 0;
 11460  1A0F  118C               	bcf	12,3	;volatile
 11461  1A10                     l887:
 11462  1A10  0008               	return
 11463  1A11                     __end_of_I2C_start:
 11464                           
 11465                           	psect	text66
 11466  19C6                     __ptext66:	
 11467 ;; *************** function _I2C_ack_receive *****************
 11468 ;; Defined at:
 11469 ;;		line 56 in file "spi_i2c.c"
 11470 ;; Parameters:    Size  Location     Type
 11471 ;;		None
 11472 ;; Auto vars:     Size  Location     Type
 11473 ;;		None
 11474 ;; Return value:  Size  Location     Type
 11475 ;;                  1    wreg      void 
 11476 ;; Registers used:
 11477 ;;		None
 11478 ;; Tracked objects:
 11479 ;;		On entry : 0/0
 11480 ;;		On exit  : 0/0
 11481 ;;		Unchanged: 0/0
 11482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11483 ;;      Params:         0       0       0       0       0
 11484 ;;      Locals:         0       0       0       0       0
 11485 ;;      Temps:          0       0       0       0       0
 11486 ;;      Totals:         0       0       0       0       0
 11487 ;;Total ram usage:        0 bytes
 11488 ;; Hardware stack levels used:    1
 11489 ;; Hardware stack levels required when called:    2
 11490 ;; This function calls:
 11491 ;;		Nothing
 11492 ;; This function is called by:
 11493 ;;		_dac_init
 11494 ;;		_dac_write
 11495 ;; This function uses a non-reentrant model
 11496 ;;
 11497                           
 11498                           
 11499                           ;psect for function _I2C_ack_receive
 11500  19C6                     _I2C_ack_receive:
 11501  19C6                     l6604:	
 11502                           ;incstack = 0
 11503                           ; Regs used in _I2C_ack_receive: []
 11504                           
 11505  19C6                     l920:	
 11506                           ;spi_i2c.c: 58:     while( SSPCON2bits.ACKSTAT );
 11507                           
 11508  19C6  1683               	bsf	3,5	;RP0=1, select bank1
 11509  19C7  1303               	bcf	3,6	;RP1=0, select bank1
 11510  19C8  1B11               	btfsc	17,6	;volatile
 11511  19C9  29CB               	goto	u4601
 11512  19CA  29CC               	goto	u4600
 11513  19CB                     u4601:
 11514  19CB  29C6               	goto	l920
 11515  19CC                     u4600:
 11516  19CC                     l923:
 11517  19CC  0008               	return
 11518  19CD                     __end_of_I2C_ack_receive:
 11519                           
 11520                           	psect	text67
 11521  19FD                     __ptext67:	
 11522 ;; *************** function _I2C_stop *****************
 11523 ;; Defined at:
 11524 ;;		line 41 in file "spi_i2c.c"
 11525 ;; Parameters:    Size  Location     Type
 11526 ;;		None
 11527 ;; Auto vars:     Size  Location     Type
 11528 ;;		None
 11529 ;; Return value:  Size  Location     Type
 11530 ;;                  1    wreg      void 
 11531 ;; Registers used:
 11532 ;;		None
 11533 ;; Tracked objects:
 11534 ;;		On entry : 0/0
 11535 ;;		On exit  : 0/0
 11536 ;;		Unchanged: 0/0
 11537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11538 ;;      Params:         0       0       0       0       0
 11539 ;;      Locals:         0       0       0       0       0
 11540 ;;      Temps:          0       0       0       0       0
 11541 ;;      Totals:         0       0       0       0       0
 11542 ;;Total ram usage:        0 bytes
 11543 ;; Hardware stack levels used:    1
 11544 ;; Hardware stack levels required when called:    2
 11545 ;; This function calls:
 11546 ;;		Nothing
 11547 ;; This function is called by:
 11548 ;;		_MCP4725
 11549 ;;		_MCP4725X
 11550 ;; This function uses a non-reentrant model
 11551 ;;
 11552                           
 11553                           
 11554                           ;psect for function _I2C_stop
 11555  19FD                     _I2C_stop:
 11556  19FD                     l6946:	
 11557                           ;incstack = 0
 11558                           ; Regs used in _I2C_stop: []
 11559                           
 11560                           
 11561                           ;spi_i2c.c: 43:     SSPCON2bits.PEN = 1;
 11562  19FD  1683               	bsf	3,5	;RP0=1, select bank1
 11563  19FE  1303               	bcf	3,6	;RP1=0, select bank1
 11564  19FF  1511               	bsf	17,2	;volatile
 11565  1A00                     l905:	
 11566                           ;spi_i2c.c: 44:     while( !PIR1bits.SSPIF );
 11567                           
 11568  1A00  1283               	bcf	3,5	;RP0=0, select bank0
 11569  1A01  1D8C               	btfss	12,3	;volatile
 11570  1A02  2A04               	goto	u5111
 11571  1A03  2A05               	goto	u5110
 11572  1A04                     u5111:
 11573  1A04  2A00               	goto	l905
 11574  1A05                     u5110:
 11575  1A05                     l907:
 11576                           
 11577                           ;spi_i2c.c: 45:     PIR1bits.SSPIF = 0;
 11578  1A05  118C               	bcf	12,3	;volatile
 11579  1A06                     l908:
 11580  1A06  0008               	return
 11581  1A07                     __end_of_I2C_stop:
 11582                           
 11583                           	psect	text68
 11584  1C1C                     __ptext68:	
 11585 ;; *************** function _I2C_init *****************
 11586 ;; Defined at:
 11587 ;;		line 12 in file "spi_i2c.c"
 11588 ;; Parameters:    Size  Location     Type
 11589 ;;  freq            4   14[BANK0 ] unsigned long 
 11590 ;; Auto vars:     Size  Location     Type
 11591 ;;		None
 11592 ;; Return value:  Size  Location     Type
 11593 ;;                  1    wreg      void 
 11594 ;; Registers used:
 11595 ;;		wreg, status,2, status,0, pclath, cstack
 11596 ;; Tracked objects:
 11597 ;;		On entry : 0/0
 11598 ;;		On exit  : 0/0
 11599 ;;		Unchanged: 0/0
 11600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11601 ;;      Params:         0       4       0       0       0
 11602 ;;      Locals:         0       0       0       0       0
 11603 ;;      Temps:          0       0       0       0       0
 11604 ;;      Totals:         0       4       0       0       0
 11605 ;;Total ram usage:        4 bytes
 11606 ;; Hardware stack levels used:    1
 11607 ;; Hardware stack levels required when called:    3
 11608 ;; This function calls:
 11609 ;;		___lldiv
 11610 ;; This function is called by:
 11611 ;;		_main
 11612 ;; This function uses a non-reentrant model
 11613 ;;
 11614                           
 11615                           
 11616                           ;psect for function _I2C_init
 11617  1C1C                     _I2C_init:
 11618  1C1C                     l7488:	
 11619                           ;incstack = 0
 11620                           ; Regs used in _I2C_init: [wreg+status,2+status,0+pclath+cstack]
 11621                           
 11622                           
 11623                           ;spi_i2c.c: 12: void I2C_init( unsigned long freq );spi_i2c.c: 13: {;spi_i2c.c: 14:     
      +                          TRISCbits.TRISC3 = 1;
 11624  1C1C  1683               	bsf	3,5	;RP0=1, select bank1
 11625  1C1D  1303               	bcf	3,6	;RP1=0, select bank1
 11626  1C1E  1587               	bsf	7,3	;volatile
 11627                           
 11628                           ;spi_i2c.c: 15:     TRISCbits.TRISC4 = 1;
 11629  1C1F  1607               	bsf	7,4	;volatile
 11630  1C20                     l7490:
 11631                           
 11632                           ;spi_i2c.c: 16:     SSPCONbits.SSPM = 0x8;
 11633  1C20  1283               	bcf	3,5	;RP0=0, select bank0
 11634  1C21  1303               	bcf	3,6	;RP1=0, select bank0
 11635  1C22  0814               	movf	20,w	;volatile
 11636  1C23  39F0               	andlw	-16
 11637  1C24  3808               	iorlw	8
 11638  1C25  0094               	movwf	20	;volatile
 11639  1C26                     l7492:
 11640                           
 11641                           ;spi_i2c.c: 17:     SSPADD = ((20000000>>2) / (freq))-1;
 11642  1C26  0831               	movf	I2C_init@freq+3,w
 11643  1C27  00A3               	movwf	___lldiv@divisor+3
 11644  1C28  0830               	movf	I2C_init@freq+2,w
 11645  1C29  00A2               	movwf	___lldiv@divisor+2
 11646  1C2A  082F               	movf	I2C_init@freq+1,w
 11647  1C2B  00A1               	movwf	___lldiv@divisor+1
 11648  1C2C  082E               	movf	I2C_init@freq,w
 11649  1C2D  00A0               	movwf	___lldiv@divisor
 11650  1C2E  3000               	movlw	0
 11651  1C2F  00A7               	movwf	___lldiv@dividend+3
 11652  1C30  304C               	movlw	76
 11653  1C31  00A6               	movwf	___lldiv@dividend+2
 11654  1C32  304B               	movlw	75
 11655  1C33  00A5               	movwf	___lldiv@dividend+1
 11656  1C34  3040               	movlw	64
 11657  1C35  00A4               	movwf	___lldiv@dividend
 11658  1C36  160A  118A  2585  160A  158A  	fcall	___lldiv
 11659  1C3B  1283               	bcf	3,5	;RP0=0, select bank0
 11660  1C3C  1303               	bcf	3,6	;RP1=0, select bank0
 11661  1C3D  0820               	movf	?___lldiv,w
 11662  1C3E  3EFF               	addlw	255
 11663  1C3F  1683               	bsf	3,5	;RP0=1, select bank1
 11664  1C40  1303               	bcf	3,6	;RP1=0, select bank1
 11665  1C41  0093               	movwf	19	;volatile
 11666  1C42                     l7494:
 11667                           
 11668                           ;spi_i2c.c: 18:     SSPSTATbits.SMP = 1;
 11669  1C42  1794               	bsf	20,7	;volatile
 11670  1C43                     l7496:
 11671                           
 11672                           ;spi_i2c.c: 19:     SSPCONbits.SSPEN = 1;
 11673  1C43  1283               	bcf	3,5	;RP0=0, select bank0
 11674  1C44  1303               	bcf	3,6	;RP1=0, select bank0
 11675  1C45  1694               	bsf	20,5	;volatile
 11676  1C46                     l881:
 11677  1C46  0008               	return
 11678  1C47                     __end_of_I2C_init:
 11679                           
 11680                           	psect	text69
 11681  1585                     __ptext69:	
 11682 ;; *************** function ___lldiv *****************
 11683 ;; Defined at:
 11684 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\__lldiv.c"
 11685 ;; Parameters:    Size  Location     Type
 11686 ;;  divisor         4    0[BANK0 ] unsigned long 
 11687 ;;  dividend        4    4[BANK0 ] unsigned long 
 11688 ;; Auto vars:     Size  Location     Type
 11689 ;;  quotient        4    9[BANK0 ] unsigned long 
 11690 ;;  counter         1   13[BANK0 ] unsigned char 
 11691 ;; Return value:  Size  Location     Type
 11692 ;;                  4    0[BANK0 ] unsigned long 
 11693 ;; Registers used:
 11694 ;;		wreg, status,2, status,0
 11695 ;; Tracked objects:
 11696 ;;		On entry : 0/0
 11697 ;;		On exit  : 0/0
 11698 ;;		Unchanged: 0/0
 11699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11700 ;;      Params:         0       8       0       0       0
 11701 ;;      Locals:         0       5       0       0       0
 11702 ;;      Temps:          0       1       0       0       0
 11703 ;;      Totals:         0      14       0       0       0
 11704 ;;Total ram usage:       14 bytes
 11705 ;; Hardware stack levels used:    1
 11706 ;; Hardware stack levels required when called:    2
 11707 ;; This function calls:
 11708 ;;		Nothing
 11709 ;; This function is called by:
 11710 ;;		_I2C_init
 11711 ;;		_initEUSART
 11712 ;; This function uses a non-reentrant model
 11713 ;;
 11714                           
 11715                           
 11716                           ;psect for function ___lldiv
 11717  1585                     ___lldiv:
 11718  1585                     l6612:	
 11719                           ;incstack = 0
 11720                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
 11721                           
 11722  1585  3000               	movlw	0
 11723  1586  1283               	bcf	3,5	;RP0=0, select bank0
 11724  1587  1303               	bcf	3,6	;RP1=0, select bank0
 11725  1588  00AC               	movwf	___lldiv@quotient+3
 11726  1589  3000               	movlw	0
 11727  158A  00AB               	movwf	___lldiv@quotient+2
 11728  158B  3000               	movlw	0
 11729  158C  00AA               	movwf	___lldiv@quotient+1
 11730  158D  3000               	movlw	0
 11731  158E  00A9               	movwf	___lldiv@quotient
 11732  158F  0823               	movf	___lldiv@divisor+3,w
 11733  1590  0422               	iorwf	___lldiv@divisor+2,w
 11734  1591  0421               	iorwf	___lldiv@divisor+1,w
 11735  1592  0420               	iorwf	___lldiv@divisor,w
 11736  1593  1903               	skipnz
 11737  1594  2D96               	goto	u4611
 11738  1595  2D97               	goto	u4610
 11739  1596                     u4611:
 11740  1596  2DE4               	goto	l6632
 11741  1597                     u4610:
 11742  1597                     l6614:
 11743  1597  01AD               	clrf	___lldiv@counter
 11744  1598  0AAD               	incf	___lldiv@counter,f
 11745  1599  2DA7               	goto	l6618
 11746  159A                     l6616:
 11747  159A  3001               	movlw	1
 11748  159B  00A8               	movwf	??___lldiv
 11749  159C                     u4625:
 11750  159C  1003               	clrc
 11751  159D  0DA0               	rlf	___lldiv@divisor,f
 11752  159E  0DA1               	rlf	___lldiv@divisor+1,f
 11753  159F  0DA2               	rlf	___lldiv@divisor+2,f
 11754  15A0  0DA3               	rlf	___lldiv@divisor+3,f
 11755  15A1  0BA8               	decfsz	??___lldiv,f
 11756  15A2  2D9C               	goto	u4625
 11757  15A3  3001               	movlw	1
 11758  15A4  00A8               	movwf	??___lldiv
 11759  15A5  0828               	movf	??___lldiv,w
 11760  15A6  07AD               	addwf	___lldiv@counter,f
 11761  15A7                     l6618:
 11762  15A7  1FA3               	btfss	___lldiv@divisor+3,7
 11763  15A8  2DAA               	goto	u4631
 11764  15A9  2DAB               	goto	u4630
 11765  15AA                     u4631:
 11766  15AA  2D9A               	goto	l6616
 11767  15AB                     u4630:
 11768  15AB                     l6620:
 11769  15AB  3001               	movlw	1
 11770  15AC  00A8               	movwf	??___lldiv
 11771  15AD                     u4645:
 11772  15AD  1003               	clrc
 11773  15AE  0DA9               	rlf	___lldiv@quotient,f
 11774  15AF  0DAA               	rlf	___lldiv@quotient+1,f
 11775  15B0  0DAB               	rlf	___lldiv@quotient+2,f
 11776  15B1  0DAC               	rlf	___lldiv@quotient+3,f
 11777  15B2  0BA8               	decfsz	??___lldiv,f
 11778  15B3  2DAD               	goto	u4645
 11779  15B4                     l6622:
 11780  15B4  0823               	movf	___lldiv@divisor+3,w
 11781  15B5  0227               	subwf	___lldiv@dividend+3,w
 11782  15B6  1D03               	skipz
 11783  15B7  2DC2               	goto	u4655
 11784  15B8  0822               	movf	___lldiv@divisor+2,w
 11785  15B9  0226               	subwf	___lldiv@dividend+2,w
 11786  15BA  1D03               	skipz
 11787  15BB  2DC2               	goto	u4655
 11788  15BC  0821               	movf	___lldiv@divisor+1,w
 11789  15BD  0225               	subwf	___lldiv@dividend+1,w
 11790  15BE  1D03               	skipz
 11791  15BF  2DC2               	goto	u4655
 11792  15C0  0820               	movf	___lldiv@divisor,w
 11793  15C1  0224               	subwf	___lldiv@dividend,w
 11794  15C2                     u4655:
 11795  15C2  1C03               	skipc
 11796  15C3  2DC5               	goto	u4651
 11797  15C4  2DC6               	goto	u4650
 11798  15C5                     u4651:
 11799  15C5  2DD5               	goto	l6628
 11800  15C6                     u4650:
 11801  15C6                     l6624:
 11802  15C6  0820               	movf	___lldiv@divisor,w
 11803  15C7  02A4               	subwf	___lldiv@dividend,f
 11804  15C8  0821               	movf	___lldiv@divisor+1,w
 11805  15C9  1C03               	skipc
 11806  15CA  0F21               	incfsz	___lldiv@divisor+1,w
 11807  15CB  02A5               	subwf	___lldiv@dividend+1,f
 11808  15CC  0822               	movf	___lldiv@divisor+2,w
 11809  15CD  1C03               	skipc
 11810  15CE  0F22               	incfsz	___lldiv@divisor+2,w
 11811  15CF  02A6               	subwf	___lldiv@dividend+2,f
 11812  15D0  0823               	movf	___lldiv@divisor+3,w
 11813  15D1  1C03               	skipc
 11814  15D2  0F23               	incfsz	___lldiv@divisor+3,w
 11815  15D3  02A7               	subwf	___lldiv@dividend+3,f
 11816  15D4                     l6626:
 11817  15D4  1429               	bsf	___lldiv@quotient,0
 11818  15D5                     l6628:
 11819  15D5  3001               	movlw	1
 11820  15D6                     u4665:
 11821  15D6  1003               	clrc
 11822  15D7  0CA3               	rrf	___lldiv@divisor+3,f
 11823  15D8  0CA2               	rrf	___lldiv@divisor+2,f
 11824  15D9  0CA1               	rrf	___lldiv@divisor+1,f
 11825  15DA  0CA0               	rrf	___lldiv@divisor,f
 11826  15DB  3EFF               	addlw	-1
 11827  15DC  1D03               	skipz
 11828  15DD  2DD6               	goto	u4665
 11829  15DE                     l6630:
 11830  15DE  3001               	movlw	1
 11831  15DF  02AD               	subwf	___lldiv@counter,f
 11832  15E0  1D03               	btfss	3,2
 11833  15E1  2DE3               	goto	u4671
 11834  15E2  2DE4               	goto	u4670
 11835  15E3                     u4671:
 11836  15E3  2DAB               	goto	l6620
 11837  15E4                     u4670:
 11838  15E4                     l6632:
 11839  15E4  082C               	movf	___lldiv@quotient+3,w
 11840  15E5  00A3               	movwf	?___lldiv+3
 11841  15E6  082B               	movf	___lldiv@quotient+2,w
 11842  15E7  00A2               	movwf	?___lldiv+2
 11843  15E8  082A               	movf	___lldiv@quotient+1,w
 11844  15E9  00A1               	movwf	?___lldiv+1
 11845  15EA  0829               	movf	___lldiv@quotient,w
 11846  15EB  00A0               	movwf	?___lldiv
 11847  15EC                     l1220:
 11848  15EC  0008               	return
 11849  15ED                     __end_of___lldiv:
 11850                           
 11851                           	psect	text70
 11852  1AAA                     __ptext70:	
 11853 ;; *************** function _irq *****************
 11854 ;; Defined at:
 11855 ;;		line 57 in file "main.c"
 11856 ;; Parameters:    Size  Location     Type
 11857 ;;		None
 11858 ;; Auto vars:     Size  Location     Type
 11859 ;;		None
 11860 ;; Return value:  Size  Location     Type
 11861 ;;                  1    wreg      void 
 11862 ;; Registers used:
 11863 ;;		wreg, status,2, status,0, pclath, cstack
 11864 ;; Tracked objects:
 11865 ;;		On entry : 0/0
 11866 ;;		On exit  : 0/0
 11867 ;;		Unchanged: 0/0
 11868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11869 ;;      Params:         0       0       0       0       0
 11870 ;;      Locals:         0       0       0       0       0
 11871 ;;      Temps:          2       0       0       0       0
 11872 ;;      Totals:         2       0       0       0       0
 11873 ;;Total ram usage:        2 bytes
 11874 ;; Hardware stack levels used:    1
 11875 ;; Hardware stack levels required when called:    1
 11876 ;; This function calls:
 11877 ;;		_intt1_1ms
 11878 ;; This function is called by:
 11879 ;;		Interrupt level 1
 11880 ;; This function uses a non-reentrant model
 11881 ;;
 11882                           
 11883                           
 11884                           ;psect for function _irq
 11885  1AAA                     _irq:
 11886  1AAA                     i1l5334:
 11887                           
 11888                           ;main.c: 59:     INTCONbits.GIE = 0;
 11889  1AAA  138B               	bcf	11,7	;volatile
 11890                           
 11891                           ;main.c: 60:     if(PIR1bits.TMR1IF && PIE1bits.TMR1IE)
 11892  1AAB  1283               	bcf	3,5	;RP0=0, select bank0
 11893  1AAC  1303               	bcf	3,6	;RP1=0, select bank0
 11894  1AAD  1C0C               	btfss	12,0	;volatile
 11895  1AAE  2AB0               	goto	u382_21
 11896  1AAF  2AB1               	goto	u382_20
 11897  1AB0                     u382_21:
 11898  1AB0  2ABF               	goto	i1l5342
 11899  1AB1                     u382_20:
 11900  1AB1                     i1l5336:
 11901  1AB1  1683               	bsf	3,5	;RP0=1, select bank1
 11902  1AB2  1303               	bcf	3,6	;RP1=0, select bank1
 11903  1AB3  1C0C               	btfss	12,0	;volatile
 11904  1AB4  2AB6               	goto	u383_21
 11905  1AB5  2AB7               	goto	u383_20
 11906  1AB6                     u383_21:
 11907  1AB6  2ABF               	goto	i1l5342
 11908  1AB7                     u383_20:
 11909  1AB7                     i1l5338:
 11910                           
 11911                           ;main.c: 61:     {;main.c: 62:         PIR1bits.TMR1IF = 0;
 11912  1AB7  1283               	bcf	3,5	;RP0=0, select bank0
 11913  1AB8  1303               	bcf	3,6	;RP1=0, select bank0
 11914  1AB9  100C               	bcf	12,0	;volatile
 11915  1ABA                     i1l5340:
 11916                           
 11917                           ;main.c: 64:         intt1_1ms();
 11918  1ABA  160A  158A  2472  160A  158A  	fcall	_intt1_1ms
 11919  1ABF                     i1l5342:
 11920                           
 11921                           ;main.c: 66:     INTCONbits.GIE = 1;
 11922  1ABF  178B               	bsf	11,7	;volatile
 11923  1AC0                     i1l669:
 11924  1AC0  0875               	movf	??_irq+1,w
 11925  1AC1  008A               	movwf	10
 11926  1AC2  0E74               	swapf	??_irq,w
 11927  1AC3  0083               	movwf	3
 11928  1AC4  0EFE               	swapf	btemp,f
 11929  1AC5  0E7E               	swapf	btemp,w
 11930  1AC6  0009               	retfie
 11931  1AC7                     __end_of_irq:
 11932                           
 11933                           	psect	intentry
 11934  0004                     __pintentry:	
 11935                           ;incstack = 0
 11936                           ; Regs used in _irq: [wreg+status,2+status,0+pclath+cstack]
 11937                           
 11938  0004                     interrupt_function:
 11939  007E                     saved_w	set	btemp
 11940  0004  00FE               	movwf	btemp
 11941  0005  0E03               	swapf	3,w
 11942  0006  00F4               	movwf	??_irq
 11943  0007  080A               	movf	10,w
 11944  0008  00F5               	movwf	??_irq+1
 11945  0009  160A  158A  2AAA   	ljmp	_irq
 11946                           
 11947                           	psect	text71
 11948  1C72                     __ptext71:	
 11949 ;; *************** function _intt1_1ms *****************
 11950 ;; Defined at:
 11951 ;;		line 5 in file "timer1.c"
 11952 ;; Parameters:    Size  Location     Type
 11953 ;;		None
 11954 ;; Auto vars:     Size  Location     Type
 11955 ;;		None
 11956 ;; Return value:  Size  Location     Type
 11957 ;;                  1    wreg      void 
 11958 ;; Registers used:
 11959 ;;		wreg
 11960 ;; Tracked objects:
 11961 ;;		On entry : 0/0
 11962 ;;		On exit  : 0/0
 11963 ;;		Unchanged: 0/0
 11964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11965 ;;      Params:         0       0       0       0       0
 11966 ;;      Locals:         0       0       0       0       0
 11967 ;;      Temps:          4       0       0       0       0
 11968 ;;      Totals:         4       0       0       0       0
 11969 ;;Total ram usage:        4 bytes
 11970 ;; Hardware stack levels used:    1
 11971 ;; This function calls:
 11972 ;;		Nothing
 11973 ;; This function is called by:
 11974 ;;		_irq
 11975 ;; This function uses a non-reentrant model
 11976 ;;
 11977                           
 11978                           
 11979                           ;psect for function _intt1_1ms
 11980  1C72                     _intt1_1ms:
 11981  1C72                     i1l5168:	
 11982                           ;incstack = 0
 11983                           ; Regs used in _intt1_1ms: [wreg]
 11984                           
 11985                           
 11986                           ;timer1.c: 7:     TMR1H = ((65536-625)>>8) & 0x00FF;
 11987  1C72  30FD               	movlw	253
 11988  1C73  1283               	bcf	3,5	;RP0=0, select bank0
 11989  1C74  1303               	bcf	3,6	;RP1=0, select bank0
 11990  1C75  008F               	movwf	15	;volatile
 11991                           
 11992                           ;timer1.c: 8:     TMR1L = (65536-625) & 0x00FF;
 11993  1C76  308F               	movlw	143
 11994  1C77  008E               	movwf	14	;volatile
 11995                           
 11996                           ;timer1.c: 10:     if(t1cont)
 11997  1C78  0847               	movf	_t1cont+3,w
 11998  1C79  0446               	iorwf	_t1cont+2,w
 11999  1C7A  0445               	iorwf	_t1cont+1,w
 12000  1C7B  0444               	iorwf	_t1cont,w
 12001  1C7C  1903               	skipnz
 12002  1C7D  2C7F               	goto	u369_21
 12003  1C7E  2C80               	goto	u369_20
 12004  1C7F                     u369_21:
 12005  1C7F  2C9D               	goto	i1l528
 12006  1C80                     u369_20:
 12007  1C80                     i1l5170:
 12008                           
 12009                           ;timer1.c: 11:         --t1cont;
 12010  1C80  3001               	movlw	1
 12011  1C81  00F0               	movwf	??_intt1_1ms
 12012  1C82  3000               	movlw	0
 12013  1C83  00F1               	movwf	??_intt1_1ms+1
 12014  1C84  3000               	movlw	0
 12015  1C85  00F2               	movwf	??_intt1_1ms+2
 12016  1C86  3000               	movlw	0
 12017  1C87  00F3               	movwf	??_intt1_1ms+3
 12018  1C88  0870               	movf	??_intt1_1ms,w
 12019  1C89  02C4               	subwf	_t1cont,f
 12020  1C8A  0871               	movf	??_intt1_1ms+1,w
 12021  1C8B  1C03               	skipc
 12022  1C8C  0F71               	incfsz	??_intt1_1ms+1,w
 12023  1C8D  2C8F               	goto	u370_25
 12024  1C8E  2C90               	goto	u370_26
 12025  1C8F                     u370_25:
 12026  1C8F  02C5               	subwf	_t1cont+1,f
 12027  1C90                     u370_26:
 12028  1C90  0872               	movf	??_intt1_1ms+2,w
 12029  1C91  1C03               	skipc
 12030  1C92  0F72               	incfsz	??_intt1_1ms+2,w
 12031  1C93  2C95               	goto	u370_27
 12032  1C94  2C96               	goto	u370_28
 12033  1C95                     u370_27:
 12034  1C95  02C6               	subwf	_t1cont+2,f
 12035  1C96                     u370_28:
 12036  1C96  0873               	movf	??_intt1_1ms+3,w
 12037  1C97  1C03               	skipc
 12038  1C98  0F73               	incfsz	??_intt1_1ms+3,w
 12039  1C99  2C9B               	goto	u370_29
 12040  1C9A  2C9C               	goto	u370_20
 12041  1C9B                     u370_29:
 12042  1C9B  02C7               	subwf	_t1cont+3,f
 12043  1C9C                     u370_20:
 12044  1C9C  2C9E               	goto	i1l530
 12045  1C9D                     i1l528:	
 12046                           ;timer1.c: 12:     else
 12047                           
 12048                           
 12049                           ;timer1.c: 13:         T1CONbits.TMR1ON = 0;
 12050  1C9D  1010               	bcf	16,0	;volatile
 12051  1C9E                     i1l530:
 12052  1C9E  0008               	return
 12053  1C9F                     __end_of_intt1_1ms:
 12054  0018                     
 12055                           	psect	functab
 12056  0069                     __pfunctab:
 12057  0069                     __fptable:
 12058  0069                     fptable:
 12059  0069  00FF               	movwf	(btemp+1)& (0+127)
 12060  006A  3000               	movlw	high fptable
 12061  006B  008A               	movwf	10
 12062  006C  087F               	movf	(btemp+1)& (0+127),w
 12063  006D  0782               	addwf	2,f
 12064  006E                     fpbase:
 12065  006E  286E               	goto	fpbase	; Call via a null pointer and you will get stuck here.
 12066  006F                     fp__txEUSART:
 12067  006F  160A  158A  29B7   	ljmp	_txEUSART
 12068  0072                     fp__txStatusEUSART:
 12069  0072  160A  158A  29EB   	ljmp	_txStatusEUSART
 12070  0075                     fp__wifi_send:
 12071  0075                     entry__wifi_send:
 12072  0075  160A  158A  2E8D   	ljmp	_wifi_send
 12073  0078                     fp__Wifi_mode:
 12074  0078  160A  118A  2C29   	ljmp	_Wifi_mode
 12075  007B                     fp__dispLCD:
 12076  007B  160A  158A  2F03   	ljmp	_dispLCD
 12077  007E                     fp__dispLCD_clr:
 12078  007E                     entry__dispLCD_clr:
 12079  007E  160A  158A  29CD   	ljmp	_dispLCD_clr
 12080  0081                     fp__dispLCD_init:
 12081  0081                     entry__dispLCD_init:
 12082  0081  160A  158A  2D2A   	ljmp	_dispLCD_init
 12083  0084                     fp__dispLCD_str:
 12084  0084  160A  158A  2F7C   	ljmp	_dispLCD_str
 12085  0087                     fp__dispLCD_num:
 12086  0087                     entry__dispLCD_num:
 12087  0087  120A  118A  2E87   	ljmp	_dispLCD_num
 12088  008A                     fp__salvar_receita:
 12089  008A  160A  158A  2DEC   	ljmp	_salvar_receita
 12090  008D                     fp__initEUSART:
 12091  008D  160A  118A  2C7C   	ljmp	_initEUSART
 12092  0090                     fp__wifi_init:
 12093  0090  160A  158A  2A6E   	ljmp	_wifi_init
 12094  0093                     __end_of__fptable:
 12095  007E                     btemp	set	126	;btemp
 12096  007E                     wtemp0	set	126
 12097                           
 12098                           	psect	config
 12099                           
 12100                           ;Config register CONFIG1 @ 0x2007
 12101                           ;	Oscillator Selection bits
 12102                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
 12103                           ;	Watchdog Timer Enable bit
 12104                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 12105                           ;	Power-up Timer Enable bit
 12106                           ;	PWRTE = ON, PWRT enabled
 12107                           ;	RE3/MCLR pin function select bit
 12108                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 12109                           ;	Code Protection bit
 12110                           ;	CP = OFF, Program memory code protection is disabled
 12111                           ;	Data Code Protection bit
 12112                           ;	CPD = OFF, Data memory code protection is disabled
 12113                           ;	Brown Out Reset Selection bits
 12114                           ;	BOREN = OFF, BOR disabled
 12115                           ;	Internal External Switchover bit
 12116                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 12117                           ;	Fail-Safe Clock Monitor Enabled bit
 12118                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 12119                           ;	Low Voltage Programming Enable bit
 12120                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 12121                           ;	In-Circuit Debugger Mode bit
 12122                           ;	DEBUG = 0x1, unprogrammed default
 12123  2007                     	org	8199
 12124  2007  20C2               	dw	8386
 12125                           
 12126                           ;Config register CONFIG2 @ 0x2008
 12127                           ;	Brown-out Reset Selection bit
 12128                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 12129                           ;	Flash Program Memory Self Write Enable bits
 12130                           ;	WRT = OFF, Write protection off
 12131  2008                     	org	8200
 12132  2008  3FFF               	dw	16383
 12133                           
 12134                           	psect	maintext_split_1
 12135  0284                     l7680:
 12136                           
 12137                           ;main.c: 143:                             {;main.c: 144:                                
      +                           dispLCD_lincol( 2, i );
 12138  0284  084F               	movf	main@i_980^(0+128),w
 12139  0285  00A0               	movwf	??_main^(0+128)
 12140  0286  0820               	movf	??_main^(0+128),w
 12141  0287  1283               	bcf	3,5	;RP0=0, select bank0
 12142  0288  1303               	bcf	3,6	;RP1=0, select bank0
 12143  0289  00A3               	movwf	dispLCD_lincol@col
 12144  028A  3002               	movlw	2
 12145  028B  160A  158A  25BB  120A  118A  	fcall	_dispLCD_lincol
 12146                           
 12147                           ;main.c: 145:                                 dispLCD_dataReg( *ptr );
 12148  0290  1683               	bsf	3,5	;RP0=1, select bank1
 12149  0291  1303               	bcf	3,6	;RP1=0, select bank1
 12150  0292  0852               	movf	main@ptr^(0+128),w
 12151  0293  0084               	movwf	4
 12152  0294  1383               	bcf	3,7	;select IRP bank0
 12153  0295  0800               	movf	0,w
 12154  0296  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
 12155  029B                     l7682:
 12156                           
 12157                           ;main.c: 146:                                 i++;
 12158  029B  3001               	movlw	1
 12159  029C  1683               	bsf	3,5	;RP0=1, select bank1
 12160  029D  1303               	bcf	3,6	;RP1=0, select bank1
 12161  029E  00A0               	movwf	??_main^(0+128)
 12162  029F  0820               	movf	??_main^(0+128),w
 12163  02A0  07CF               	addwf	main@i_980^(0+128),f
 12164  02A1                     l7684:
 12165                           
 12166                           ;main.c: 147:                                 delay(50);
 12167  02A1  3032               	movlw	50
 12168  02A2  1283               	bcf	3,5	;RP0=0, select bank0
 12169  02A3  1303               	bcf	3,6	;RP1=0, select bank0
 12170  02A4  00A0               	movwf	delay@t
 12171  02A5  3000               	movlw	0
 12172  02A6  00A1               	movwf	delay@t+1
 12173  02A7  160A  158A  22C7  120A  118A  	fcall	_delay
 12174  02AC                     l7686:
 12175                           
 12176                           ;main.c: 148:                             }
 12177  02AC  3001               	movlw	1
 12178  02AD  1683               	bsf	3,5	;RP0=1, select bank1
 12179  02AE  1303               	bcf	3,6	;RP1=0, select bank1
 12180  02AF  00A0               	movwf	??_main^(0+128)
 12181  02B0  0820               	movf	??_main^(0+128),w
 12182  02B1  07D2               	addwf	main@ptr^(0+128),f
 12183  02B2                     l7688:
 12184  02B2  0852               	movf	main@ptr^(0+128),w
 12185  02B3  0084               	movwf	4
 12186  02B4  1383               	bcf	3,7	;select IRP bank0
 12187  02B5  0800               	movf	0,w
 12188  02B6  1D03               	btfss	3,2
 12189  02B7  2AB9               	goto	u5881
 12190  02B8  2ABA               	goto	u5880
 12191  02B9                     u5881:
 12192  02B9  2A84               	goto	l7680
 12193  02BA                     u5880:
 12194  02BA                     l7690:
 12195                           
 12196                           ;main.c: 150:                             setT1(1500);
 12197  02BA  3000               	movlw	0
 12198  02BB  1283               	bcf	3,5	;RP0=0, select bank0
 12199  02BC  1303               	bcf	3,6	;RP1=0, select bank0
 12200  02BD  00A3               	movwf	setT1@c+3
 12201  02BE  3000               	movlw	0
 12202  02BF  00A2               	movwf	setT1@c+2
 12203  02C0  3005               	movlw	5
 12204  02C1  00A1               	movwf	setT1@c+1
 12205  02C2  30DC               	movlw	220
 12206  02C3  00A0               	movwf	setT1@c
 12207  02C4  120A  118A  27F0  120A  118A  	fcall	_setT1
 12208  02C9                     l7692:
 12209                           
 12210                           ;main.c: 151:                             estado = 2;
 12211  02C9  3002               	movlw	2
 12212  02CA  1683               	bsf	3,5	;RP0=1, select bank1
 12213  02CB  1303               	bcf	3,6	;RP1=0, select bank1
 12214  02CC  00A0               	movwf	??_main^(0+128)
 12215  02CD  0820               	movf	??_main^(0+128),w
 12216  02CE  00E0               	movwf	main@estado^(0+128)
 12217                           
 12218                           ;main.c: 152:                             break;
 12219  02CF  2ADE               	goto	u5891
 12220  02D0                     l7694:
 12221                           
 12222                           ;main.c: 155:                             if(!statusT1())
 12223  02D0  160A  158A  2246  120A  118A  	fcall	_statusT1
 12224  02D5  1283               	bcf	3,5	;RP0=0, select bank0
 12225  02D6  1303               	bcf	3,6	;RP1=0, select bank0
 12226  02D7  0823               	movf	?_statusT1+3,w
 12227  02D8  0422               	iorwf	?_statusT1+2,w
 12228  02D9  0421               	iorwf	?_statusT1+1,w
 12229  02DA  0420               	iorwf	?_statusT1,w
 12230  02DB  1D03               	skipz
 12231  02DC  2ADE               	goto	u5891
 12232  02DD  2AE1               	goto	u5890
 12233  02DE                     u5891:
 12234  02DE  120A  158A  2FE5   	goto	l8104
 12235  02E1                     u5890:
 12236  02E1                     l7696:
 12237                           
 12238                           ;main.c: 156:                                 estado = 8;
 12239  02E1  3008               	movlw	8
 12240  02E2  1683               	bsf	3,5	;RP0=1, select bank1
 12241  02E3  1303               	bcf	3,6	;RP1=0, select bank1
 12242  02E4  00A0               	movwf	??_main^(0+128)
 12243  02E5  0820               	movf	??_main^(0+128),w
 12244  02E6  00E0               	movwf	main@estado^(0+128)
 12245  02E7  2ADE               	goto	u5891
 12246  02E8                     l7698:
 12247                           
 12248                           ;main.c: 175:                             init_atuadores();
 12249  02E8  160A  158A  21BC  120A  118A  	fcall	_init_atuadores
 12250  02ED                     l7700:
 12251                           
 12252                           ;main.c: 176:                             IHM.print("1: INSERIR SEQUENCIA\n"
 12253  02ED  3000               	movlw	low (STR_4| (0+32768))
 12254  02EE  1283               	bcf	3,5	;RP0=0, select bank0
 12255  02EF  1303               	bcf	3,6	;RP1=0, select bank0
 12256  02F0  00A8               	movwf	dispLCD_str@str
 12257  02F1  3090               	movlw	high (STR_4| (0+32768))
 12258  02F2  00A9               	movwf	dispLCD_str@str+1
 12259  02F3  1683               	bsf	3,5	;RP0=1, select bank1
 12260  02F4  1303               	bcf	3,6	;RP1=0, select bank1
 12261  02F5  0863               	movf	(low ((_IHM| 0+1)))^(0+128),w
 12262  02F6  120A  118A  2069  120A  118A  	fcall	fptable
 12263  02FB                     l7702:
 12264                           
 12265                           ;main.c: 180:                             setT1(1000);
 12266  02FB  3000               	movlw	0
 12267  02FC  1283               	bcf	3,5	;RP0=0, select bank0
 12268  02FD  1303               	bcf	3,6	;RP1=0, select bank0
 12269  02FE  00A3               	movwf	setT1@c+3
 12270  02FF  3000               	movlw	0
 12271  0300  00A2               	movwf	setT1@c+2
 12272  0301  3003               	movlw	3
 12273  0302  00A1               	movwf	setT1@c+1
 12274  0303  30E8               	movlw	232
 12275  0304  00A0               	movwf	setT1@c
 12276  0305  120A  118A  27F0  120A  118A  	fcall	_setT1
 12277  030A                     l7704:
 12278                           
 12279                           ;main.c: 181:                             estado = 9;
 12280  030A  3009               	movlw	9
 12281  030B  1683               	bsf	3,5	;RP0=1, select bank1
 12282  030C  1303               	bcf	3,6	;RP1=0, select bank1
 12283  030D  00A0               	movwf	??_main^(0+128)
 12284  030E  0820               	movf	??_main^(0+128),w
 12285  030F  00E0               	movwf	main@estado^(0+128)
 12286                           
 12287                           ;main.c: 182:                             break;
 12288  0310  2ADE               	goto	u5891
 12289  0311                     l7706:
 12290                           
 12291                           ;main.c: 185:                             if(!statusT1())
 12292  0311  160A  158A  2246  120A  118A  	fcall	_statusT1
 12293  0316  1283               	bcf	3,5	;RP0=0, select bank0
 12294  0317  1303               	bcf	3,6	;RP1=0, select bank0
 12295  0318  0823               	movf	?_statusT1+3,w
 12296  0319  0422               	iorwf	?_statusT1+2,w
 12297  031A  0421               	iorwf	?_statusT1+1,w
 12298  031B  0420               	iorwf	?_statusT1,w
 12299  031C  1D03               	skipz
 12300  031D  2B1F               	goto	u5901
 12301  031E  2B20               	goto	u5900
 12302  031F                     u5901:
 12303  031F  2ADE               	goto	u5891
 12304  0320                     u5900:
 12305  0320                     l7708:
 12306                           
 12307                           ;main.c: 186:                                 estado = 71;
 12308  0320  3047               	movlw	71
 12309  0321  1683               	bsf	3,5	;RP0=1, select bank1
 12310  0322  1303               	bcf	3,6	;RP1=0, select bank1
 12311  0323  00A0               	movwf	??_main^(0+128)
 12312  0324  0820               	movf	??_main^(0+128),w
 12313  0325  00E0               	movwf	main@estado^(0+128)
 12314  0326  2ADE               	goto	u5891
 12315  0327                     l7710:
 12316                           
 12317                           ;main.c: 190:                             tecla = teclado_borda();
 12318  0327  160A  158A  2363  120A  118A  	fcall	_teclado_borda
 12319  032C  1683               	bsf	3,5	;RP0=1, select bank1
 12320  032D  1303               	bcf	3,6	;RP1=0, select bank1
 12321  032E  00A0               	movwf	??_main^(0+128)
 12322  032F  0820               	movf	??_main^(0+128),w
 12323  0330  00E1               	movwf	main@tecla^(0+128)
 12324                           
 12325                           ;main.c: 191:                             switch(tecla)
 12326  0331  2B39               	goto	l7716
 12327  0332                     l7712:
 12328  0332  3003               	movlw	3
 12329  0333  1683               	bsf	3,5	;RP0=1, select bank1
 12330  0334  1303               	bcf	3,6	;RP1=0, select bank1
 12331  0335  00A0               	movwf	??_main^(0+128)
 12332  0336  0820               	movf	??_main^(0+128),w
 12333  0337  00E0               	movwf	main@estado^(0+128)
 12334  0338  2ADE               	goto	u5891
 12335  0339                     l7716:
 12336  0339  0861               	movf	main@tecla^(0+128),w
 12337  033A  00A0               	movwf	??_main^(0+128)
 12338  033B  01A1               	clrf	(??_main^(0+128)+1)
 12339                           
 12340                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12341                           ; Switch size 1, requested type "simple"
 12342                           ; Number of cases is 1, Range of values is 0 to 0
 12343                           ; switch strategies available:
 12344                           ; Name         Instructions Cycles
 12345                           ; simple_byte            4     3 (average)
 12346                           ; direct_byte           11     8 (fixed)
 12347                           ; jumptable            260     6 (fixed)
 12348                           ;	Chosen strategy is simple_byte
 12349  033C  0821               	movf	(??_main+1)^(0+128),w
 12350  033D  3A00               	xorlw	0	; case 0
 12351  033E  1903               	skipnz
 12352  033F  2B41               	goto	l8686
 12353  0340  2ADE               	goto	u5891
 12354  0341                     l8686:
 12355                           
 12356                           ; Switch size 1, requested type "simple"
 12357                           ; Number of cases is 1, Range of values is 49 to 49
 12358                           ; switch strategies available:
 12359                           ; Name         Instructions Cycles
 12360                           ; simple_byte            4     3 (average)
 12361                           ; direct_byte           14    11 (fixed)
 12362                           ; jumptable            263     9 (fixed)
 12363                           ;	Chosen strategy is simple_byte
 12364  0341  0820               	movf	??_main^(0+128),w
 12365  0342  3A31               	xorlw	49	; case 49
 12366  0343  1903               	skipnz
 12367  0344  2B32               	goto	l7712
 12368  0345  2ADE               	goto	u5891
 12369  0346                     l7718:
 12370                           
 12371                           ;main.c: 402:                             IHM.clr();
 12372  0346  0866               	movf	(low ((_IHM| 0+4)))^(0+128),w
 12373  0347  120A  118A  2069  120A  118A  	fcall	fptable
 12374  034C                     l7720:
 12375                           
 12376                           ;main.c: 403:                             IHM.printpos(0, 0, "   AJUSTE O INICIO  ");
 12377  034C  1283               	bcf	3,5	;RP0=0, select bank0
 12378  034D  1303               	bcf	3,6	;RP1=0, select bank0
 12379  034E  01A8               	clrf	dispLCD@lin
 12380  034F  01A9               	clrf	dispLCD@col
 12381  0350  30ED               	movlw	low (STR_5| (0+32768))
 12382  0351  00AA               	movwf	dispLCD@str
 12383  0352  3091               	movlw	high (STR_5| (0+32768))
 12384  0353  00AB               	movwf	dispLCD@str+1
 12385  0354  1683               	bsf	3,5	;RP0=1, select bank1
 12386  0355  1303               	bcf	3,6	;RP1=0, select bank1
 12387  0356  0864               	movf	(low ((_IHM| 0+2)))^(0+128),w
 12388  0357  120A  118A  2069  120A  118A  	fcall	fptable
 12389  035C                     l7722:
 12390                           
 12391                           ;main.c: 404:                             IHM.printpos(1, 0, "     DO SISTEMA     ");
 12392  035C  1283               	bcf	3,5	;RP0=0, select bank0
 12393  035D  1303               	bcf	3,6	;RP1=0, select bank0
 12394  035E  01A8               	clrf	dispLCD@lin
 12395  035F  0AA8               	incf	dispLCD@lin,f
 12396  0360  01A9               	clrf	dispLCD@col
 12397  0361  30C3               	movlw	low (STR_6| (0+32768))
 12398  0362  00AA               	movwf	dispLCD@str
 12399  0363  3091               	movlw	high (STR_6| (0+32768))
 12400  0364  00AB               	movwf	dispLCD@str+1
 12401  0365  1683               	bsf	3,5	;RP0=1, select bank1
 12402  0366  1303               	bcf	3,6	;RP1=0, select bank1
 12403  0367  0864               	movf	(low ((_IHM| 0+2)))^(0+128),w
 12404  0368  120A  118A  2069  120A  118A  	fcall	fptable
 12405  036D                     l7724:
 12406                           
 12407                           ;main.c: 405:                             estado = 6;
 12408  036D  3006               	movlw	6
 12409  036E  1683               	bsf	3,5	;RP0=1, select bank1
 12410  036F  1303               	bcf	3,6	;RP1=0, select bank1
 12411  0370  00A0               	movwf	??_main^(0+128)
 12412  0371  0820               	movf	??_main^(0+128),w
 12413  0372  00E0               	movwf	main@estado^(0+128)
 12414                           
 12415                           ;main.c: 406:                             break;
 12416  0373  2ADE               	goto	u5891
 12417  0374                     l7726:
 12418                           
 12419                           ;main.c: 409:                             IHM.printpos(3,0,"   A   B   C   D    ");
 12420  0374  3003               	movlw	3
 12421  0375  00A0               	movwf	??_main^(0+128)
 12422  0376  0820               	movf	??_main^(0+128),w
 12423  0377  1283               	bcf	3,5	;RP0=0, select bank0
 12424  0378  1303               	bcf	3,6	;RP1=0, select bank0
 12425  0379  00A8               	movwf	dispLCD@lin
 12426  037A  01A9               	clrf	dispLCD@col
 12427  037B  30D8               	movlw	low (STR_7| (0+32768))
 12428  037C  00AA               	movwf	dispLCD@str
 12429  037D  3091               	movlw	high (STR_7| (0+32768))
 12430  037E  00AB               	movwf	dispLCD@str+1
 12431  037F  1683               	bsf	3,5	;RP0=1, select bank1
 12432  0380  1303               	bcf	3,6	;RP1=0, select bank1
 12433  0381  0864               	movf	(low ((_IHM| 0+2)))^(0+128),w
 12434  0382  120A  118A  2069  120A  118A  	fcall	fptable
 12435  0387                     l7728:
 12436                           
 12437                           ;main.c: 410:                             dispLCD_lincol(3, 4); dispLCD_dataReg(ler_atua
      +                          dor('A') ? '+' : '-');
 12438  0387  3004               	movlw	4
 12439  0388  1683               	bsf	3,5	;RP0=1, select bank1
 12440  0389  1303               	bcf	3,6	;RP1=0, select bank1
 12441  038A  00A0               	movwf	??_main^(0+128)
 12442  038B  0820               	movf	??_main^(0+128),w
 12443  038C  1283               	bcf	3,5	;RP0=0, select bank0
 12444  038D  1303               	bcf	3,6	;RP1=0, select bank0
 12445  038E  00A3               	movwf	dispLCD_lincol@col
 12446  038F  3003               	movlw	3
 12447  0390  160A  158A  25BB  120A  118A  	fcall	_dispLCD_lincol
 12448  0395                     l7730:
 12449  0395  3041               	movlw	65
 12450  0396  160A  158A  24CD  120A  118A  	fcall	_ler_atuador
 12451  039B  3A00               	xorlw	0
 12452  039C  1D03               	skipz
 12453  039D  2B9F               	goto	u5911
 12454  039E  2BA0               	goto	u5910
 12455  039F                     u5911:
 12456  039F  2BA7               	goto	l7734
 12457  03A0                     u5910:
 12458  03A0                     l7732:
 12459  03A0  302D               	movlw	45
 12460  03A1  1683               	bsf	3,5	;RP0=1, select bank1
 12461  03A2  1303               	bcf	3,6	;RP1=0, select bank1
 12462  03A3  00BB               	movwf	_main$991^(0+128)
 12463  03A4  3000               	movlw	0
 12464  03A5  00BC               	movwf	(_main$991^(0+128)+1)
 12465  03A6  2BAD               	goto	l7736
 12466  03A7                     l7734:
 12467  03A7  302B               	movlw	43
 12468  03A8  1683               	bsf	3,5	;RP0=1, select bank1
 12469  03A9  1303               	bcf	3,6	;RP1=0, select bank1
 12470  03AA  00BB               	movwf	_main$991^(0+128)
 12471  03AB  3000               	movlw	0
 12472  03AC  00BC               	movwf	(_main$991^(0+128)+1)
 12473  03AD                     l7736:
 12474  03AD  083B               	movf	_main$991^(0+128),w
 12475  03AE  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
 12476  03B3                     l7738:
 12477                           
 12478                           ;main.c: 411:                             dispLCD_lincol(3, 8);dispLCD_dataReg(ler_atuad
      +                          or('B') ? '+' : '-');
 12479  03B3  3008               	movlw	8
 12480  03B4  1683               	bsf	3,5	;RP0=1, select bank1
 12481  03B5  1303               	bcf	3,6	;RP1=0, select bank1
 12482  03B6  00A0               	movwf	??_main^(0+128)
 12483  03B7  0820               	movf	??_main^(0+128),w
 12484  03B8  1283               	bcf	3,5	;RP0=0, select bank0
 12485  03B9  1303               	bcf	3,6	;RP1=0, select bank0
 12486  03BA  00A3               	movwf	dispLCD_lincol@col
 12487  03BB  3003               	movlw	3
 12488  03BC  160A  158A  25BB  120A  118A  	fcall	_dispLCD_lincol
 12489  03C1                     l7740:
 12490  03C1  3042               	movlw	66
 12491  03C2  160A  158A  24CD  120A  118A  	fcall	_ler_atuador
 12492  03C7  3A00               	xorlw	0
 12493  03C8  1D03               	skipz
 12494  03C9  2BCB               	goto	u5921
 12495  03CA  2BCC               	goto	u5920
 12496  03CB                     u5921:
 12497  03CB  2BD3               	goto	l7744
 12498  03CC                     u5920:
 12499  03CC                     l7742:
 12500  03CC  302D               	movlw	45
 12501  03CD  1683               	bsf	3,5	;RP0=1, select bank1
 12502  03CE  1303               	bcf	3,6	;RP1=0, select bank1
 12503  03CF  00BD               	movwf	_main$992^(0+128)
 12504  03D0  3000               	movlw	0
 12505  03D1  00BE               	movwf	(_main$992^(0+128)+1)
 12506  03D2  2BD9               	goto	l7746
 12507  03D3                     l7744:
 12508  03D3  302B               	movlw	43
 12509  03D4  1683               	bsf	3,5	;RP0=1, select bank1
 12510  03D5  1303               	bcf	3,6	;RP1=0, select bank1
 12511  03D6  00BD               	movwf	_main$992^(0+128)
 12512  03D7  3000               	movlw	0
 12513  03D8  00BE               	movwf	(_main$992^(0+128)+1)
 12514  03D9                     l7746:
 12515  03D9  083D               	movf	_main$992^(0+128),w
 12516  03DA  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
 12517  03DF                     l7748:
 12518                           
 12519                           ;main.c: 412:                             dispLCD_lincol(3, 12);dispLCD_dataReg(ler_atua
      +                          dor('C') ? '+' : '-');
 12520  03DF  300C               	movlw	12
 12521  03E0  1683               	bsf	3,5	;RP0=1, select bank1
 12522  03E1  1303               	bcf	3,6	;RP1=0, select bank1
 12523  03E2  00A0               	movwf	??_main^(0+128)
 12524  03E3  0820               	movf	??_main^(0+128),w
 12525  03E4  1283               	bcf	3,5	;RP0=0, select bank0
 12526  03E5  1303               	bcf	3,6	;RP1=0, select bank0
 12527  03E6  00A3               	movwf	dispLCD_lincol@col
 12528  03E7  3003               	movlw	3
 12529  03E8  160A  158A  25BB  120A  118A  	fcall	_dispLCD_lincol
 12530  03ED                     l7750:
 12531  03ED  3043               	movlw	67
 12532  03EE  160A  158A  24CD  120A  118A  	fcall	_ler_atuador
 12533  03F3  3A00               	xorlw	0
 12534  03F4  1D03               	skipz
 12535  03F5  2BF7               	goto	u5931
 12536  03F6  2BF8               	goto	u5930
 12537  03F7                     u5931:
 12538  03F7  2BFF               	goto	l7754
 12539  03F8                     u5930:
 12540  03F8                     l7752:
 12541  03F8  302D               	movlw	45
 12542  03F9  1683               	bsf	3,5	;RP0=1, select bank1
 12543  03FA  1303               	bcf	3,6	;RP1=0, select bank1
 12544  03FB  00BF               	movwf	_main$993^(0+128)
 12545  03FC  3000               	movlw	0
 12546  03FD  00C0               	movwf	(_main$993^(0+128)+1)
 12547  03FE  2C05               	goto	l7756
 12548  03FF                     l7754:
 12549  03FF  302B               	movlw	43
 12550  0400  1683               	bsf	3,5	;RP0=1, select bank1
 12551  0401  1303               	bcf	3,6	;RP1=0, select bank1
 12552  0402  00BF               	movwf	_main$993^(0+128)
 12553  0403  3000               	movlw	0
 12554  0404  00C0               	movwf	(_main$993^(0+128)+1)
 12555  0405                     l7756:
 12556  0405  083F               	movf	_main$993^(0+128),w
 12557  0406  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
 12558  040B                     l7758:
 12559                           
 12560                           ;main.c: 413:                             dispLCD_lincol(3, 16);dispLCD_dataReg(ler_atua
      +                          dor('D') ? '+' : '-');
 12561  040B  3010               	movlw	16
 12562  040C  1683               	bsf	3,5	;RP0=1, select bank1
 12563  040D  1303               	bcf	3,6	;RP1=0, select bank1
 12564  040E  00A0               	movwf	??_main^(0+128)
 12565  040F  0820               	movf	??_main^(0+128),w
 12566  0410  1283               	bcf	3,5	;RP0=0, select bank0
 12567  0411  1303               	bcf	3,6	;RP1=0, select bank0
 12568  0412  00A3               	movwf	dispLCD_lincol@col
 12569  0413  3003               	movlw	3
 12570  0414  160A  158A  25BB  120A  118A  	fcall	_dispLCD_lincol
 12571  0419                     l7760:
 12572  0419  3044               	movlw	68
 12573  041A  160A  158A  24CD  120A  118A  	fcall	_ler_atuador
 12574  041F  3A00               	xorlw	0
 12575  0420  1D03               	skipz
 12576  0421  2C23               	goto	u5941
 12577  0422  2C24               	goto	u5940
 12578  0423                     u5941:
 12579  0423  2C2B               	goto	l7764
 12580  0424                     u5940:
 12581  0424                     l7762:
 12582  0424  302D               	movlw	45
 12583  0425  1683               	bsf	3,5	;RP0=1, select bank1
 12584  0426  1303               	bcf	3,6	;RP1=0, select bank1
 12585  0427  00C1               	movwf	_main$994^(0+128)
 12586  0428  3000               	movlw	0
 12587  0429  00C2               	movwf	(_main$994^(0+128)+1)
 12588  042A  2C31               	goto	l7766
 12589  042B                     l7764:
 12590  042B  302B               	movlw	43
 12591  042C  1683               	bsf	3,5	;RP0=1, select bank1
 12592  042D  1303               	bcf	3,6	;RP1=0, select bank1
 12593  042E  00C1               	movwf	_main$994^(0+128)
 12594  042F  3000               	movlw	0
 12595  0430  00C2               	movwf	(_main$994^(0+128)+1)
 12596  0431                     l7766:
 12597  0431  0841               	movf	_main$994^(0+128),w
 12598  0432  160A  158A  258A  120A  118A  	fcall	_dispLCD_dataReg
 12599  0437                     l7768:
 12600                           
 12601                           ;main.c: 414:                             estado = 7;
 12602  0437  3007               	movlw	7
 12603  0438  1683               	bsf	3,5	;RP0=1, select bank1
 12604  0439  1303               	bcf	3,6	;RP1=0, select bank1
 12605  043A  00A0               	movwf	??_main^(0+128)
 12606  043B  0820               	movf	??_main^(0+128),w
 12607  043C  00E0               	movwf	main@estado^(0+128)
 12608                           
 12609                           ;main.c: 415:                             break;
 12610  043D  2ADE               	goto	u5891
 12611                           
 12612                           	psect	maintext_split_2
 12613  0830                     l7770:
 12614                           
 12615                           ;main.c: 418:                             tecla = teclado_borda();
 12616  0830  160A  158A  2363  120A  158A  	fcall	_teclado_borda
 12617  0835  1683               	bsf	3,5	;RP0=1, select bank1
 12618  0836  1303               	bcf	3,6	;RP1=0, select bank1
 12619  0837  00A0               	movwf	??_main^(0+128)
 12620  0838  0820               	movf	??_main^(0+128),w
 12621  0839  00E1               	movwf	main@tecla^(0+128)
 12622                           
 12623                           ;main.c: 419:                             switch(tecla)
 12624  083A  290C               	goto	l7810
 12625  083B                     l7772:
 12626  083B  0861               	movf	main@tecla^(0+128),w
 12627  083C  160A  158A  261F  120A  158A  	fcall	_alt_atuador
 12628  0841  3004               	movlw	4
 12629  0842  1683               	bsf	3,5	;RP0=1, select bank1
 12630  0843  1303               	bcf	3,6	;RP1=0, select bank1
 12631  0844  00A0               	movwf	??_main^(0+128)
 12632  0845  0820               	movf	??_main^(0+128),w
 12633  0846  1283               	bcf	3,5	;RP0=0, select bank0
 12634  0847  1303               	bcf	3,6	;RP1=0, select bank0
 12635  0848  00A3               	movwf	dispLCD_lincol@col
 12636  0849  3003               	movlw	3
 12637  084A  160A  158A  25BB  120A  158A  	fcall	_dispLCD_lincol
 12638  084F  3041               	movlw	65
 12639  0850  160A  158A  24CD  120A  158A  	fcall	_ler_atuador
 12640  0855  3A00               	xorlw	0
 12641  0856  1D03               	skipz
 12642  0857  2859               	goto	u5951
 12643  0858  285A               	goto	u5950
 12644  0859                     u5951:
 12645  0859  2861               	goto	l7776
 12646  085A                     u5950:
 12647  085A                     l7774:
 12648  085A  302D               	movlw	45
 12649  085B  1683               	bsf	3,5	;RP0=1, select bank1
 12650  085C  1303               	bcf	3,6	;RP1=0, select bank1
 12651  085D  00C3               	movwf	_main$995^(0+128)
 12652  085E  3000               	movlw	0
 12653  085F  00C4               	movwf	(_main$995^(0+128)+1)
 12654  0860  2867               	goto	l7778
 12655  0861                     l7776:
 12656  0861  302B               	movlw	43
 12657  0862  1683               	bsf	3,5	;RP0=1, select bank1
 12658  0863  1303               	bcf	3,6	;RP1=0, select bank1
 12659  0864  00C3               	movwf	_main$995^(0+128)
 12660  0865  3000               	movlw	0
 12661  0866  00C4               	movwf	(_main$995^(0+128)+1)
 12662  0867                     l7778:
 12663  0867  0843               	movf	_main$995^(0+128),w
 12664  0868  160A  158A  258A  120A  158A  	fcall	_dispLCD_dataReg
 12665  086D  2FE5               	goto	l8104
 12666  086E                     l7780:
 12667  086E  0861               	movf	main@tecla^(0+128),w
 12668  086F  160A  158A  261F  120A  158A  	fcall	_alt_atuador
 12669  0874  3008               	movlw	8
 12670  0875  1683               	bsf	3,5	;RP0=1, select bank1
 12671  0876  1303               	bcf	3,6	;RP1=0, select bank1
 12672  0877  00A0               	movwf	??_main^(0+128)
 12673  0878  0820               	movf	??_main^(0+128),w
 12674  0879  1283               	bcf	3,5	;RP0=0, select bank0
 12675  087A  1303               	bcf	3,6	;RP1=0, select bank0
 12676  087B  00A3               	movwf	dispLCD_lincol@col
 12677  087C  3003               	movlw	3
 12678  087D  160A  158A  25BB  120A  158A  	fcall	_dispLCD_lincol
 12679  0882  3042               	movlw	66
 12680  0883  160A  158A  24CD  120A  158A  	fcall	_ler_atuador
 12681  0888  3A00               	xorlw	0
 12682  0889  1D03               	skipz
 12683  088A  288C               	goto	u5961
 12684  088B  288D               	goto	u5960
 12685  088C                     u5961:
 12686  088C  2894               	goto	l7784
 12687  088D                     u5960:
 12688  088D                     l7782:
 12689  088D  302D               	movlw	45
 12690  088E  1683               	bsf	3,5	;RP0=1, select bank1
 12691  088F  1303               	bcf	3,6	;RP1=0, select bank1
 12692  0890  00C5               	movwf	_main$996^(0+128)
 12693  0891  3000               	movlw	0
 12694  0892  00C6               	movwf	(_main$996^(0+128)+1)
 12695  0893  289A               	goto	l7786
 12696  0894                     l7784:
 12697  0894  302B               	movlw	43
 12698  0895  1683               	bsf	3,5	;RP0=1, select bank1
 12699  0896  1303               	bcf	3,6	;RP1=0, select bank1
 12700  0897  00C5               	movwf	_main$996^(0+128)
 12701  0898  3000               	movlw	0
 12702  0899  00C6               	movwf	(_main$996^(0+128)+1)
 12703  089A                     l7786:
 12704  089A  0845               	movf	_main$996^(0+128),w
 12705  089B  160A  158A  258A  120A  158A  	fcall	_dispLCD_dataReg
 12706  08A0  2FE5               	goto	l8104
 12707  08A1                     l7788:
 12708  08A1  0861               	movf	main@tecla^(0+128),w
 12709  08A2  160A  158A  261F  120A  158A  	fcall	_alt_atuador
 12710  08A7  300C               	movlw	12
 12711  08A8  1683               	bsf	3,5	;RP0=1, select bank1
 12712  08A9  1303               	bcf	3,6	;RP1=0, select bank1
 12713  08AA  00A0               	movwf	??_main^(0+128)
 12714  08AB  0820               	movf	??_main^(0+128),w
 12715  08AC  1283               	bcf	3,5	;RP0=0, select bank0
 12716  08AD  1303               	bcf	3,6	;RP1=0, select bank0
 12717  08AE  00A3               	movwf	dispLCD_lincol@col
 12718  08AF  3003               	movlw	3
 12719  08B0  160A  158A  25BB  120A  158A  	fcall	_dispLCD_lincol
 12720  08B5  3043               	movlw	67
 12721  08B6  160A  158A  24CD  120A  158A  	fcall	_ler_atuador
 12722  08BB  3A00               	xorlw	0
 12723  08BC  1D03               	skipz
 12724  08BD  28BF               	goto	u5971
 12725  08BE  28C0               	goto	u5970
 12726  08BF                     u5971:
 12727  08BF  28C7               	goto	l7792
 12728  08C0                     u5970:
 12729  08C0                     l7790:
 12730  08C0  302D               	movlw	45
 12731  08C1  1683               	bsf	3,5	;RP0=1, select bank1
 12732  08C2  1303               	bcf	3,6	;RP1=0, select bank1
 12733  08C3  00C7               	movwf	_main$997^(0+128)
 12734  08C4  3000               	movlw	0
 12735  08C5  00C8               	movwf	(_main$997^(0+128)+1)
 12736  08C6  28CD               	goto	l7794
 12737  08C7                     l7792:
 12738  08C7  302B               	movlw	43
 12739  08C8  1683               	bsf	3,5	;RP0=1, select bank1
 12740  08C9  1303               	bcf	3,6	;RP1=0, select bank1
 12741  08CA  00C7               	movwf	_main$997^(0+128)
 12742  08CB  3000               	movlw	0
 12743  08CC  00C8               	movwf	(_main$997^(0+128)+1)
 12744  08CD                     l7794:
 12745  08CD  0847               	movf	_main$997^(0+128),w
 12746  08CE  160A  158A  258A  120A  158A  	fcall	_dispLCD_dataReg
 12747  08D3  2FE5               	goto	l8104
 12748  08D4                     l7796:
 12749  08D4  0861               	movf	main@tecla^(0+128),w
 12750  08D5  160A  158A  261F  120A  158A  	fcall	_alt_atuador
 12751  08DA  3010               	movlw	16
 12752  08DB  1683               	bsf	3,5	;RP0=1, select bank1
 12753  08DC  1303               	bcf	3,6	;RP1=0, select bank1
 12754  08DD  00A0               	movwf	??_main^(0+128)
 12755  08DE  0820               	movf	??_main^(0+128),w
 12756  08DF  1283               	bcf	3,5	;RP0=0, select bank0
 12757  08E0  1303               	bcf	3,6	;RP1=0, select bank0
 12758  08E1  00A3               	movwf	dispLCD_lincol@col
 12759  08E2  3003               	movlw	3
 12760  08E3  160A  158A  25BB  120A  158A  	fcall	_dispLCD_lincol
 12761  08E8  3044               	movlw	68
 12762  08E9  160A  158A  24CD  120A  158A  	fcall	_ler_atuador
 12763  08EE  3A00               	xorlw	0
 12764  08EF  1D03               	skipz
 12765  08F0  28F2               	goto	u5981
 12766  08F1  28F3               	goto	u5980
 12767  08F2                     u5981:
 12768  08F2  28FA               	goto	l7800
 12769  08F3                     u5980:
 12770  08F3                     l7798:
 12771  08F3  302D               	movlw	45
 12772  08F4  1683               	bsf	3,5	;RP0=1, select bank1
 12773  08F5  1303               	bcf	3,6	;RP1=0, select bank1
 12774  08F6  00C9               	movwf	_main$998^(0+128)
 12775  08F7  3000               	movlw	0
 12776  08F8  00CA               	movwf	(_main$998^(0+128)+1)
 12777  08F9  2900               	goto	l7802
 12778  08FA                     l7800:
 12779  08FA  302B               	movlw	43
 12780  08FB  1683               	bsf	3,5	;RP0=1, select bank1
 12781  08FC  1303               	bcf	3,6	;RP1=0, select bank1
 12782  08FD  00C9               	movwf	_main$998^(0+128)
 12783  08FE  3000               	movlw	0
 12784  08FF  00CA               	movwf	(_main$998^(0+128)+1)
 12785  0900                     l7802:
 12786  0900  0849               	movf	_main$998^(0+128),w
 12787  0901  160A  158A  258A  120A  158A  	fcall	_dispLCD_dataReg
 12788  0906  2FE5               	goto	l8104
 12789  0907                     l7804:
 12790  0907  300A               	movlw	10
 12791  0908  00A0               	movwf	??_main^(0+128)
 12792  0909  0820               	movf	??_main^(0+128),w
 12793  090A  00E0               	movwf	main@estado^(0+128)
 12794  090B  2FE5               	goto	l8104
 12795  090C                     l7810:
 12796  090C  0861               	movf	main@tecla^(0+128),w
 12797  090D  00A0               	movwf	??_main^(0+128)
 12798  090E  01A1               	clrf	(??_main^(0+128)+1)
 12799                           
 12800                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12801                           ; Switch size 1, requested type "simple"
 12802                           ; Number of cases is 1, Range of values is 0 to 0
 12803                           ; switch strategies available:
 12804                           ; Name         Instructions Cycles
 12805                           ; simple_byte            4     3 (average)
 12806                           ; direct_byte           11     8 (fixed)
 12807                           ; jumptable            260     6 (fixed)
 12808                           ;	Chosen strategy is simple_byte
 12809  090F  0821               	movf	(??_main+1)^(0+128),w
 12810  0910  3A00               	xorlw	0	; case 0
 12811  0911  1903               	skipnz
 12812  0912  2914               	goto	l8688
 12813  0913  2FE5               	goto	l8104
 12814  0914                     l8688:
 12815                           
 12816                           ; Switch size 1, requested type "simple"
 12817                           ; Number of cases is 6, Range of values is 35 to 68
 12818                           ; switch strategies available:
 12819                           ; Name         Instructions Cycles
 12820                           ; simple_byte           19    10 (average)
 12821                           ; direct_byte          113    11 (fixed)
 12822                           ; jumptable            263     9 (fixed)
 12823                           ;	Chosen strategy is simple_byte
 12824  0914  0820               	movf	??_main^(0+128),w
 12825  0915  3A23               	xorlw	35	; case 35
 12826  0916  1903               	skipnz
 12827  0917  2907               	goto	l7804
 12828  0918  3A09               	xorlw	9	; case 42
 12829  0919  1903               	skipnz
 12830  091A  2FF1               	goto	L3
 12831  091B  3A6B               	xorlw	107	; case 65
 12832  091C  1903               	skipnz
 12833  091D  283B               	goto	l7772
 12834  091E  3A03               	xorlw	3	; case 66
 12835  091F  1903               	skipnz
 12836  0920  286E               	goto	l7780
 12837  0921  3A01               	xorlw	1	; case 67
 12838  0922  1903               	skipnz
 12839  0923  28A1               	goto	l7788
 12840  0924  3A07               	xorlw	7	; case 68
 12841  0925  1903               	skipnz
 12842  0926  28D4               	goto	l7796
 12843  0927  2FE5               	goto	l8104
 12844  0928                     l7812:
 12845                           
 12846                           ;main.c: 433:                             init_cond = salva_atuadores_init();
 12847  0928  160A  118A  24D0  120A  158A  	fcall	_salva_atuadores_init
 12848  092D  1683               	bsf	3,5	;RP0=1, select bank1
 12849  092E  1303               	bcf	3,6	;RP1=0, select bank1
 12850  092F  00A0               	movwf	??_main^(0+128)
 12851  0930  0820               	movf	??_main^(0+128),w
 12852  0931  00CD               	movwf	main@init_cond^(0+128)
 12853  0932                     l7814:
 12854                           
 12855                           ;main.c: 434:                             IHM.clr();
 12856  0932  0866               	movf	(low ((_IHM| 0+4)))^(0+128),w
 12857  0933  120A  118A  2069  120A  158A  	fcall	fptable
 12858  0938                     l7816:
 12859                           
 12860                           ;main.c: 435:                             IHM.printpos(0, 0, "  INSIRA OS PASSOS  ");
 12861  0938  1283               	bcf	3,5	;RP0=0, select bank0
 12862  0939  1303               	bcf	3,6	;RP1=0, select bank0
 12863  093A  01A8               	clrf	dispLCD@lin
 12864  093B  01A9               	clrf	dispLCD@col
 12865  093C  3002               	movlw	low (STR_8| (0+32768))
 12866  093D  00AA               	movwf	dispLCD@str
 12867  093E  3092               	movlw	high (STR_8| (0+32768))
 12868  093F  00AB               	movwf	dispLCD@str+1
 12869  0940  1683               	bsf	3,5	;RP0=1, select bank1
 12870  0941  1303               	bcf	3,6	;RP1=0, select bank1
 12871  0942  0864               	movf	(low ((_IHM| 0+2)))^(0+128),w
 12872  0943  120A  118A  2069  120A  158A  	fcall	fptable
 12873  0948                     l7818:
 12874                           
 12875                           ;main.c: 436:                             estado = 14;
 12876  0948  300E               	movlw	14
 12877  0949  1683               	bsf	3,5	;RP0=1, select bank1
 12878  094A  1303               	bcf	3,6	;RP1=0, select bank1
 12879  094B  00A0               	movwf	??_main^(0+128)
 12880  094C  0820               	movf	??_main^(0+128),w
 12881  094D  00E0               	movwf	main@estado^(0+128)
 12882                           
 12883                           ;main.c: 437:                             break;
 12884  094E  2FE5               	goto	l8104
 12885  094F                     l7820:
 12886                           
 12887                           ;main.c: 440:                             tecla = teclado_borda();
 12888  094F  160A  158A  2363  120A  158A  	fcall	_teclado_borda
 12889  0954  1683               	bsf	3,5	;RP0=1, select bank1
 12890  0955  1303               	bcf	3,6	;RP1=0, select bank1
 12891  0956  00A0               	movwf	??_main^(0+128)
 12892  0957  0820               	movf	??_main^(0+128),w
 12893  0958  00E1               	movwf	main@tecla^(0+128)
 12894                           
 12895                           ;main.c: 441:                             switch( tecla )
 12896  0959  29C7               	goto	l7858
 12897  095A                     l753:	
 12898                           ;main.c: 445:                                 case 'C':
 12899                           
 12900  095A                     l7822:
 12901                           
 12902                           ;main.c: 447:                                             if( fifo_disponivel() )
 12903  095A  160A  158A  2230  120A  158A  	fcall	_fifo_disponivel
 12904  095F  3A00               	xorlw	0
 12905  0960  1903               	skipnz
 12906  0961  2963               	goto	u5991
 12907  0962  2964               	goto	u5990
 12908  0963                     u5991:
 12909  0963  2FE5               	goto	l8104
 12910  0964                     u5990:
 12911  0964                     l7824:
 12912                           
 12913                           ;main.c: 448:                                             {;main.c: 449:                
      +                                                           alt_atuador(tecla);
 12914  0964  1683               	bsf	3,5	;RP0=1, select bank1
 12915  0965  1303               	bcf	3,6	;RP1=0, select bank1
 12916  0966  0861               	movf	main@tecla^(0+128),w
 12917  0967  160A  158A  261F  120A  158A  	fcall	_alt_atuador
 12918                           
 12919                           ;main.c: 450:                                                 fifo_add( ler_atuador(tecl
      +                          a) ? tecla : tecla|0x20 );
 12920  096C  1683               	bsf	3,5	;RP0=1, select bank1
 12921  096D  1303               	bcf	3,6	;RP1=0, select bank1
 12922  096E  0861               	movf	main@tecla^(0+128),w
 12923  096F  160A  158A  24CD  120A  158A  	fcall	_ler_atuador
 12924  0974  3A00               	xorlw	0
 12925  0975  1D03               	skipz
 12926  0976  2978               	goto	u6001
 12927  0977  2979               	goto	u6000
 12928  0978                     u6001:
 12929  0978  2981               	goto	l7828
 12930  0979                     u6000:
 12931  0979                     l7826:
 12932  0979  3020               	movlw	32
 12933  097A  1683               	bsf	3,5	;RP0=1, select bank1
 12934  097B  1303               	bcf	3,6	;RP1=0, select bank1
 12935  097C  0461               	iorwf	main@tecla^(0+128),w
 12936  097D  00CB               	movwf	_main$1003^(0+128)
 12937  097E  3000               	movlw	0
 12938  097F  00CC               	movwf	(_main$1003+1)^(0+128)
 12939  0980  298A               	goto	l7830
 12940  0981                     l7828:
 12941  0981  1683               	bsf	3,5	;RP0=1, select bank1
 12942  0982  1303               	bcf	3,6	;RP1=0, select bank1
 12943  0983  0861               	movf	main@tecla^(0+128),w
 12944  0984  00A0               	movwf	??_main^(0+128)
 12945  0985  01A1               	clrf	(??_main^(0+128)+1)
 12946  0986  0820               	movf	??_main^(0+128),w
 12947  0987  00CB               	movwf	_main$1003^(0+128)
 12948  0988  0821               	movf	(??_main+1)^(0+128),w
 12949  0989  00CC               	movwf	(_main$1003+1)^(0+128)
 12950  098A                     l7830:
 12951  098A  084B               	movf	_main$1003^(0+128),w
 12952  098B  160A  158A  255A  120A  158A  	fcall	_fifo_add
 12953  0990                     l7832:
 12954                           
 12955                           ;main.c: 451:                                                 estado = 16;
 12956  0990  3010               	movlw	16
 12957  0991  1683               	bsf	3,5	;RP0=1, select bank1
 12958  0992  1303               	bcf	3,6	;RP1=0, select bank1
 12959  0993  00A0               	movwf	??_main^(0+128)
 12960  0994  0820               	movf	??_main^(0+128),w
 12961  0995  00E0               	movwf	main@estado^(0+128)
 12962  0996  2FE5               	goto	l8104
 12963  0997                     l7834:
 12964                           
 12965                           ;main.c: 455:                                             fifo_indicePrint_inc();
 12966  0997  160A  158A  249F  120A  158A  	fcall	_fifo_indicePrint_inc
 12967  099C  2990               	goto	l7832
 12968  099D                     l7838:
 12969                           
 12970                           ;main.c: 459:                                             fifo_indicePrint_dec();
 12971  099D  160A  158A  223B  120A  158A  	fcall	_fifo_indicePrint_dec
 12972  09A2  2990               	goto	l7832
 12973  09A3                     l7842:
 12974                           
 12975                           ;main.c: 464:                                             if(fifo_indice() == 2 )
 12976  09A3  120A  118A  27FC  120A  158A  	fcall	_fifo_indice
 12977  09A8  3A02               	xorlw	2
 12978  09A9  1D03               	skipz
 12979  09AA  29AC               	goto	u6011
 12980  09AB  29AD               	goto	u6010
 12981  09AC                     u6011:
 12982  09AC  29B0               	goto	l7846
 12983  09AD                     u6010:
 12984  09AD  120A  118A  2B32   	goto	l7712
 12985  09B0                     l7846:
 12986                           
 12987                           ;main.c: 467:                                             {;main.c: 468:                
      +                                                           fifo_delete();
 12988  09B0  160A  118A  23DC  120A  158A  	fcall	_fifo_delete
 12989  09B5  2990               	goto	l7832
 12990  09B6                     l7850:
 12991  09B6  304A               	movlw	74
 12992  09B7  1683               	bsf	3,5	;RP0=1, select bank1
 12993  09B8  1303               	bcf	3,6	;RP1=0, select bank1
 12994  09B9  00A0               	movwf	??_main^(0+128)
 12995  09BA  0820               	movf	??_main^(0+128),w
 12996  09BB  00E0               	movwf	main@estado^(0+128)
 12997  09BC  2FE5               	goto	l8104
 12998  09BD                     l7852:
 12999  09BD  3029               	movlw	41
 13000  09BE  00A0               	movwf	??_main^(0+128)
 13001  09BF  0820               	movf	??_main^(0+128),w
 13002  09C0  00E0               	movwf	main@estado^(0+128)
 13003  09C1  2FE5               	goto	l8104
 13004  09C2                     l7854:
 13005  09C2  305A               	movlw	90
 13006  09C3  00A0               	movwf	??_main^(0+128)
 13007  09C4  0820               	movf	??_main^(0+128),w
 13008  09C5  00E0               	movwf	main@estado^(0+128)
 13009  09C6  2FE5               	goto	l8104
 13010  09C7                     l7858:
 13011  09C7  0861               	movf	main@tecla^(0+128),w
 13012  09C8  00A0               	movwf	??_main^(0+128)
 13013  09C9  01A1               	clrf	(??_main^(0+128)+1)
 13014                           
 13015                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13016                           ; Switch size 1, requested type "simple"
 13017                           ; Number of cases is 1, Range of values is 0 to 0
 13018                           ; switch strategies available:
 13019                           ; Name         Instructions Cycles
 13020                           ; simple_byte            4     3 (average)
 13021                           ; direct_byte           11     8 (fixed)
 13022                           ; jumptable            260     6 (fixed)
 13023                           ;	Chosen strategy is simple_byte
 13024  09CA  0821               	movf	(??_main+1)^(0+128),w
 13025  09CB  3A00               	xorlw	0	; case 0
 13026  09CC  1903               	skipnz
 13027  09CD  29CF               	goto	l8690
 13028  09CE  2FE5               	goto	l8104
 13029  09CF                     l8690:
 13030                           
 13031                           ; Switch size 1, requested type "simple"
 13032                           ; Number of cases is 10, Range of values is 35 to 68
 13033                           ; switch strategies available:
 13034                           ; Name         Instructions Cycles
 13035                           ; simple_byte           31    16 (average)
 13036                           ; direct_byte          113    11 (fixed)
 13037                           ; jumptable            263     9 (fixed)
 13038                           ;	Chosen strategy is simple_byte
 13039  09CF  0820               	movf	??_main^(0+128),w
 13040  09D0  3A23               	xorlw	35	; case 35
 13041  09D1  1903               	skipnz
 13042  09D2  29B6               	goto	l7850
 13043  09D3  3A09               	xorlw	9	; case 42
 13044  09D4  1903               	skipnz
 13045  09D5  29A3               	goto	l7842
 13046  09D6  3A1A               	xorlw	26	; case 48
 13047  09D7  1903               	skipnz
 13048  09D8  29BD               	goto	l7852
 13049  09D9  3A04               	xorlw	4	; case 52
 13050  09DA  1903               	skipnz
 13051  09DB  299D               	goto	l7838
 13052  09DC  3A02               	xorlw	2	; case 54
 13053  09DD  1903               	skipnz
 13054  09DE  2997               	goto	l7834
 13055  09DF  3A0F               	xorlw	15	; case 57
 13056  09E0  1903               	skipnz
 13057  09E1  29C2               	goto	l7854
 13058  09E2  3A78               	xorlw	120	; case 65
 13059  09E3  1903               	skipnz
 13060  09E4  295A               	goto	l753
 13061  09E5  3A03               	xorlw	3	; case 66
 13062  09E6  1903               	skipnz
 13063  09E7  295A               	goto	l7822
 13064  09E8  3A01               	xorlw	1	; case 67
 13065  09E9  1903               	skipnz
 13066  09EA  295A               	goto	l7822
 13067  09EB  3A07               	xorlw	7	; case 68
 13068  09EC  1903               	skipnz
 13069  09ED  295A               	goto	l7822
 13070  09EE  2FE5               	goto	l8104
 13071  09EF                     l7860:
 13072                           
 13073                           ;main.c: 482:                             fifo_print();
 13074  09EF  120A  118A  2093  120A  158A  	fcall	_fifo_print
 13075  09F4  2948               	goto	l7818
 13076  09F5                     l7864:
 13077                           
 13078                           ;main.c: 487:                             IHM.printpos(3,0,"<  /  >");
 13079  09F5  3003               	movlw	3
 13080  09F6  00A0               	movwf	??_main^(0+128)
 13081  09F7  0820               	movf	??_main^(0+128),w
 13082  09F8  1283               	bcf	3,5	;RP0=0, select bank0
 13083  09F9  1303               	bcf	3,6	;RP1=0, select bank0
 13084  09FA  00A8               	movwf	dispLCD@lin
 13085  09FB  01A9               	clrf	dispLCD@col
 13086  09FC  30E1               	movlw	low (STR_9| (0+32768))
 13087  09FD  00AA               	movwf	dispLCD@str
 13088  09FE  3092               	movlw	high (STR_9| (0+32768))
 13089  09FF  00AB               	movwf	dispLCD@str+1
 13090  0A00  1683               	bsf	3,5	;RP0=1, select bank1
 13091  0A01  1303               	bcf	3,6	;RP1=0, select bank1
 13092  0A02  0864               	movf	(low ((_IHM| 0+2)))^(0+128),w
 13093  0A03  120A  118A  2069  120A  158A  	fcall	fptable
 13094                           
 13095                           ;main.c: 488:                             IHM.printv(3, 1,( fifo_indice()-2 ), 2);
 13096  0A08  3003               	movlw	3
 13097  0A09  1683               	bsf	3,5	;RP0=1, select bank1
 13098  0A0A  1303               	bcf	3,6	;RP1=0, select bank1
 13099  0A0B  00A0               	movwf	??_main^(0+128)
 13100  0A0C  0820               	movf	??_main^(0+128),w
 13101  0A0D  1283               	bcf	3,5	;RP0=0, select bank0
 13102  0A0E  1303               	bcf	3,6	;RP1=0, select bank0
 13103  0A0F  00AD               	movwf	dispLCD_num@lin
 13104  0A10  01AE               	clrf	dispLCD_num@col
 13105  0A11  0AAE               	incf	dispLCD_num@col,f
 13106  0A12  120A  118A  27FC  120A  158A  	fcall	_fifo_indice
 13107  0A17  3EFE               	addlw	254
 13108  0A18  1283               	bcf	3,5	;RP0=0, select bank0
 13109  0A19  1303               	bcf	3,6	;RP1=0, select bank0
 13110  0A1A  00AF               	movwf	dispLCD_num@num
 13111  0A1B  30FF               	movlw	255
 13112  0A1C  1803               	skipnc
 13113  0A1D  3000               	movlw	0
 13114  0A1E  00B0               	movwf	dispLCD_num@num+1
 13115  0A1F  3002               	movlw	2
 13116  0A20  1683               	bsf	3,5	;RP0=1, select bank1
 13117  0A21  1303               	bcf	3,6	;RP1=0, select bank1
 13118  0A22  00A1               	movwf	(??_main+1)^(0+128)
 13119  0A23  0821               	movf	(??_main+1)^(0+128),w
 13120  0A24  1283               	bcf	3,5	;RP0=0, select bank0
 13121  0A25  1303               	bcf	3,6	;RP1=0, select bank0
 13122  0A26  00B1               	movwf	dispLCD_num@tam
 13123  0A27  1683               	bsf	3,5	;RP0=1, select bank1
 13124  0A28  1303               	bcf	3,6	;RP1=0, select bank1
 13125  0A29  0865               	movf	(low ((_IHM| 0+3)))^(0+128),w
 13126  0A2A  120A  118A  2069  120A  158A  	fcall	fptable
 13127                           
 13128                           ;main.c: 489:                             IHM.printv(3, 4,( fifo_tam()-2 ), 2);
 13129  0A2F  3003               	movlw	3
 13130  0A30  1683               	bsf	3,5	;RP0=1, select bank1
 13131  0A31  1303               	bcf	3,6	;RP1=0, select bank1
 13132  0A32  00A0               	movwf	??_main^(0+128)
 13133  0A33  0820               	movf	??_main^(0+128),w
 13134  0A34  1283               	bcf	3,5	;RP0=0, select bank0
 13135  0A35  1303               	bcf	3,6	;RP1=0, select bank0
 13136  0A36  00AD               	movwf	dispLCD_num@lin
 13137  0A37  3004               	movlw	4
 13138  0A38  1683               	bsf	3,5	;RP0=1, select bank1
 13139  0A39  1303               	bcf	3,6	;RP1=0, select bank1
 13140  0A3A  00A1               	movwf	(??_main+1)^(0+128)
 13141  0A3B  0821               	movf	(??_main+1)^(0+128),w
 13142  0A3C  1283               	bcf	3,5	;RP0=0, select bank0
 13143  0A3D  1303               	bcf	3,6	;RP1=0, select bank0
 13144  0A3E  00AE               	movwf	dispLCD_num@col
 13145  0A3F  160A  158A  21B3  120A  158A  	fcall	_fifo_tam
 13146  0A44  3EFE               	addlw	254
 13147  0A45  1283               	bcf	3,5	;RP0=0, select bank0
 13148  0A46  1303               	bcf	3,6	;RP1=0, select bank0
 13149  0A47  00AF               	movwf	dispLCD_num@num
 13150  0A48  30FF               	movlw	255
 13151  0A49  1803               	skipnc
 13152  0A4A  3000               	movlw	0
 13153  0A4B  00B0               	movwf	dispLCD_num@num+1
 13154  0A4C  3002               	movlw	2
 13155  0A4D  1683               	bsf	3,5	;RP0=1, select bank1
 13156  0A4E  1303               	bcf	3,6	;RP1=0, select bank1
 13157  0A4F  00A2               	movwf	(??_main+2)^(0+128)
 13158  0A50  0822               	movf	(??_main+2)^(0+128),w
 13159  0A51  1283               	bcf	3,5	;RP0=0, select bank0
 13160  0A52  1303               	bcf	3,6	;RP1=0, select bank0
 13161  0A53  00B1               	movwf	dispLCD_num@tam
 13162  0A54  1683               	bsf	3,5	;RP0=1, select bank1
 13163  0A55  1303               	bcf	3,6	;RP1=0, select bank1
 13164  0A56  0865               	movf	(low ((_IHM| 0+3)))^(0+128),w
 13165  0A57  120A  118A  2069  120A  158A  	fcall	fptable
 13166  0A5C                     l7866:
 13167                           
 13168                           ;main.c: 490:                             estado = 11;
 13169  0A5C  300B               	movlw	11
 13170  0A5D  1683               	bsf	3,5	;RP0=1, select bank1
 13171  0A5E  1303               	bcf	3,6	;RP1=0, select bank1
 13172  0A5F  00A0               	movwf	??_main^(0+128)
 13173  0A60  0820               	movf	??_main^(0+128),w
 13174  0A61  00E0               	movwf	main@estado^(0+128)
 13175                           
 13176                           ;main.c: 491:                             break;
 13177  0A62  2FE5               	goto	l8104
 13178  0A63                     l7868:
 13179                           
 13180                           ;main.c: 495:                             estado = 70;
 13181  0A63  3046               	movlw	70
 13182  0A64  00A0               	movwf	??_main^(0+128)
 13183  0A65  0820               	movf	??_main^(0+128),w
 13184  0A66  00E0               	movwf	main@estado^(0+128)
 13185  0A67                     l7870:
 13186                           
 13187                           ;main.c: 496:                             meAtuadores = 1;
 13188  0A67  01D1               	clrf	main@meAtuadores^(0+128)
 13189  0A68  0AD1               	incf	main@meAtuadores^(0+128),f
 13190                           
 13191                           ;main.c: 497:                             break;
 13192  0A69  2FE5               	goto	l8104
 13193  0A6A                     l7872:
 13194                           
 13195                           ;main.c: 500:                             if( meAtuadores == 3 && botao != 2 )
 13196  0A6A  3003               	movlw	3
 13197  0A6B  0651               	xorwf	main@meAtuadores^(0+128),w
 13198  0A6C  1D03               	btfss	3,2
 13199  0A6D  2A6F               	goto	u6021
 13200  0A6E  2A70               	goto	u6020
 13201  0A6F                     u6021:
 13202  0A6F  2B3F               	goto	l7878
 13203  0A70                     u6020:
 13204  0A70                     l7874:
 13205  0A70  3002               	movlw	2
 13206  0A71  065B               	xorwf	main@botao^(0+128),w
 13207  0A72  1903               	btfsc	3,2
 13208  0A73  2A75               	goto	u6031
 13209  0A74  2A76               	goto	u6030
 13210  0A75                     u6031:
 13211  0A75  2B3F               	goto	l7878
 13212  0A76                     u6030:
 13213  0A76                     l7876:
 13214                           
 13215                           ;main.c: 501:                             {;main.c: 502:                                
      +                           IHM.printpos(0, 0, "       [    ]       ");
 13216  0A76  1283               	bcf	3,5	;RP0=0, select bank0
 13217  0A77  1303               	bcf	3,6	;RP1=0, select bank0
 13218  0A78  01A8               	clrf	dispLCD@lin
 13219  0A79  01A9               	clrf	dispLCD@col
 13220  0A7A  3099               	movlw	low (STR_10| (0+32768))
 13221  0A7B  00AA               	movwf	dispLCD@str
 13222  0A7C  3091               	movlw	high (STR_10| (0+32768))
 13223  0A7D  00AB               	movwf	dispLCD@str+1
 13224  0A7E  1683               	bsf	3,5	;RP0=1, select bank1
 13225  0A7F  1303               	bcf	3,6	;RP1=0, select bank1
 13226  0A80  0864               	movf	(low ((_IHM| 0+2)))^(0+128),w
 13227  0A81  120A  118A  2069  120A  158A  	fcall	fptable
 13228                           
 13229                           ;main.c: 503:                                 printExec(1, -1);
 13230  0A86  30FF               	movlw	255
 13231  0A87  1683               	bsf	3,5	;RP0=1, select bank1
 13232  0A88  1303               	bcf	3,6	;RP1=0, select bank1
 13233  0A89  00A0               	movwf	??_main^(0+128)
 13234  0A8A  0820               	movf	??_main^(0+128),w
 13235  0A8B  1283               	bcf	3,5	;RP0=0, select bank0
 13236  0A8C  1303               	bcf	3,6	;RP1=0, select bank0
 13237  0A8D  00B9               	movwf	printExec@ind
 13238  0A8E  3001               	movlw	1
 13239  0A8F  120A  118A  2565  120A  158A  	fcall	_printExec
 13240                           
 13241                           ;main.c: 504:                                 printExec(9, 0);
 13242  0A94  1283               	bcf	3,5	;RP0=0, select bank0
 13243  0A95  1303               	bcf	3,6	;RP1=0, select bank0
 13244  0A96  01B9               	clrf	printExec@ind
 13245  0A97  3009               	movlw	9
 13246  0A98  120A  118A  2565  120A  158A  	fcall	_printExec
 13247                           
 13248                           ;main.c: 505:                                 printExec(14, 1);
 13249  0A9D  1283               	bcf	3,5	;RP0=0, select bank0
 13250  0A9E  1303               	bcf	3,6	;RP1=0, select bank0
 13251  0A9F  01B9               	clrf	printExec@ind
 13252  0AA0  0AB9               	incf	printExec@ind,f
 13253  0AA1  300E               	movlw	14
 13254  0AA2  120A  118A  2565  120A  158A  	fcall	_printExec
 13255                           
 13256                           ;main.c: 506:                                 IHM.printpos(2, 0, "<  /  > c:          ")
      +                          ;
 13257  0AA7  3002               	movlw	2
 13258  0AA8  1683               	bsf	3,5	;RP0=1, select bank1
 13259  0AA9  1303               	bcf	3,6	;RP1=0, select bank1
 13260  0AAA  00A0               	movwf	??_main^(0+128)
 13261  0AAB  0820               	movf	??_main^(0+128),w
 13262  0AAC  1283               	bcf	3,5	;RP0=0, select bank0
 13263  0AAD  1303               	bcf	3,6	;RP1=0, select bank0
 13264  0AAE  00A8               	movwf	dispLCD@lin
 13265  0AAF  01A9               	clrf	dispLCD@col
 13266  0AB0  305A               	movlw	low (STR_11| (0+32768))
 13267  0AB1  00AA               	movwf	dispLCD@str
 13268  0AB2  3091               	movlw	high (STR_11| (0+32768))
 13269  0AB3  00AB               	movwf	dispLCD@str+1
 13270  0AB4  1683               	bsf	3,5	;RP0=1, select bank1
 13271  0AB5  1303               	bcf	3,6	;RP1=0, select bank1
 13272  0AB6  0864               	movf	(low ((_IHM| 0+2)))^(0+128),w
 13273  0AB7  120A  118A  2069  120A  158A  	fcall	fptable
 13274                           
 13275                           ;main.c: 507:                                 IHM.printv(2, 4,( fifo_indice() - 2 ), 2);
 13276  0ABC  3002               	movlw	2
 13277  0ABD  1683               	bsf	3,5	;RP0=1, select bank1
 13278  0ABE  1303               	bcf	3,6	;RP1=0, select bank1
 13279  0ABF  00A0               	movwf	??_main^(0+128)
 13280  0AC0  0820               	movf	??_main^(0+128),w
 13281  0AC1  1283               	bcf	3,5	;RP0=0, select bank0
 13282  0AC2  1303               	bcf	3,6	;RP1=0, select bank0
 13283  0AC3  00AD               	movwf	dispLCD_num@lin
 13284  0AC4  3004               	movlw	4
 13285  0AC5  1683               	bsf	3,5	;RP0=1, select bank1
 13286  0AC6  1303               	bcf	3,6	;RP1=0, select bank1
 13287  0AC7  00A1               	movwf	(??_main+1)^(0+128)
 13288  0AC8  0821               	movf	(??_main+1)^(0+128),w
 13289  0AC9  1283               	bcf	3,5	;RP0=0, select bank0
 13290  0ACA  1303               	bcf	3,6	;RP1=0, select bank0
 13291  0ACB  00AE               	movwf	dispLCD_num@col
 13292  0ACC  120A  118A  27FC  120A  158A  	fcall	_fifo_indice
 13293  0AD1  3EFE               	addlw	254
 13294  0AD2  1283               	bcf	3,5	;RP0=0, select bank0
 13295  0AD3  1303               	bcf	3,6	;RP1=0, select bank0
 13296  0AD4  00AF               	movwf	dispLCD_num@num
 13297  0AD5  30FF               	movlw	255
 13298  0AD6  1803               	skipnc
 13299  0AD7  3000               	movlw	0
 13300  0AD8  00B0               	movwf	dispLCD_num@num+1
 13301  0AD9  3002               	movlw	2
 13302  0ADA  1683               	bsf	3,5	;RP0=1, select bank1
 13303  0ADB  1303               	bcf	3,6	;RP1=0, select bank1
 13304  0ADC  00A2               	movwf	(??_main+2)^(0+128)
 13305  0ADD  0822               	movf	(??_main+2)^(0+128),w
 13306  0ADE  1283               	bcf	3,5	;RP0=0, select bank0
 13307  0ADF  1303               	bcf	3,6	;RP1=0, select bank0
 13308  0AE0  00B1               	movwf	dispLCD_num@tam
 13309  0AE1  1683               	bsf	3,5	;RP0=1, select bank1
 13310  0AE2  1303               	bcf	3,6	;RP1=0, select bank1
 13311  0AE3  0865               	movf	(low ((_IHM| 0+3)))^(0+128),w
 13312  0AE4  120A  118A  2069  120A  158A  	fcall	fptable
 13313                           
 13314                           ;main.c: 508:                                 IHM.printv(2, 1, ( getIndicePassos() - 1 )
      +                          , 2);
 13315  0AE9  3002               	movlw	2
 13316  0AEA  1683               	bsf	3,5	;RP0=1, select bank1
 13317  0AEB  1303               	bcf	3,6	;RP1=0, select bank1
 13318  0AEC  00A0               	movwf	??_main^(0+128)
 13319  0AED  0820               	movf	??_main^(0+128),w
 13320  0AEE  1283               	bcf	3,5	;RP0=0, select bank0
 13321  0AEF  1303               	bcf	3,6	;RP1=0, select bank0
 13322  0AF0  00AD               	movwf	dispLCD_num@lin
 13323  0AF1  01AE               	clrf	dispLCD_num@col
 13324  0AF2  0AAE               	incf	dispLCD_num@col,f
 13325  0AF3  160A  158A  21B5  120A  158A  	fcall	_getIndicePassos
 13326  0AF8  3EFF               	addlw	255
 13327  0AF9  1283               	bcf	3,5	;RP0=0, select bank0
 13328  0AFA  1303               	bcf	3,6	;RP1=0, select bank0
 13329  0AFB  00AF               	movwf	dispLCD_num@num
 13330  0AFC  30FF               	movlw	255
 13331  0AFD  1803               	skipnc
 13332  0AFE  3000               	movlw	0
 13333  0AFF  00B0               	movwf	dispLCD_num@num+1
 13334  0B00  3002               	movlw	2
 13335  0B01  1683               	bsf	3,5	;RP0=1, select bank1
 13336  0B02  1303               	bcf	3,6	;RP1=0, select bank1
 13337  0B03  00A1               	movwf	(??_main+1)^(0+128)
 13338  0B04  0821               	movf	(??_main+1)^(0+128),w
 13339  0B05  1283               	bcf	3,5	;RP0=0, select bank0
 13340  0B06  1303               	bcf	3,6	;RP1=0, select bank0
 13341  0B07  00B1               	movwf	dispLCD_num@tam
 13342  0B08  1683               	bsf	3,5	;RP0=1, select bank1
 13343  0B09  1303               	bcf	3,6	;RP1=0, select bank1
 13344  0B0A  0865               	movf	(low ((_IHM| 0+3)))^(0+128),w
 13345  0B0B  120A  118A  2069  120A  158A  	fcall	fptable
 13346                           
 13347                           ;main.c: 509:                                 IHM.printv(2, 11, ( getContCiclos() + 1 ),
      +                           5);
 13348  0B10  3002               	movlw	2
 13349  0B11  1683               	bsf	3,5	;RP0=1, select bank1
 13350  0B12  1303               	bcf	3,6	;RP1=0, select bank1
 13351  0B13  00A0               	movwf	??_main^(0+128)
 13352  0B14  0820               	movf	??_main^(0+128),w
 13353  0B15  1283               	bcf	3,5	;RP0=0, select bank0
 13354  0B16  1303               	bcf	3,6	;RP1=0, select bank0
 13355  0B17  00AD               	movwf	dispLCD_num@lin
 13356  0B18  300B               	movlw	11
 13357  0B19  1683               	bsf	3,5	;RP0=1, select bank1
 13358  0B1A  1303               	bcf	3,6	;RP1=0, select bank1
 13359  0B1B  00A1               	movwf	(??_main+1)^(0+128)
 13360  0B1C  0821               	movf	(??_main+1)^(0+128),w
 13361  0B1D  1283               	bcf	3,5	;RP0=0, select bank0
 13362  0B1E  1303               	bcf	3,6	;RP1=0, select bank0
 13363  0B1F  00AE               	movwf	dispLCD_num@col
 13364  0B20  160A  158A  21D4  120A  158A  	fcall	_getContCiclos
 13365  0B25  1283               	bcf	3,5	;RP0=0, select bank0
 13366  0B26  1303               	bcf	3,6	;RP1=0, select bank0
 13367  0B27  0820               	movf	?_getContCiclos,w
 13368  0B28  3E01               	addlw	1
 13369  0B29  00AF               	movwf	dispLCD_num@num
 13370  0B2A  0821               	movf	?_getContCiclos+1,w
 13371  0B2B  1803               	skipnc
 13372  0B2C  3E01               	addlw	1
 13373  0B2D  3E00               	addlw	0
 13374  0B2E  00B0               	movwf	dispLCD_num@num+1
 13375  0B2F  3005               	movlw	5
 13376  0B30  1683               	bsf	3,5	;RP0=1, select bank1
 13377  0B31  1303               	bcf	3,6	;RP1=0, select bank1
 13378  0B32  00A2               	movwf	(??_main+2)^(0+128)
 13379  0B33  0822               	movf	(??_main+2)^(0+128),w
 13380  0B34  1283               	bcf	3,5	;RP0=0, select bank0
 13381  0B35  1303               	bcf	3,6	;RP1=0, select bank0
 13382  0B36  00B1               	movwf	dispLCD_num@tam
 13383  0B37  1683               	bsf	3,5	;RP0=1, select bank1
 13384  0B38  1303               	bcf	3,6	;RP1=0, select bank1
 13385  0B39  0865               	movf	(low ((_IHM| 0+3)))^(0+128),w
 13386  0B3A  120A  118A  2069  120A  158A  	fcall	fptable
 13387  0B3F                     l7878:
 13388                           
 13389                           ;main.c: 512:                             if(meAtuadores == 0)
 13390  0B3F  1683               	bsf	3,5	;RP0=1, select bank1
 13391  0B40  1303               	bcf	3,6	;RP1=0, select bank1
 13392  0B41  0851               	movf	main@meAtuadores^(0+128),w
 13393  0B42  1D03               	btfss	3,2
 13394  0B43  2B45               	goto	u6041
 13395  0B44  2B46               	goto	u6040
 13396  0B45                     u6041:
 13397  0B45  2B50               	goto	l7884
 13398  0B46                     u6040:
 13399  0B46                     l7880:
 13400                           
 13401                           ;main.c: 513:                             {;main.c: 514:                                
      +                           estado = 16;
 13402  0B46  3010               	movlw	16
 13403  0B47  00A0               	movwf	??_main^(0+128)
 13404  0B48  0820               	movf	??_main^(0+128),w
 13405  0B49  00E0               	movwf	main@estado^(0+128)
 13406  0B4A                     l7882:
 13407                           
 13408                           ;main.c: 515:                                 IHM.clr();
 13409  0B4A  0866               	movf	(low ((_IHM| 0+4)))^(0+128),w
 13410  0B4B  120A  118A  2069  120A  158A  	fcall	fptable
 13411  0B50                     l7884:
 13412                           
 13413                           ;main.c: 517:                             tecla = teclado_borda();
 13414  0B50  160A  158A  2363  120A  158A  	fcall	_teclado_borda
 13415  0B55  1683               	bsf	3,5	;RP0=1, select bank1
 13416  0B56  1303               	bcf	3,6	;RP1=0, select bank1
 13417  0B57  00A0               	movwf	??_main^(0+128)
 13418  0B58  0820               	movf	??_main^(0+128),w
 13419  0B59  00E1               	movwf	main@tecla^(0+128)
 13420                           
 13421                           ;main.c: 518:                             switch(tecla)
 13422  0B5A  2B70               	goto	l7896
 13423  0B5B                     l776:	
 13424                           ;main.c: 519:                             {;main.c: 520:                                
      +                           case '#':
 13425                           
 13426                           
 13427                           ;main.c: 521:                                     botao = 1;
 13428  0B5B  01DB               	clrf	main@botao^(0+128)
 13429  0B5C  0ADB               	incf	main@botao^(0+128),f
 13430                           
 13431                           ;main.c: 522:                                     break;
 13432  0B5D  2FE5               	goto	l8104
 13433  0B5E                     l7886:
 13434                           
 13435                           ;main.c: 525:                                     botao = 2;
 13436  0B5E  3002               	movlw	2
 13437  0B5F  00A0               	movwf	??_main^(0+128)
 13438  0B60  0820               	movf	??_main^(0+128),w
 13439  0B61  00DB               	movwf	main@botao^(0+128)
 13440                           
 13441                           ;main.c: 526:                                     break;
 13442  0B62  2FE5               	goto	l8104
 13443  0B63                     l7888:
 13444                           
 13445                           ;main.c: 529:                                     botao = 0;
 13446  0B63  01DB               	clrf	main@botao^(0+128)
 13447                           
 13448                           ;main.c: 530:                                     break;
 13449  0B64  2FE5               	goto	l8104
 13450  0B65                     l7890:
 13451                           
 13452                           ;main.c: 533:                                     if(botao == 2)
 13453  0B65  3002               	movlw	2
 13454  0B66  065B               	xorwf	main@botao^(0+128),w
 13455  0B67  1D03               	btfss	3,2
 13456  0B68  2B6A               	goto	u6051
 13457  0B69  2B6B               	goto	u6050
 13458  0B6A                     u6051:
 13459  0B6A  2FE5               	goto	l8104
 13460  0B6B                     u6050:
 13461  0B6B                     l7892:
 13462                           
 13463                           ;main.c: 534:                                         botao = 3;
 13464  0B6B  3003               	movlw	3
 13465  0B6C  00A0               	movwf	??_main^(0+128)
 13466  0B6D  0820               	movf	??_main^(0+128),w
 13467  0B6E  00DB               	movwf	main@botao^(0+128)
 13468  0B6F  2FE5               	goto	l8104
 13469  0B70                     l7896:
 13470  0B70  0861               	movf	main@tecla^(0+128),w
 13471  0B71  00A0               	movwf	??_main^(0+128)
 13472  0B72  01A1               	clrf	(??_main^(0+128)+1)
 13473                           
 13474                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13475                           ; Switch size 1, requested type "simple"
 13476                           ; Number of cases is 1, Range of values is 0 to 0
 13477                           ; switch strategies available:
 13478                           ; Name         Instructions Cycles
 13479                           ; simple_byte            4     3 (average)
 13480                           ; direct_byte           11     8 (fixed)
 13481                           ; jumptable            260     6 (fixed)
 13482                           ;	Chosen strategy is simple_byte
 13483  0B73  0821               	movf	(??_main+1)^(0+128),w
 13484  0B74  3A00               	xorlw	0	; case 0
 13485  0B75  1903               	skipnz
 13486  0B76  2B78               	goto	l8692
 13487  0B77  2FE5               	goto	l8104
 13488  0B78                     l8692:
 13489                           
 13490                           ; Switch size 1, requested type "simple"
 13491                           ; Number of cases is 4, Range of values is 35 to 53
 13492                           ; switch strategies available:
 13493                           ; Name         Instructions Cycles
 13494                           ; simple_byte           13     7 (average)
 13495                           ; direct_byte           68    11 (fixed)
 13496                           ; jumptable            263     9 (fixed)
 13497                           ;	Chosen strategy is simple_byte
 13498  0B78  0820               	movf	??_main^(0+128),w
 13499  0B79  3A23               	xorlw	35	; case 35
 13500  0B7A  1903               	skipnz
 13501  0B7B  2B5B               	goto	l776
 13502  0B7C  3A13               	xorlw	19	; case 48
 13503  0B7D  1903               	skipnz
 13504  0B7E  2B63               	goto	l7888
 13505  0B7F  3A01               	xorlw	1	; case 49
 13506  0B80  1903               	skipnz
 13507  0B81  2B65               	goto	l7890
 13508  0B82  3A04               	xorlw	4	; case 53
 13509  0B83  1903               	skipnz
 13510  0B84  2B5E               	goto	l7886
 13511  0B85  2FE5               	goto	l8104
 13512  0B86                     l7898:
 13513                           
 13514                           ;main.c: 540:                             tecla = teclado_borda();
 13515  0B86  160A  158A  2363  120A  158A  	fcall	_teclado_borda
 13516  0B8B  1683               	bsf	3,5	;RP0=1, select bank1
 13517  0B8C  1303               	bcf	3,6	;RP1=0, select bank1
 13518  0B8D  00A0               	movwf	??_main^(0+128)
 13519  0B8E  0820               	movf	??_main^(0+128),w
 13520  0B8F  00E1               	movwf	main@tecla^(0+128)
 13521  0B90                     l7900:
 13522                           
 13523                           ;main.c: 541:                             if(tecla >= '0' && tecla <= '9')
 13524  0B90  3030               	movlw	48
 13525  0B91  0261               	subwf	main@tecla^(0+128),w
 13526  0B92  1C03               	skipc
 13527  0B93  2B95               	goto	u6061
 13528  0B94  2B96               	goto	u6060
 13529  0B95                     u6061:
 13530  0B95  2BBD               	goto	l7910
 13531  0B96                     u6060:
 13532  0B96                     l7902:
 13533  0B96  303A               	movlw	58
 13534  0B97  0261               	subwf	main@tecla^(0+128),w
 13535  0B98  1803               	skipnc
 13536  0B99  2B9B               	goto	u6071
 13537  0B9A  2B9C               	goto	u6070
 13538  0B9B                     u6071:
 13539  0B9B  2BBD               	goto	l7910
 13540  0B9C                     u6070:
 13541  0B9C                     l7904:
 13542                           
 13543                           ;main.c: 542:                             {;main.c: 543:                                
      +                           dignum_conc(tecla, &num);
 13544  0B9C  30DE               	movlw	(low (main@num| 0))& (0+255)
 13545  0B9D  00A0               	movwf	??_main^(0+128)
 13546  0B9E  0820               	movf	??_main^(0+128),w
 13547  0B9F  1283               	bcf	3,5	;RP0=0, select bank0
 13548  0BA0  1303               	bcf	3,6	;RP1=0, select bank0
 13549  0BA1  00A6               	movwf	dignum_conc@ptrNum
 13550  0BA2  1683               	bsf	3,5	;RP0=1, select bank1
 13551  0BA3  1303               	bcf	3,6	;RP1=0, select bank1
 13552  0BA4  0861               	movf	main@tecla^(0+128),w
 13553  0BA5  160A  158A  24FB  120A  158A  	fcall	_dignum_conc
 13554  0BAA                     l7906:
 13555                           
 13556                           ;main.c: 544:                                 if(num > 120)
 13557  0BAA  3000               	movlw	0
 13558  0BAB  1683               	bsf	3,5	;RP0=1, select bank1
 13559  0BAC  1303               	bcf	3,6	;RP1=0, select bank1
 13560  0BAD  025F               	subwf	(main@num+1)^(0+128),w
 13561  0BAE  3079               	movlw	121
 13562  0BAF  1903               	skipnz
 13563  0BB0  025E               	subwf	main@num^(0+128),w
 13564  0BB1  1C03               	skipc
 13565  0BB2  2BB4               	goto	u6081
 13566  0BB3  2BB5               	goto	u6080
 13567  0BB4                     u6081:
 13568  0BB4  2BB9               	goto	l784
 13569  0BB5                     u6080:
 13570  0BB5                     l7908:
 13571                           
 13572                           ;main.c: 545:                                     num = 120;
 13573  0BB5  3078               	movlw	120
 13574  0BB6  00DE               	movwf	main@num^(0+128)
 13575  0BB7  3000               	movlw	0
 13576  0BB8  00DF               	movwf	(main@num^(0+128)+1)
 13577  0BB9                     l784:
 13578                           
 13579                           ;main.c: 546:                                 estado = 41;
 13580  0BB9  3029               	movlw	41
 13581  0BBA  00A0               	movwf	??_main^(0+128)
 13582  0BBB  0820               	movf	??_main^(0+128),w
 13583  0BBC  00E0               	movwf	main@estado^(0+128)
 13584  0BBD                     l7910:
 13585                           
 13586                           ;main.c: 548:                             if(tecla == '*')
 13587  0BBD  302A               	movlw	42
 13588  0BBE  0661               	xorwf	main@tecla^(0+128),w
 13589  0BBF  1D03               	btfss	3,2
 13590  0BC0  2BC2               	goto	u6091
 13591  0BC1  2BC3               	goto	u6090
 13592  0BC2                     u6091:
 13593  0BC2  2BCF               	goto	l7916
 13594  0BC3                     u6090:
 13595  0BC3                     l7912:
 13596                           
 13597                           ;main.c: 549:                             {;main.c: 550:                                
      +                           dignum_apagar(&num);
 13598  0BC3  30DE               	movlw	(low (main@num| 0))& (0+255)
 13599  0BC4  160A  158A  2302  120A  158A  	fcall	_dignum_apagar
 13600  0BC9                     l7914:
 13601                           
 13602                           ;main.c: 551:                                 estado = 41;
 13603  0BC9  3029               	movlw	41
 13604  0BCA  1683               	bsf	3,5	;RP0=1, select bank1
 13605  0BCB  1303               	bcf	3,6	;RP1=0, select bank1
 13606  0BCC  00A0               	movwf	??_main^(0+128)
 13607  0BCD  0820               	movf	??_main^(0+128),w
 13608  0BCE  00E0               	movwf	main@estado^(0+128)
 13609  0BCF                     l7916:
 13610                           
 13611                           ;main.c: 553:                             if(tecla == '#')
 13612  0BCF  3023               	movlw	35
 13613  0BD0  0661               	xorwf	main@tecla^(0+128),w
 13614  0BD1  1D03               	btfss	3,2
 13615  0BD2  2BD4               	goto	u6101
 13616  0BD3  2BD5               	goto	u6100
 13617  0BD4                     u6101:
 13618  0BD4  2FE5               	goto	l8104
 13619  0BD5                     u6100:
 13620  0BD5                     l7918:
 13621                           
 13622                           ;main.c: 554:                                 estado = 42;
 13623  0BD5  302A               	movlw	42
 13624  0BD6  00A0               	movwf	??_main^(0+128)
 13625  0BD7  0820               	movf	??_main^(0+128),w
 13626  0BD8  00E0               	movwf	main@estado^(0+128)
 13627  0BD9  2FE5               	goto	l8104
 13628  0BDA                     l7920:
 13629                           
 13630                           ;main.c: 559:                             IHM.printpos(2, 0, "config tempo:      s");
 13631  0BDA  3002               	movlw	2
 13632  0BDB  00A0               	movwf	??_main^(0+128)
 13633  0BDC  0820               	movf	??_main^(0+128),w
 13634  0BDD  1283               	bcf	3,5	;RP0=0, select bank0
 13635  0BDE  1303               	bcf	3,6	;RP1=0, select bank0
 13636  0BDF  00A8               	movwf	dispLCD@lin
 13637  0BE0  01A9               	clrf	dispLCD@col
 13638  0BE1  3041               	movlw	low (STR_12| (0+32768))
 13639  0BE2  00AA               	movwf	dispLCD@str
 13640  0BE3  3092               	movlw	high (STR_12| (0+32768))
 13641  0BE4  00AB               	movwf	dispLCD@str+1
 13642  0BE5  1683               	bsf	3,5	;RP0=1, select bank1
 13643  0BE6  1303               	bcf	3,6	;RP1=0, select bank1
 13644  0BE7  0864               	movf	(low ((_IHM| 0+2)))^(0+128),w
 13645  0BE8  120A  118A  2069  120A  158A  	fcall	fptable
 13646                           
 13647                           ;main.c: 560:                             IHM.printv(2, 15, num, 3);
 13648  0BED  3002               	movlw	2
 13649  0BEE  1683               	bsf	3,5	;RP0=1, select bank1
 13650  0BEF  1303               	bcf	3,6	;RP1=0, select bank1
 13651  0BF0  00A0               	movwf	??_main^(0+128)
 13652  0BF1  0820               	movf	??_main^(0+128),w
 13653  0BF2  1283               	bcf	3,5	;RP0=0, select bank0
 13654  0BF3  1303               	bcf	3,6	;RP1=0, select bank0
 13655  0BF4  00AD               	movwf	dispLCD_num@lin
 13656  0BF5  300F               	movlw	15
 13657  0BF6  1683               	bsf	3,5	;RP0=1, select bank1
 13658  0BF7  1303               	bcf	3,6	;RP1=0, select bank1
 13659  0BF8  00A1               	movwf	(??_main+1)^(0+128)
 13660  0BF9  0821               	movf	(??_main+1)^(0+128),w
 13661  0BFA  1283               	bcf	3,5	;RP0=0, select bank0
 13662  0BFB  1303               	bcf	3,6	;RP1=0, select bank0
 13663  0BFC  00AE               	movwf	dispLCD_num@col
 13664  0BFD  1683               	bsf	3,5	;RP0=1, select bank1
 13665  0BFE  1303               	bcf	3,6	;RP1=0, select bank1
 13666  0BFF  085F               	movf	(main@num+1)^(0+128),w
 13667  0C00  1283               	bcf	3,5	;RP0=0, select bank0
 13668  0C01  1303               	bcf	3,6	;RP1=0, select bank0
 13669  0C02  00B0               	movwf	dispLCD_num@num+1
 13670  0C03  1683               	bsf	3,5	;RP0=1, select bank1
 13671  0C04  1303               	bcf	3,6	;RP1=0, select bank1
 13672  0C05  085E               	movf	main@num^(0+128),w
 13673  0C06  1283               	bcf	3,5	;RP0=0, select bank0
 13674  0C07  1303               	bcf	3,6	;RP1=0, select bank0
 13675  0C08  00AF               	movwf	dispLCD_num@num
 13676  0C09  3003               	movlw	3
 13677  0C0A  1683               	bsf	3,5	;RP0=1, select bank1
 13678  0C0B  1303               	bcf	3,6	;RP1=0, select bank1
 13679  0C0C  00A2               	movwf	(??_main+2)^(0+128)
 13680  0C0D  0822               	movf	(??_main+2)^(0+128),w
 13681  0C0E  1283               	bcf	3,5	;RP0=0, select bank0
 13682  0C0F  1303               	bcf	3,6	;RP1=0, select bank0
 13683  0C10  00B1               	movwf	dispLCD_num@tam
 13684  0C11  1683               	bsf	3,5	;RP0=1, select bank1
 13685  0C12  1303               	bcf	3,6	;RP1=0, select bank1
 13686  0C13  0865               	movf	(low ((_IHM| 0+3)))^(0+128),w
 13687  0C14  120A  118A  2069  120A  158A  	fcall	fptable
 13688  0C19                     l7922:
 13689                           
 13690                           ;main.c: 561:                             estado = 40;
 13691  0C19  3028               	movlw	40
 13692  0C1A  1683               	bsf	3,5	;RP0=1, select bank1
 13693  0C1B  1303               	bcf	3,6	;RP1=0, select bank1
 13694  0C1C  00A0               	movwf	??_main^(0+128)
 13695  0C1D  0820               	movf	??_main^(0+128),w
 13696  0C1E  00E0               	movwf	main@estado^(0+128)
 13697                           
 13698                           ;main.c: 562:                             break;
 13699  0C1F  2FE5               	goto	l8104
 13700  0C20                     l7924:
 13701                           
 13702                           ;main.c: 565:                             fifo_add_tempo(num);
 13703  0C20  085E               	movf	main@num^(0+128),w
 13704  0C21  120A  158A  2000  120A  158A  	fcall	_fifo_add_tempo
 13705  0C26                     l7926:
 13706                           
 13707                           ;main.c: 566:                             IHM.clr();
 13708  0C26  1683               	bsf	3,5	;RP0=1, select bank1
 13709  0C27  1303               	bcf	3,6	;RP1=0, select bank1
 13710  0C28  0866               	movf	(low ((_IHM| 0+4)))^(0+128),w
 13711  0C29  120A  118A  2069  120A  158A  	fcall	fptable
 13712  0C2E  2990               	goto	l7832
 13713  0C2F                     l7930:
 13714                           
 13715                           ;main.c: 599:                             tecla = teclado_borda();
 13716  0C2F  160A  158A  2363  120A  158A  	fcall	_teclado_borda
 13717  0C34  1683               	bsf	3,5	;RP0=1, select bank1
 13718  0C35  1303               	bcf	3,6	;RP1=0, select bank1
 13719  0C36  00A0               	movwf	??_main^(0+128)
 13720  0C37  0820               	movf	??_main^(0+128),w
 13721  0C38  00E1               	movwf	main@tecla^(0+128)
 13722  0C39                     l7932:
 13723                           
 13724                           ;main.c: 600:                             if(tecla >= '0' && tecla <= '9')
 13725  0C39  3030               	movlw	48
 13726  0C3A  0261               	subwf	main@tecla^(0+128),w
 13727  0C3B  1C03               	skipc
 13728  0C3C  2C3E               	goto	u6111
 13729  0C3D  2C3F               	goto	u6110
 13730  0C3E                     u6111:
 13731  0C3E  2C7B               	goto	l7954
 13732  0C3F                     u6110:
 13733  0C3F                     l7934:
 13734  0C3F  303A               	movlw	58
 13735  0C40  0261               	subwf	main@tecla^(0+128),w
 13736  0C41  1803               	skipnc
 13737  0C42  2C44               	goto	u6121
 13738  0C43  2C45               	goto	u6120
 13739  0C44                     u6121:
 13740  0C44  2C7B               	goto	l7954
 13741  0C45                     u6120:
 13742  0C45                     l7936:
 13743                           
 13744                           ;main.c: 601:                                {;main.c: 602:                             
      +                              dignum_conc(tecla, &ciclos);
 13745  0C45  30DC               	movlw	(low (main@ciclos| 0))& (0+255)
 13746  0C46  00A0               	movwf	??_main^(0+128)
 13747  0C47  0820               	movf	??_main^(0+128),w
 13748  0C48  1283               	bcf	3,5	;RP0=0, select bank0
 13749  0C49  1303               	bcf	3,6	;RP1=0, select bank0
 13750  0C4A  00A6               	movwf	dignum_conc@ptrNum
 13751  0C4B  1683               	bsf	3,5	;RP0=1, select bank1
 13752  0C4C  1303               	bcf	3,6	;RP1=0, select bank1
 13753  0C4D  0861               	movf	main@tecla^(0+128),w
 13754  0C4E  160A  158A  24FB  120A  158A  	fcall	_dignum_conc
 13755  0C53                     l7938:
 13756                           
 13757                           ;main.c: 603:                                 if(ciclos > 10000)
 13758  0C53  3027               	movlw	39
 13759  0C54  1683               	bsf	3,5	;RP0=1, select bank1
 13760  0C55  1303               	bcf	3,6	;RP1=0, select bank1
 13761  0C56  025D               	subwf	(main@ciclos+1)^(0+128),w
 13762  0C57  3011               	movlw	17
 13763  0C58  1903               	skipnz
 13764  0C59  025C               	subwf	main@ciclos^(0+128),w
 13765  0C5A  1C03               	skipc
 13766  0C5B  2C5D               	goto	u6131
 13767  0C5C  2C5E               	goto	u6130
 13768  0C5D                     u6131:
 13769  0C5D  2C62               	goto	l791
 13770  0C5E                     u6130:
 13771  0C5E                     l7940:
 13772                           
 13773                           ;main.c: 604:                                     ciclos = 10000;
 13774  0C5E  3010               	movlw	16
 13775  0C5F  00DC               	movwf	main@ciclos^(0+128)
 13776  0C60  3027               	movlw	39
 13777  0C61  00DD               	movwf	(main@ciclos^(0+128)+1)
 13778  0C62                     l791:
 13779                           
 13780                           ;main.c: 605:                                 estado = 53;
 13781  0C62  3035               	movlw	53
 13782  0C63  1683               	bsf	3,5	;RP0=1, select bank1
 13783  0C64  1303               	bcf	3,6	;RP1=0, select bank1
 13784  0C65  00A0               	movwf	??_main^(0+128)
 13785  0C66  0820               	movf	??_main^(0+128),w
 13786  0C67  00E0               	movwf	main@estado^(0+128)
 13787                           
 13788                           ;main.c: 606:                                 break;
 13789  0C68  2FE5               	goto	l8104
 13790  0C69                     l795:	
 13791                           ;main.c: 612:                                    case 'C':
 13792                           
 13793  0C69                     l7942:
 13794                           
 13795                           ;main.c: 614:                                        dispLCD_clr();
 13796  0C69  160A  158A  21CD  120A  158A  	fcall	_dispLCD_clr
 13797  0C6E  2990               	goto	l7832
 13798  0C6F                     l7946:
 13799                           
 13800                           ;main.c: 618:                                        estado = 54;
 13801  0C6F  3036               	movlw	54
 13802  0C70  00A0               	movwf	??_main^(0+128)
 13803  0C71  0820               	movf	??_main^(0+128),w
 13804  0C72  00E0               	movwf	main@estado^(0+128)
 13805                           
 13806                           ;main.c: 619:                                        break;
 13807  0C73  2FE5               	goto	l8104
 13808  0C74                     l7948:
 13809                           
 13810                           ;main.c: 621:                                        dignum_apagar(&ciclos);
 13811  0C74  30DC               	movlw	(low (main@ciclos| 0))& (0+255)
 13812  0C75  160A  158A  2302  120A  158A  	fcall	_dignum_apagar
 13813  0C7A  2C62               	goto	l791
 13814  0C7B                     l7954:
 13815  0C7B  0861               	movf	main@tecla^(0+128),w
 13816  0C7C  00A0               	movwf	??_main^(0+128)
 13817  0C7D  01A1               	clrf	(??_main^(0+128)+1)
 13818                           
 13819                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13820                           ; Switch size 1, requested type "simple"
 13821                           ; Number of cases is 1, Range of values is 0 to 0
 13822                           ; switch strategies available:
 13823                           ; Name         Instructions Cycles
 13824                           ; simple_byte            4     3 (average)
 13825                           ; direct_byte           11     8 (fixed)
 13826                           ; jumptable            260     6 (fixed)
 13827                           ;	Chosen strategy is simple_byte
 13828  0C7E  0821               	movf	(??_main+1)^(0+128),w
 13829  0C7F  3A00               	xorlw	0	; case 0
 13830  0C80  1903               	skipnz
 13831  0C81  2C83               	goto	l8694
 13832  0C82  2FE5               	goto	l8104
 13833  0C83                     l8694:
 13834                           
 13835                           ; Switch size 1, requested type "simple"
 13836                           ; Number of cases is 6, Range of values is 35 to 68
 13837                           ; switch strategies available:
 13838                           ; Name         Instructions Cycles
 13839                           ; simple_byte           19    10 (average)
 13840                           ; direct_byte          113    11 (fixed)
 13841                           ; jumptable            263     9 (fixed)
 13842                           ;	Chosen strategy is simple_byte
 13843  0C83  0820               	movf	??_main^(0+128),w
 13844  0C84  3A23               	xorlw	35	; case 35
 13845  0C85  1903               	skipnz
 13846  0C86  2C6F               	goto	l7946
 13847  0C87  3A09               	xorlw	9	; case 42
 13848  0C88  1903               	skipnz
 13849  0C89  2C74               	goto	l7948
 13850  0C8A  3A6B               	xorlw	107	; case 65
 13851  0C8B  1903               	skipnz
 13852  0C8C  2C69               	goto	l795
 13853  0C8D  3A03               	xorlw	3	; case 66
 13854  0C8E  1903               	skipnz
 13855  0C8F  2C69               	goto	l7942
 13856  0C90  3A01               	xorlw	1	; case 67
 13857  0C91  1903               	skipnz
 13858  0C92  2C69               	goto	l7942
 13859  0C93  3A07               	xorlw	7	; case 68
 13860  0C94  1903               	skipnz
 13861  0C95  2C69               	goto	l7942
 13862  0C96  2FE5               	goto	l8104
 13863  0C97                     l7956:
 13864                           
 13865                           ;main.c: 628:                             IHM.clr();
 13866  0C97  0866               	movf	(low ((_IHM| 0+4)))^(0+128),w
 13867  0C98  120A  118A  2069  120A  158A  	fcall	fptable
 13868  0C9D                     l7958:
 13869                           
 13870                           ;main.c: 629:                             IHM.printpos(0, 0, "Ciclos:             ");
 13871  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
 13872  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
 13873  0C9F  01A8               	clrf	dispLCD@lin
 13874  0CA0  01A9               	clrf	dispLCD@col
 13875  0CA1  3045               	movlw	low (STR_13| (0+32768))
 13876  0CA2  00AA               	movwf	dispLCD@str
 13877  0CA3  3091               	movlw	high (STR_13| (0+32768))
 13878  0CA4  00AB               	movwf	dispLCD@str+1
 13879  0CA5  1683               	bsf	3,5	;RP0=1, select bank1
 13880  0CA6  1303               	bcf	3,6	;RP1=0, select bank1
 13881  0CA7  0864               	movf	(low ((_IHM| 0+2)))^(0+128),w
 13882  0CA8  120A  118A  2069  120A  158A  	fcall	fptable
 13883  0CAD                     l7960:
 13884                           
 13885                           ;main.c: 630:                             IHM.printv(0, 15, ciclos, 5);
 13886  0CAD  1283               	bcf	3,5	;RP0=0, select bank0
 13887  0CAE  1303               	bcf	3,6	;RP1=0, select bank0
 13888  0CAF  01AD               	clrf	dispLCD_num@lin
 13889  0CB0  300F               	movlw	15
 13890  0CB1  1683               	bsf	3,5	;RP0=1, select bank1
 13891  0CB2  1303               	bcf	3,6	;RP1=0, select bank1
 13892  0CB3  00A0               	movwf	??_main^(0+128)
 13893  0CB4  0820               	movf	??_main^(0+128),w
 13894  0CB5  1283               	bcf	3,5	;RP0=0, select bank0
 13895  0CB6  1303               	bcf	3,6	;RP1=0, select bank0
 13896  0CB7  00AE               	movwf	dispLCD_num@col
 13897  0CB8  1683               	bsf	3,5	;RP0=1, select bank1
 13898  0CB9  1303               	bcf	3,6	;RP1=0, select bank1
 13899  0CBA  085D               	movf	(main@ciclos+1)^(0+128),w
 13900  0CBB  1283               	bcf	3,5	;RP0=0, select bank0
 13901  0CBC  1303               	bcf	3,6	;RP1=0, select bank0
 13902  0CBD  00B0               	movwf	dispLCD_num@num+1
 13903  0CBE  1683               	bsf	3,5	;RP0=1, select bank1
 13904  0CBF  1303               	bcf	3,6	;RP1=0, select bank1
 13905  0CC0  085C               	movf	main@ciclos^(0+128),w
 13906  0CC1  1283               	bcf	3,5	;RP0=0, select bank0
 13907  0CC2  1303               	bcf	3,6	;RP1=0, select bank0
 13908  0CC3  00AF               	movwf	dispLCD_num@num
 13909  0CC4  3005               	movlw	5
 13910  0CC5  1683               	bsf	3,5	;RP0=1, select bank1
 13911  0CC6  1303               	bcf	3,6	;RP1=0, select bank1
 13912  0CC7  00A1               	movwf	(??_main+1)^(0+128)
 13913  0CC8  0821               	movf	(??_main+1)^(0+128),w
 13914  0CC9  1283               	bcf	3,5	;RP0=0, select bank0
 13915  0CCA  1303               	bcf	3,6	;RP1=0, select bank0
 13916  0CCB  00B1               	movwf	dispLCD_num@tam
 13917  0CCC  1683               	bsf	3,5	;RP0=1, select bank1
 13918  0CCD  1303               	bcf	3,6	;RP1=0, select bank1
 13919  0CCE  0865               	movf	(low ((_IHM| 0+3)))^(0+128),w
 13920  0CCF  120A  118A  2069  120A  158A  	fcall	fptable
 13921  0CD4                     l7962:
 13922                           
 13923                           ;main.c: 631:                             IHM.printpos(2, 0, "0 - Ciclo continuo  ");
 13924  0CD4  3002               	movlw	2
 13925  0CD5  1683               	bsf	3,5	;RP0=1, select bank1
 13926  0CD6  1303               	bcf	3,6	;RP1=0, select bank1
 13927  0CD7  00A0               	movwf	??_main^(0+128)
 13928  0CD8  0820               	movf	??_main^(0+128),w
 13929  0CD9  1283               	bcf	3,5	;RP0=0, select bank0
 13930  0CDA  1303               	bcf	3,6	;RP1=0, select bank0
 13931  0CDB  00A8               	movwf	dispLCD@lin
 13932  0CDC  01A9               	clrf	dispLCD@col
 13933  0CDD  3017               	movlw	low (STR_14| (0+32768))
 13934  0CDE  00AA               	movwf	dispLCD@str
 13935  0CDF  3092               	movlw	high (STR_14| (0+32768))
 13936  0CE0  00AB               	movwf	dispLCD@str+1
 13937  0CE1  1683               	bsf	3,5	;RP0=1, select bank1
 13938  0CE2  1303               	bcf	3,6	;RP1=0, select bank1
 13939  0CE3  0864               	movf	(low ((_IHM| 0+2)))^(0+128),w
 13940  0CE4  120A  118A  2069  120A  158A  	fcall	fptable
 13941  0CE9                     l7964:
 13942                           
 13943                           ;main.c: 632:                             estado = 52;
 13944  0CE9  3034               	movlw	52
 13945  0CEA  1683               	bsf	3,5	;RP0=1, select bank1
 13946  0CEB  1303               	bcf	3,6	;RP1=0, select bank1
 13947  0CEC  00A0               	movwf	??_main^(0+128)
 13948  0CED  0820               	movf	??_main^(0+128),w
 13949  0CEE  00E0               	movwf	main@estado^(0+128)
 13950                           
 13951                           ;main.c: 633:                             break;
 13952  0CEF  2FE5               	goto	l8104
 13953  0CF0                     l7966:
 13954                           
 13955                           ;main.c: 636:                             IHM.print("    DESEJA SALVAR   \n"
 13956  0CF0  30A1               	movlw	low (STR_15| (0+32768))
 13957  0CF1  1283               	bcf	3,5	;RP0=0, select bank0
 13958  0CF2  1303               	bcf	3,6	;RP1=0, select bank0
 13959  0CF3  00A8               	movwf	dispLCD_str@str
 13960  0CF4  3090               	movlw	high (STR_15| (0+32768))
 13961  0CF5  00A9               	movwf	dispLCD_str@str+1
 13962  0CF6  1683               	bsf	3,5	;RP0=1, select bank1
 13963  0CF7  1303               	bcf	3,6	;RP1=0, select bank1
 13964  0CF8  0863               	movf	(low ((_IHM| 0+1)))^(0+128),w
 13965  0CF9  120A  118A  2069  120A  158A  	fcall	fptable
 13966  0CFE                     l7968:
 13967                           
 13968                           ;main.c: 640:                             tecla = teclado_borda();
 13969  0CFE  160A  158A  2363  120A  158A  	fcall	_teclado_borda
 13970  0D03  1683               	bsf	3,5	;RP0=1, select bank1
 13971  0D04  1303               	bcf	3,6	;RP1=0, select bank1
 13972  0D05  00A0               	movwf	??_main^(0+128)
 13973  0D06  0820               	movf	??_main^(0+128),w
 13974  0D07  00E1               	movwf	main@tecla^(0+128)
 13975                           
 13976                           ;main.c: 641:                             switch(tecla)
 13977  0D08  2D14               	goto	l7978
 13978  0D09                     l7970:
 13979  0D09  304B               	movlw	75
 13980  0D0A  00A0               	movwf	??_main^(0+128)
 13981  0D0B  0820               	movf	??_main^(0+128),w
 13982  0D0C  00E0               	movwf	main@estado^(0+128)
 13983  0D0D  2FE5               	goto	l8104
 13984  0D0E                     l7972:
 13985  0D0E  160A  158A  21CD  120A  158A  	fcall	_dispLCD_clr
 13986  0D13  2C62               	goto	l791
 13987  0D14                     l7978:
 13988  0D14  0861               	movf	main@tecla^(0+128),w
 13989  0D15  00A0               	movwf	??_main^(0+128)
 13990  0D16  01A1               	clrf	(??_main^(0+128)+1)
 13991                           
 13992                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13993                           ; Switch size 1, requested type "simple"
 13994                           ; Number of cases is 1, Range of values is 0 to 0
 13995                           ; switch strategies available:
 13996                           ; Name         Instructions Cycles
 13997                           ; simple_byte            4     3 (average)
 13998                           ; direct_byte           11     8 (fixed)
 13999                           ; jumptable            260     6 (fixed)
 14000                           ;	Chosen strategy is simple_byte
 14001  0D17  0821               	movf	(??_main+1)^(0+128),w
 14002  0D18  3A00               	xorlw	0	; case 0
 14003  0D19  1903               	skipnz
 14004  0D1A  2D1C               	goto	l8696
 14005  0D1B  2FE5               	goto	l8104
 14006  0D1C                     l8696:
 14007                           
 14008                           ; Switch size 1, requested type "simple"
 14009                           ; Number of cases is 2, Range of values is 35 to 42
 14010                           ; switch strategies available:
 14011                           ; Name         Instructions Cycles
 14012                           ; simple_byte            7     4 (average)
 14013                           ; direct_byte           35    11 (fixed)
 14014                           ; jumptable            263     9 (fixed)
 14015                           ;	Chosen strategy is simple_byte
 14016  0D1C  0820               	movf	??_main^(0+128),w
 14017  0D1D  3A23               	xorlw	35	; case 35
 14018  0D1E  1903               	skipnz
 14019  0D1F  2D09               	goto	l7970
 14020  0D20  3A09               	xorlw	9	; case 42
 14021  0D21  1903               	skipnz
 14022  0D22  2D0E               	goto	l7972
 14023  0D23  2FE5               	goto	l8104
 14024  0D24                     l7980:
 14025                           
 14026                           ;main.c: 649:                             IHM.clr();
 14027  0D24  0866               	movf	(low ((_IHM| 0+4)))^(0+128),w
 14028  0D25  120A  118A  2069  120A  158A  	fcall	fptable
 14029  0D2A                     l7982:
 14030                           
 14031                           ;main.c: 650:                             IHM.print(" ESCOLHA A MEMORIA\n"
 14032  0D2A  3053               	movlw	low (STR_16| (0+32768))
 14033  0D2B  1283               	bcf	3,5	;RP0=0, select bank0
 14034  0D2C  1303               	bcf	3,6	;RP1=0, select bank0
 14035  0D2D  00A8               	movwf	dispLCD_str@str
 14036  0D2E  3090               	movlw	high (STR_16| (0+32768))
 14037  0D2F  00A9               	movwf	dispLCD_str@str+1
 14038  0D30  1683               	bsf	3,5	;RP0=1, select bank1
 14039  0D31  1303               	bcf	3,6	;RP1=0, select bank1
 14040  0D32  0863               	movf	(low ((_IHM| 0+1)))^(0+128),w
 14041  0D33  120A  118A  2069  120A  158A  	fcall	fptable
 14042  0D38                     l7984:
 14043                           
 14044                           ;main.c: 654:                             estado = 76;
 14045  0D38  304C               	movlw	76
 14046  0D39  1683               	bsf	3,5	;RP0=1, select bank1
 14047  0D3A  1303               	bcf	3,6	;RP1=0, select bank1
 14048  0D3B  00A0               	movwf	??_main^(0+128)
 14049  0D3C  0820               	movf	??_main^(0+128),w
 14050  0D3D  00E0               	movwf	main@estado^(0+128)
 14051  0D3E                     l7986:
 14052                           
 14053                           ;main.c: 657:                             tecla = teclado_borda();
 14054  0D3E  160A  158A  2363  120A  158A  	fcall	_teclado_borda
 14055  0D43  1683               	bsf	3,5	;RP0=1, select bank1
 14056  0D44  1303               	bcf	3,6	;RP1=0, select bank1
 14057  0D45  00A0               	movwf	??_main^(0+128)
 14058  0D46  0820               	movf	??_main^(0+128),w
 14059  0D47  00E1               	movwf	main@tecla^(0+128)
 14060                           
 14061                           ;main.c: 658:                             switch(tecla)
 14062  0D48  2DC2               	goto	l8000
 14063  0D49                     l812:	
 14064                           ;main.c: 663:                                 case '3':
 14065                           
 14066  0D49                     l7988:
 14067                           
 14068                           ;main.c: 670:                                            salvar_dado(10, tecla % 0x30, i
      +                          nit_cond);
 14069  0D49  3030               	movlw	48
 14070  0D4A  1283               	bcf	3,5	;RP0=0, select bank0
 14071  0D4B  1303               	bcf	3,6	;RP1=0, select bank0
 14072  0D4C  00A0               	movwf	___awmod@divisor
 14073  0D4D  3000               	movlw	0
 14074  0D4E  00A1               	movwf	___awmod@divisor+1
 14075  0D4F  1683               	bsf	3,5	;RP0=1, select bank1
 14076  0D50  1303               	bcf	3,6	;RP1=0, select bank1
 14077  0D51  0861               	movf	main@tecla^(0+128),w
 14078  0D52  00A0               	movwf	??_main^(0+128)
 14079  0D53  01A1               	clrf	(??_main^(0+128)+1)
 14080  0D54  0820               	movf	??_main^(0+128),w
 14081  0D55  1283               	bcf	3,5	;RP0=0, select bank0
 14082  0D56  1303               	bcf	3,6	;RP1=0, select bank0
 14083  0D57  00A2               	movwf	___awmod@dividend
 14084  0D58  1683               	bsf	3,5	;RP0=1, select bank1
 14085  0D59  1303               	bcf	3,6	;RP1=0, select bank1
 14086  0D5A  0821               	movf	(??_main+1)^(0+128),w
 14087  0D5B  1283               	bcf	3,5	;RP0=0, select bank0
 14088  0D5C  1303               	bcf	3,6	;RP1=0, select bank0
 14089  0D5D  00A3               	movwf	___awmod@dividend+1
 14090  0D5E  160A  118A  252A  120A  158A  	fcall	___awmod
 14091  0D63  1283               	bcf	3,5	;RP0=0, select bank0
 14092  0D64  1303               	bcf	3,6	;RP1=0, select bank0
 14093  0D65  0820               	movf	?___awmod,w
 14094  0D66  1683               	bsf	3,5	;RP0=1, select bank1
 14095  0D67  1303               	bcf	3,6	;RP1=0, select bank1
 14096  0D68  00A2               	movwf	(??_main+2)^(0+128)
 14097  0D69  0822               	movf	(??_main+2)^(0+128),w
 14098  0D6A  1283               	bcf	3,5	;RP0=0, select bank0
 14099  0D6B  1303               	bcf	3,6	;RP1=0, select bank0
 14100  0D6C  00A7               	movwf	salvar_dado@col
 14101  0D6D  1683               	bsf	3,5	;RP0=1, select bank1
 14102  0D6E  1303               	bcf	3,6	;RP1=0, select bank1
 14103  0D6F  084D               	movf	main@init_cond^(0+128),w
 14104  0D70  00A3               	movwf	(??_main+3)^(0+128)
 14105  0D71  0823               	movf	(??_main+3)^(0+128),w
 14106  0D72  1283               	bcf	3,5	;RP0=0, select bank0
 14107  0D73  1303               	bcf	3,6	;RP1=0, select bank0
 14108  0D74  00A8               	movwf	salvar_dado@data
 14109  0D75  300A               	movlw	10
 14110  0D76  160A  158A  2342  120A  158A  	fcall	_salvar_dado
 14111  0D7B                     l7990:
 14112                           
 14113                           ;main.c: 671:                                            EEPROM.salvar(tecla % 0x30, fif
      +                          o_adrs() + 2);
 14114  0D7B  3030               	movlw	48
 14115  0D7C  1283               	bcf	3,5	;RP0=0, select bank0
 14116  0D7D  1303               	bcf	3,6	;RP1=0, select bank0
 14117  0D7E  00A0               	movwf	___awmod@divisor
 14118  0D7F  3000               	movlw	0
 14119  0D80  00A1               	movwf	___awmod@divisor+1
 14120  0D81  1683               	bsf	3,5	;RP0=1, select bank1
 14121  0D82  1303               	bcf	3,6	;RP1=0, select bank1
 14122  0D83  0861               	movf	main@tecla^(0+128),w
 14123  0D84  00A0               	movwf	??_main^(0+128)
 14124  0D85  01A1               	clrf	(??_main^(0+128)+1)
 14125  0D86  0820               	movf	??_main^(0+128),w
 14126  0D87  1283               	bcf	3,5	;RP0=0, select bank0
 14127  0D88  1303               	bcf	3,6	;RP1=0, select bank0
 14128  0D89  00A2               	movwf	___awmod@dividend
 14129  0D8A  1683               	bsf	3,5	;RP0=1, select bank1
 14130  0D8B  1303               	bcf	3,6	;RP1=0, select bank1
 14131  0D8C  0821               	movf	(??_main+1)^(0+128),w
 14132  0D8D  1283               	bcf	3,5	;RP0=0, select bank0
 14133  0D8E  1303               	bcf	3,6	;RP1=0, select bank0
 14134  0D8F  00A3               	movwf	___awmod@dividend+1
 14135  0D90  160A  118A  252A  120A  158A  	fcall	___awmod
 14136  0D95  1283               	bcf	3,5	;RP0=0, select bank0
 14137  0D96  1303               	bcf	3,6	;RP1=0, select bank0
 14138  0D97  0820               	movf	?___awmod,w
 14139  0D98  1683               	bsf	3,5	;RP0=1, select bank1
 14140  0D99  1303               	bcf	3,6	;RP1=0, select bank1
 14141  0D9A  00A2               	movwf	(??_main+2)^(0+128)
 14142  0D9B  0822               	movf	(??_main+2)^(0+128),w
 14143  0D9C  1283               	bcf	3,5	;RP0=0, select bank0
 14144  0D9D  1303               	bcf	3,6	;RP1=0, select bank0
 14145  0D9E  00A7               	movwf	salvar_receita@adrs
 14146  0D9F  160A  158A  21B1  120A  158A  	fcall	_fifo_adrs
 14147  0DA4  3E02               	addlw	2
 14148  0DA5  1683               	bsf	3,5	;RP0=1, select bank1
 14149  0DA6  1303               	bcf	3,6	;RP1=0, select bank1
 14150  0DA7  00A3               	movwf	(??_main+3)^(0+128)
 14151  0DA8  0823               	movf	(??_main+3)^(0+128),w
 14152  0DA9  1283               	bcf	3,5	;RP0=0, select bank0
 14153  0DAA  1303               	bcf	3,6	;RP1=0, select bank0
 14154  0DAB  00A8               	movwf	salvar_receita@data
 14155  0DAC  1683               	bsf	3,5	;RP0=1, select bank1
 14156  0DAD  1303               	bcf	3,6	;RP1=0, select bank1
 14157  0DAE  0867               	movf	_EEPROM^(0+128),w
 14158  0DAF  120A  118A  2069  120A  158A  	fcall	fptable
 14159  0DB4                     l7992:
 14160                           
 14161                           ;main.c: 672:                                            estado = 77;
 14162  0DB4  304D               	movlw	77
 14163  0DB5  1683               	bsf	3,5	;RP0=1, select bank1
 14164  0DB6  1303               	bcf	3,6	;RP1=0, select bank1
 14165  0DB7  00A0               	movwf	??_main^(0+128)
 14166  0DB8  0820               	movf	??_main^(0+128),w
 14167  0DB9  00E0               	movwf	main@estado^(0+128)
 14168                           
 14169                           ;main.c: 673:                                            break;
 14170  0DBA  2FE5               	goto	l8104
 14171  0DBB                     l7994:
 14172  0DBB  0866               	movf	(low ((_IHM| 0+4)))^(0+128),w
 14173  0DBC  120A  118A  2069  120A  158A  	fcall	fptable
 14174  0DC1  29B6               	goto	l7850
 14175  0DC2                     l8000:
 14176  0DC2  0861               	movf	main@tecla^(0+128),w
 14177  0DC3  00A0               	movwf	??_main^(0+128)
 14178  0DC4  01A1               	clrf	(??_main^(0+128)+1)
 14179                           
 14180                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14181                           ; Switch size 1, requested type "simple"
 14182                           ; Number of cases is 1, Range of values is 0 to 0
 14183                           ; switch strategies available:
 14184                           ; Name         Instructions Cycles
 14185                           ; simple_byte            4     3 (average)
 14186                           ; direct_byte           11     8 (fixed)
 14187                           ; jumptable            260     6 (fixed)
 14188                           ;	Chosen strategy is simple_byte
 14189  0DC5  0821               	movf	(??_main+1)^(0+128),w
 14190  0DC6  3A00               	xorlw	0	; case 0
 14191  0DC7  1903               	skipnz
 14192  0DC8  2DCA               	goto	l8698
 14193  0DC9  2FE5               	goto	l8104
 14194  0DCA                     l8698:
 14195                           
 14196                           ; Switch size 1, requested type "simple"
 14197                           ; Number of cases is 11, Range of values is 42 to 57
 14198                           ; switch strategies available:
 14199                           ; Name         Instructions Cycles
 14200                           ; simple_byte           34    18 (average)
 14201                           ; direct_byte           59    11 (fixed)
 14202                           ; jumptable            263     9 (fixed)
 14203                           ;	Chosen strategy is simple_byte
 14204  0DCA  0820               	movf	??_main^(0+128),w
 14205  0DCB  3A2A               	xorlw	42	; case 42
 14206  0DCC  1903               	skipnz
 14207  0DCD  2DBB               	goto	l7994
 14208  0DCE  3A1A               	xorlw	26	; case 48
 14209  0DCF  1903               	skipnz
 14210  0DD0  2D49               	goto	l812
 14211  0DD1  3A01               	xorlw	1	; case 49
 14212  0DD2  1903               	skipnz
 14213  0DD3  2D49               	goto	l812
 14214  0DD4  3A03               	xorlw	3	; case 50
 14215  0DD5  1903               	skipnz
 14216  0DD6  2D49               	goto	l7988
 14217  0DD7  3A01               	xorlw	1	; case 51
 14218  0DD8  1903               	skipnz
 14219  0DD9  2D49               	goto	l7988
 14220  0DDA  3A07               	xorlw	7	; case 52
 14221  0DDB  1903               	skipnz
 14222  0DDC  2D49               	goto	l7988
 14223  0DDD  3A01               	xorlw	1	; case 53
 14224  0DDE  1903               	skipnz
 14225  0DDF  2D49               	goto	l7988
 14226  0DE0  3A03               	xorlw	3	; case 54
 14227  0DE1  1903               	skipnz
 14228  0DE2  2D49               	goto	l7988
 14229  0DE3  3A01               	xorlw	1	; case 55
 14230  0DE4  1903               	skipnz
 14231  0DE5  2D49               	goto	l7988
 14232  0DE6  3A0F               	xorlw	15	; case 56
 14233  0DE7  1903               	skipnz
 14234  0DE8  2D49               	goto	l7988
 14235  0DE9  3A01               	xorlw	1	; case 57
 14236  0DEA  1903               	skipnz
 14237  0DEB  2D49               	goto	l7988
 14238  0DEC  2FE5               	goto	l8104
 14239  0DED                     l8002:
 14240                           
 14241                           ;main.c: 680:                             IHM.clr();
 14242  0DED  0866               	movf	(low ((_IHM| 0+4)))^(0+128),w
 14243  0DEE  120A  118A  2069  120A  158A  	fcall	fptable
 14244  0DF3                     l8004:
 14245                           
 14246                           ;main.c: 681:                             for(char i = 0; i <= 3; i++)
 14247  0DF3  1683               	bsf	3,5	;RP0=1, select bank1
 14248  0DF4  1303               	bcf	3,6	;RP1=0, select bank1
 14249  0DF5  01D7               	clrf	main@i_1025^(0+128)
 14250  0DF6                     l8006:
 14251  0DF6  3004               	movlw	4
 14252  0DF7  0257               	subwf	main@i_1025^(0+128),w
 14253  0DF8  1C03               	skipc
 14254  0DF9  2DFB               	goto	u6141
 14255  0DFA  2DFC               	goto	u6140
 14256  0DFB                     u6141:
 14257  0DFB  2DFD               	goto	l8010
 14258  0DFC                     u6140:
 14259  0DFC  2E36               	goto	l8028
 14260  0DFD                     l8010:
 14261                           
 14262                           ;main.c: 682:                             {;main.c: 683:                                
      +                           for(char j = 0; j <= 19; j++)
 14263  0DFD  01D8               	clrf	main@j_1026^(0+128)
 14264  0DFE                     l8012:
 14265  0DFE  3014               	movlw	20
 14266  0DFF  0258               	subwf	main@j_1026^(0+128),w
 14267  0E00  1C03               	skipc
 14268  0E01  2E03               	goto	u6151
 14269  0E02  2E04               	goto	u6150
 14270  0E03                     u6151:
 14271  0E03  2E05               	goto	l8016
 14272  0E04                     u6150:
 14273  0E04  2E31               	goto	l8024
 14274  0E05                     l8016:
 14275                           
 14276                           ;main.c: 684:                                 {;main.c: 685:                            
      +                                   IHM.printpos(i, j, "\377");
 14277  0E05  0857               	movf	main@i_1025^(0+128),w
 14278  0E06  00A0               	movwf	??_main^(0+128)
 14279  0E07  0820               	movf	??_main^(0+128),w
 14280  0E08  1283               	bcf	3,5	;RP0=0, select bank0
 14281  0E09  1303               	bcf	3,6	;RP1=0, select bank0
 14282  0E0A  00A8               	movwf	dispLCD@lin
 14283  0E0B  1683               	bsf	3,5	;RP0=1, select bank1
 14284  0E0C  1303               	bcf	3,6	;RP1=0, select bank1
 14285  0E0D  0858               	movf	main@j_1026^(0+128),w
 14286  0E0E  00A1               	movwf	(??_main+1)^(0+128)
 14287  0E0F  0821               	movf	(??_main+1)^(0+128),w
 14288  0E10  1283               	bcf	3,5	;RP0=0, select bank0
 14289  0E11  1303               	bcf	3,6	;RP1=0, select bank0
 14290  0E12  00A9               	movwf	dispLCD@col
 14291  0E13  30E9               	movlw	low (STR_1| (0+32768))
 14292  0E14  00AA               	movwf	dispLCD@str
 14293  0E15  3092               	movlw	high (STR_1| (0+32768))
 14294  0E16  00AB               	movwf	dispLCD@str+1
 14295  0E17  1683               	bsf	3,5	;RP0=1, select bank1
 14296  0E18  1303               	bcf	3,6	;RP1=0, select bank1
 14297  0E19  0864               	movf	(low ((_IHM| 0+2)))^(0+128),w
 14298  0E1A  120A  118A  2069  120A  158A  	fcall	fptable
 14299  0E1F                     l8018:
 14300                           
 14301                           ;main.c: 686:                                     delay(10);
 14302  0E1F  300A               	movlw	10
 14303  0E20  1283               	bcf	3,5	;RP0=0, select bank0
 14304  0E21  1303               	bcf	3,6	;RP1=0, select bank0
 14305  0E22  00A0               	movwf	delay@t
 14306  0E23  3000               	movlw	0
 14307  0E24  00A1               	movwf	delay@t+1
 14308  0E25  160A  158A  22C7  120A  158A  	fcall	_delay
 14309  0E2A                     l8020:
 14310                           
 14311                           ;main.c: 687:                                 }
 14312  0E2A  3001               	movlw	1
 14313  0E2B  1683               	bsf	3,5	;RP0=1, select bank1
 14314  0E2C  1303               	bcf	3,6	;RP1=0, select bank1
 14315  0E2D  00A0               	movwf	??_main^(0+128)
 14316  0E2E  0820               	movf	??_main^(0+128),w
 14317  0E2F  07D8               	addwf	main@j_1026^(0+128),f
 14318  0E30  2DFE               	goto	l8012
 14319  0E31                     l8024:
 14320                           
 14321                           ;main.c: 688:                             }
 14322  0E31  3001               	movlw	1
 14323  0E32  00A0               	movwf	??_main^(0+128)
 14324  0E33  0820               	movf	??_main^(0+128),w
 14325  0E34  07D7               	addwf	main@i_1025^(0+128),f
 14326  0E35  2DF6               	goto	l8006
 14327  0E36                     l8028:
 14328                           
 14329                           ;main.c: 690:                             for(char i = 0; i <= 3; i++)
 14330  0E36  01D9               	clrf	main@i_1028^(0+128)
 14331  0E37                     l8030:
 14332  0E37  3004               	movlw	4
 14333  0E38  0259               	subwf	main@i_1028^(0+128),w
 14334  0E39  1C03               	skipc
 14335  0E3A  2E3C               	goto	u6161
 14336  0E3B  2E3D               	goto	u6160
 14337  0E3C                     u6161:
 14338  0E3C  2E3E               	goto	l8034
 14339  0E3D                     u6160:
 14340  0E3D  2E77               	goto	l8052
 14341  0E3E                     l8034:
 14342                           
 14343                           ;main.c: 691:                             {;main.c: 692:                                
      +                           for(char j = 0; j <= 19; j++)
 14344  0E3E  01DA               	clrf	main@j_1029^(0+128)
 14345  0E3F                     l8036:
 14346  0E3F  3014               	movlw	20
 14347  0E40  025A               	subwf	main@j_1029^(0+128),w
 14348  0E41  1C03               	skipc
 14349  0E42  2E44               	goto	u6171
 14350  0E43  2E45               	goto	u6170
 14351  0E44                     u6171:
 14352  0E44  2E46               	goto	l8040
 14353  0E45                     u6170:
 14354  0E45  2E72               	goto	l8048
 14355  0E46                     l8040:
 14356                           
 14357                           ;main.c: 693:                                 {;main.c: 694:                            
      +                                   IHM.printpos(i, j, " ");
 14358  0E46  0859               	movf	main@i_1028^(0+128),w
 14359  0E47  00A0               	movwf	??_main^(0+128)
 14360  0E48  0820               	movf	??_main^(0+128),w
 14361  0E49  1283               	bcf	3,5	;RP0=0, select bank0
 14362  0E4A  1303               	bcf	3,6	;RP1=0, select bank0
 14363  0E4B  00A8               	movwf	dispLCD@lin
 14364  0E4C  1683               	bsf	3,5	;RP0=1, select bank1
 14365  0E4D  1303               	bcf	3,6	;RP1=0, select bank1
 14366  0E4E  085A               	movf	main@j_1029^(0+128),w
 14367  0E4F  00A1               	movwf	(??_main+1)^(0+128)
 14368  0E50  0821               	movf	(??_main+1)^(0+128),w
 14369  0E51  1283               	bcf	3,5	;RP0=0, select bank0
 14370  0E52  1303               	bcf	3,6	;RP1=0, select bank0
 14371  0E53  00A9               	movwf	dispLCD@col
 14372  0E54  3058               	movlw	low ((STR_13+19)| (0+32768))
 14373  0E55  00AA               	movwf	dispLCD@str
 14374  0E56  3091               	movlw	high ((STR_13+19)| (0+32768))
 14375  0E57  00AB               	movwf	dispLCD@str+1
 14376  0E58  1683               	bsf	3,5	;RP0=1, select bank1
 14377  0E59  1303               	bcf	3,6	;RP1=0, select bank1
 14378  0E5A  0864               	movf	(low ((_IHM| 0+2)))^(0+128),w
 14379  0E5B  120A  118A  2069  120A  158A  	fcall	fptable
 14380  0E60                     l8042:
 14381                           
 14382                           ;main.c: 695:                                     delay(10);
 14383  0E60  300A               	movlw	10
 14384  0E61  1283               	bcf	3,5	;RP0=0, select bank0
 14385  0E62  1303               	bcf	3,6	;RP1=0, select bank0
 14386  0E63  00A0               	movwf	delay@t
 14387  0E64  3000               	movlw	0
 14388  0E65  00A1               	movwf	delay@t+1
 14389  0E66  160A  158A  22C7  120A  158A  	fcall	_delay
 14390  0E6B                     l8044:
 14391                           
 14392                           ;main.c: 696:                                 }
 14393  0E6B  3001               	movlw	1
 14394  0E6C  1683               	bsf	3,5	;RP0=1, select bank1
 14395  0E6D  1303               	bcf	3,6	;RP1=0, select bank1
 14396  0E6E  00A0               	movwf	??_main^(0+128)
 14397  0E6F  0820               	movf	??_main^(0+128),w
 14398  0E70  07DA               	addwf	main@j_1029^(0+128),f
 14399  0E71  2E3F               	goto	l8036
 14400  0E72                     l8048:
 14401                           
 14402                           ;main.c: 697:                             }
 14403  0E72  3001               	movlw	1
 14404  0E73  00A0               	movwf	??_main^(0+128)
 14405  0E74  0820               	movf	??_main^(0+128),w
 14406  0E75  07D9               	addwf	main@i_1028^(0+128),f
 14407  0E76  2E37               	goto	l8030
 14408  0E77                     l8052:
 14409                           
 14410                           ;main.c: 698:                             IHM.printpos(1, 0, "      SEQUENCIA     ");
 14411  0E77  1283               	bcf	3,5	;RP0=0, select bank0
 14412  0E78  1303               	bcf	3,6	;RP1=0, select bank0
 14413  0E79  01A8               	clrf	dispLCD@lin
 14414  0E7A  0AA8               	incf	dispLCD@lin,f
 14415  0E7B  01A9               	clrf	dispLCD@col
 14416  0E7C  30AE               	movlw	low (STR_19| (0+32768))
 14417  0E7D  00AA               	movwf	dispLCD@str
 14418  0E7E  3091               	movlw	high (STR_19| (0+32768))
 14419  0E7F  00AB               	movwf	dispLCD@str+1
 14420  0E80  1683               	bsf	3,5	;RP0=1, select bank1
 14421  0E81  1303               	bcf	3,6	;RP1=0, select bank1
 14422  0E82  0864               	movf	(low ((_IHM| 0+2)))^(0+128),w
 14423  0E83  120A  118A  2069  120A  158A  	fcall	fptable
 14424                           
 14425                           ;main.c: 699:                             IHM.printpos(2, 0, "        SALVA       ");
 14426  0E88  3002               	movlw	2
 14427  0E89  1683               	bsf	3,5	;RP0=1, select bank1
 14428  0E8A  1303               	bcf	3,6	;RP1=0, select bank1
 14429  0E8B  00A0               	movwf	??_main^(0+128)
 14430  0E8C  0820               	movf	??_main^(0+128),w
 14431  0E8D  1283               	bcf	3,5	;RP0=0, select bank0
 14432  0E8E  1303               	bcf	3,6	;RP1=0, select bank0
 14433  0E8F  00A8               	movwf	dispLCD@lin
 14434  0E90  01A9               	clrf	dispLCD@col
 14435  0E91  306F               	movlw	low (STR_20| (0+32768))
 14436  0E92  00AA               	movwf	dispLCD@str
 14437  0E93  3091               	movlw	high (STR_20| (0+32768))
 14438  0E94  00AB               	movwf	dispLCD@str+1
 14439  0E95  1683               	bsf	3,5	;RP0=1, select bank1
 14440  0E96  1303               	bcf	3,6	;RP1=0, select bank1
 14441  0E97  0864               	movf	(low ((_IHM| 0+2)))^(0+128),w
 14442  0E98  120A  118A  2069  120A  158A  	fcall	fptable
 14443  0E9D                     l8054:
 14444                           
 14445                           ;main.c: 701:                             setT1(1000);
 14446  0E9D  3000               	movlw	0
 14447  0E9E  1283               	bcf	3,5	;RP0=0, select bank0
 14448  0E9F  1303               	bcf	3,6	;RP1=0, select bank0
 14449  0EA0  00A3               	movwf	setT1@c+3
 14450  0EA1  3000               	movlw	0
 14451  0EA2  00A2               	movwf	setT1@c+2
 14452  0EA3  3003               	movlw	3
 14453  0EA4  00A1               	movwf	setT1@c+1
 14454  0EA5  30E8               	movlw	232
 14455  0EA6  00A0               	movwf	setT1@c
 14456  0EA7  120A  118A  27F0  120A  158A  	fcall	_setT1
 14457  0EAC                     l8056:
 14458                           
 14459                           ;main.c: 702:                             estado = 78;
 14460  0EAC  304E               	movlw	78
 14461  0EAD  1683               	bsf	3,5	;RP0=1, select bank1
 14462  0EAE  1303               	bcf	3,6	;RP1=0, select bank1
 14463  0EAF  00A0               	movwf	??_main^(0+128)
 14464  0EB0  0820               	movf	??_main^(0+128),w
 14465  0EB1  00E0               	movwf	main@estado^(0+128)
 14466                           
 14467                           ;main.c: 703:                             break;
 14468  0EB2  2FE5               	goto	l8104
 14469  0EB3                     l8058:
 14470                           
 14471                           ;main.c: 706:                             if(!statusT1())
 14472  0EB3  160A  158A  2246  120A  158A  	fcall	_statusT1
 14473  0EB8  1283               	bcf	3,5	;RP0=0, select bank0
 14474  0EB9  1303               	bcf	3,6	;RP1=0, select bank0
 14475  0EBA  0823               	movf	?_statusT1+3,w
 14476  0EBB  0422               	iorwf	?_statusT1+2,w
 14477  0EBC  0421               	iorwf	?_statusT1+1,w
 14478  0EBD  0420               	iorwf	?_statusT1,w
 14479  0EBE  1D03               	skipz
 14480  0EBF  2EC1               	goto	u6181
 14481  0EC0  2EC2               	goto	u6180
 14482  0EC1                     u6181:
 14483  0EC1  2FE5               	goto	l8104
 14484  0EC2                     u6180:
 14485  0EC2  2C62               	goto	l791
 14486  0EC3                     l8062:
 14487                           
 14488                           ;main.c: 711:                             IHM.printpos(2, 0, "config contrl:     %");
 14489  0EC3  3002               	movlw	2
 14490  0EC4  00A0               	movwf	??_main^(0+128)
 14491  0EC5  0820               	movf	??_main^(0+128),w
 14492  0EC6  1283               	bcf	3,5	;RP0=0, select bank0
 14493  0EC7  1303               	bcf	3,6	;RP1=0, select bank0
 14494  0EC8  00A8               	movwf	dispLCD@lin
 14495  0EC9  01A9               	clrf	dispLCD@col
 14496  0ECA  302C               	movlw	low (STR_21| (0+32768))
 14497  0ECB  00AA               	movwf	dispLCD@str
 14498  0ECC  3092               	movlw	high (STR_21| (0+32768))
 14499  0ECD  00AB               	movwf	dispLCD@str+1
 14500  0ECE  1683               	bsf	3,5	;RP0=1, select bank1
 14501  0ECF  1303               	bcf	3,6	;RP1=0, select bank1
 14502  0ED0  0864               	movf	(low ((_IHM| 0+2)))^(0+128),w
 14503  0ED1  120A  118A  2069  120A  158A  	fcall	fptable
 14504                           
 14505                           ;main.c: 712:                             IHM.printv(2, 15, num, 3);
 14506  0ED6  3002               	movlw	2
 14507  0ED7  1683               	bsf	3,5	;RP0=1, select bank1
 14508  0ED8  1303               	bcf	3,6	;RP1=0, select bank1
 14509  0ED9  00A0               	movwf	??_main^(0+128)
 14510  0EDA  0820               	movf	??_main^(0+128),w
 14511  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
 14512  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
 14513  0EDD  00AD               	movwf	dispLCD_num@lin
 14514  0EDE  300F               	movlw	15
 14515  0EDF  1683               	bsf	3,5	;RP0=1, select bank1
 14516  0EE0  1303               	bcf	3,6	;RP1=0, select bank1
 14517  0EE1  00A1               	movwf	(??_main+1)^(0+128)
 14518  0EE2  0821               	movf	(??_main+1)^(0+128),w
 14519  0EE3  1283               	bcf	3,5	;RP0=0, select bank0
 14520  0EE4  1303               	bcf	3,6	;RP1=0, select bank0
 14521  0EE5  00AE               	movwf	dispLCD_num@col
 14522  0EE6  1683               	bsf	3,5	;RP0=1, select bank1
 14523  0EE7  1303               	bcf	3,6	;RP1=0, select bank1
 14524  0EE8  085F               	movf	(main@num+1)^(0+128),w
 14525  0EE9  1283               	bcf	3,5	;RP0=0, select bank0
 14526  0EEA  1303               	bcf	3,6	;RP1=0, select bank0
 14527  0EEB  00B0               	movwf	dispLCD_num@num+1
 14528  0EEC  1683               	bsf	3,5	;RP0=1, select bank1
 14529  0EED  1303               	bcf	3,6	;RP1=0, select bank1
 14530  0EEE  085E               	movf	main@num^(0+128),w
 14531  0EEF  1283               	bcf	3,5	;RP0=0, select bank0
 14532  0EF0  1303               	bcf	3,6	;RP1=0, select bank0
 14533  0EF1  00AF               	movwf	dispLCD_num@num
 14534  0EF2  3003               	movlw	3
 14535  0EF3  1683               	bsf	3,5	;RP0=1, select bank1
 14536  0EF4  1303               	bcf	3,6	;RP1=0, select bank1
 14537  0EF5  00A2               	movwf	(??_main+2)^(0+128)
 14538  0EF6  0822               	movf	(??_main+2)^(0+128),w
 14539  0EF7  1283               	bcf	3,5	;RP0=0, select bank0
 14540  0EF8  1303               	bcf	3,6	;RP1=0, select bank0
 14541  0EF9  00B1               	movwf	dispLCD_num@tam
 14542  0EFA  1683               	bsf	3,5	;RP0=1, select bank1
 14543  0EFB  1303               	bcf	3,6	;RP1=0, select bank1
 14544  0EFC  0865               	movf	(low ((_IHM| 0+3)))^(0+128),w
 14545  0EFD  120A  118A  2069  120A  158A  	fcall	fptable
 14546  0F02                     l8064:
 14547                           
 14548                           ;main.c: 713:                             estado = 91;
 14549  0F02  305B               	movlw	91
 14550  0F03  1683               	bsf	3,5	;RP0=1, select bank1
 14551  0F04  1303               	bcf	3,6	;RP1=0, select bank1
 14552  0F05  00A0               	movwf	??_main^(0+128)
 14553  0F06  0820               	movf	??_main^(0+128),w
 14554  0F07  00E0               	movwf	main@estado^(0+128)
 14555                           
 14556                           ;main.c: 714:                             break;
 14557  0F08  2FE5               	goto	l8104
 14558  0F09                     l8066:
 14559                           
 14560                           ;main.c: 717:                             tecla = teclado_borda();
 14561  0F09  160A  158A  2363  120A  158A  	fcall	_teclado_borda
 14562  0F0E  1683               	bsf	3,5	;RP0=1, select bank1
 14563  0F0F  1303               	bcf	3,6	;RP1=0, select bank1
 14564  0F10  00A0               	movwf	??_main^(0+128)
 14565  0F11  0820               	movf	??_main^(0+128),w
 14566  0F12  00E1               	movwf	main@tecla^(0+128)
 14567  0F13                     l8068:
 14568                           
 14569                           ;main.c: 718:                             if(tecla >= '0' && tecla <= '9')
 14570  0F13  3030               	movlw	48
 14571  0F14  0261               	subwf	main@tecla^(0+128),w
 14572  0F15  1C03               	skipc
 14573  0F16  2F18               	goto	u6191
 14574  0F17  2F19               	goto	u6190
 14575  0F18                     u6191:
 14576  0F18  2F40               	goto	l8078
 14577  0F19                     u6190:
 14578  0F19                     l8070:
 14579  0F19  303A               	movlw	58
 14580  0F1A  0261               	subwf	main@tecla^(0+128),w
 14581  0F1B  1803               	skipnc
 14582  0F1C  2F1E               	goto	u6201
 14583  0F1D  2F1F               	goto	u6200
 14584  0F1E                     u6201:
 14585  0F1E  2F40               	goto	l8078
 14586  0F1F                     u6200:
 14587  0F1F                     l8072:
 14588                           
 14589                           ;main.c: 719:                             {;main.c: 720:                                
      +                           dignum_conc(tecla, &num);
 14590  0F1F  30DE               	movlw	(low (main@num| 0))& (0+255)
 14591  0F20  00A0               	movwf	??_main^(0+128)
 14592  0F21  0820               	movf	??_main^(0+128),w
 14593  0F22  1283               	bcf	3,5	;RP0=0, select bank0
 14594  0F23  1303               	bcf	3,6	;RP1=0, select bank0
 14595  0F24  00A6               	movwf	dignum_conc@ptrNum
 14596  0F25  1683               	bsf	3,5	;RP0=1, select bank1
 14597  0F26  1303               	bcf	3,6	;RP1=0, select bank1
 14598  0F27  0861               	movf	main@tecla^(0+128),w
 14599  0F28  160A  158A  24FB  120A  158A  	fcall	_dignum_conc
 14600  0F2D                     l8074:
 14601                           
 14602                           ;main.c: 721:                                 if(num > 100)
 14603  0F2D  3000               	movlw	0
 14604  0F2E  1683               	bsf	3,5	;RP0=1, select bank1
 14605  0F2F  1303               	bcf	3,6	;RP1=0, select bank1
 14606  0F30  025F               	subwf	(main@num+1)^(0+128),w
 14607  0F31  3065               	movlw	101
 14608  0F32  1903               	skipnz
 14609  0F33  025E               	subwf	main@num^(0+128),w
 14610  0F34  1C03               	skipc
 14611  0F35  2F37               	goto	u6211
 14612  0F36  2F38               	goto	u6210
 14613  0F37                     u6211:
 14614  0F37  2F3C               	goto	l835
 14615  0F38                     u6210:
 14616  0F38                     l8076:
 14617                           
 14618                           ;main.c: 722:                                     num = 100;
 14619  0F38  3064               	movlw	100
 14620  0F39  00DE               	movwf	main@num^(0+128)
 14621  0F3A  3000               	movlw	0
 14622  0F3B  00DF               	movwf	(main@num^(0+128)+1)
 14623  0F3C                     l835:
 14624                           
 14625                           ;main.c: 723:                                 estado = 90;
 14626  0F3C  305A               	movlw	90
 14627  0F3D  00A0               	movwf	??_main^(0+128)
 14628  0F3E  0820               	movf	??_main^(0+128),w
 14629  0F3F  00E0               	movwf	main@estado^(0+128)
 14630  0F40                     l8078:
 14631                           
 14632                           ;main.c: 725:                             if(tecla == '*')
 14633  0F40  302A               	movlw	42
 14634  0F41  0661               	xorwf	main@tecla^(0+128),w
 14635  0F42  1D03               	btfss	3,2
 14636  0F43  2F45               	goto	u6221
 14637  0F44  2F46               	goto	u6220
 14638  0F45                     u6221:
 14639  0F45  2F52               	goto	l8084
 14640  0F46                     u6220:
 14641  0F46                     l8080:
 14642                           
 14643                           ;main.c: 726:                             {;main.c: 727:                                
      +                           dignum_apagar(&num);
 14644  0F46  30DE               	movlw	(low (main@num| 0))& (0+255)
 14645  0F47  160A  158A  2302  120A  158A  	fcall	_dignum_apagar
 14646  0F4C                     l8082:
 14647                           
 14648                           ;main.c: 728:                                 estado = 90;
 14649  0F4C  305A               	movlw	90
 14650  0F4D  1683               	bsf	3,5	;RP0=1, select bank1
 14651  0F4E  1303               	bcf	3,6	;RP1=0, select bank1
 14652  0F4F  00A0               	movwf	??_main^(0+128)
 14653  0F50  0820               	movf	??_main^(0+128),w
 14654  0F51  00E0               	movwf	main@estado^(0+128)
 14655  0F52                     l8084:
 14656                           
 14657                           ;main.c: 730:                             if(tecla == '#')
 14658  0F52  3023               	movlw	35
 14659  0F53  0661               	xorwf	main@tecla^(0+128),w
 14660  0F54  1D03               	btfss	3,2
 14661  0F55  2F57               	goto	u6231
 14662  0F56  2F58               	goto	u6230
 14663  0F57                     u6231:
 14664  0F57  2FE5               	goto	l8104
 14665  0F58                     u6230:
 14666  0F58                     l8086:
 14667                           
 14668                           ;main.c: 731:                                 estado = 92;
 14669  0F58  305C               	movlw	92
 14670  0F59  00A0               	movwf	??_main^(0+128)
 14671  0F5A  0820               	movf	??_main^(0+128),w
 14672  0F5B  00E0               	movwf	main@estado^(0+128)
 14673  0F5C  2FE5               	goto	l8104
 14674  0F5D                     l8088:
 14675                           
 14676                           ;main.c: 735:                             fifo_add_control(num);
 14677  0F5D  085E               	movf	main@num^(0+128),w
 14678  0F5E  160A  158A  2447  120A  158A  	fcall	_fifo_add_control
 14679  0F63  2C26               	goto	l7926
 14680  0F64                     l8094:
 14681                           
 14682                           ;main.c: 741:                             fifo_add_ciclo(ciclos);
 14683  0F64  085D               	movf	(main@ciclos+1)^(0+128),w
 14684  0F65  1283               	bcf	3,5	;RP0=0, select bank0
 14685  0F66  1303               	bcf	3,6	;RP1=0, select bank0
 14686  0F67  00A1               	movwf	fifo_add_ciclo@ciclos+1
 14687  0F68  1683               	bsf	3,5	;RP0=1, select bank1
 14688  0F69  1303               	bcf	3,6	;RP1=0, select bank1
 14689  0F6A  085C               	movf	main@ciclos^(0+128),w
 14690  0F6B  1283               	bcf	3,5	;RP0=0, select bank0
 14691  0F6C  1303               	bcf	3,6	;RP1=0, select bank0
 14692  0F6D  00A0               	movwf	fifo_add_ciclo@ciclos
 14693  0F6E  160A  158A  2225  120A  158A  	fcall	_fifo_add_ciclo
 14694  0F73                     l8096:
 14695                           
 14696                           ;main.c: 742:                             estado = 30;
 14697  0F73  301E               	movlw	30
 14698  0F74  1683               	bsf	3,5	;RP0=1, select bank1
 14699  0F75  1303               	bcf	3,6	;RP1=0, select bank1
 14700  0F76  00A0               	movwf	??_main^(0+128)
 14701  0F77  0820               	movf	??_main^(0+128),w
 14702  0F78  00E0               	movwf	main@estado^(0+128)
 14703  0F79  2B5B               	goto	l776
 14704  0F7A                     l8102:
 14705  0F7A  1683               	bsf	3,5	;RP0=1, select bank1
 14706  0F7B  1303               	bcf	3,6	;RP1=0, select bank1
 14707  0F7C  0860               	movf	main@estado^(0+128),w
 14708  0F7D  00A0               	movwf	??_main^(0+128)
 14709  0F7E  01A1               	clrf	(??_main^(0+128)+1)
 14710                           
 14711                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14712                           ; Switch size 1, requested type "simple"
 14713                           ; Number of cases is 1, Range of values is 0 to 0
 14714                           ; switch strategies available:
 14715                           ; Name         Instructions Cycles
 14716                           ; simple_byte            4     3 (average)
 14717                           ; direct_byte           11     8 (fixed)
 14718                           ; jumptable            260     6 (fixed)
 14719                           ;	Chosen strategy is simple_byte
 14720  0F7F  0821               	movf	(??_main+1)^(0+128),w
 14721  0F80  3A00               	xorlw	0	; case 0
 14722  0F81  1903               	skipnz
 14723  0F82  2F84               	goto	l8700
 14724  0F83  2FE5               	goto	l8104
 14725  0F84                     l8700:
 14726                           
 14727                           ; Switch size 1, requested type "simple"
 14728                           ; Number of cases is 29, Range of values is 0 to 92
 14729                           ; switch strategies available:
 14730                           ; Name         Instructions Cycles
 14731                           ; simple_byte           88    45 (average)
 14732                           ; jumptable            260     6 (fixed)
 14733                           ;	Chosen strategy is simple_byte
 14734  0F84  0820               	movf	??_main^(0+128),w
 14735  0F85  3A00               	xorlw	0	; case 0
 14736  0F86  1903               	skipnz
 14737  0F87  2FF4               	goto	L5
 14738  0F88  3A01               	xorlw	1	; case 1
 14739  0F89  1903               	skipnz
 14740  0F8A  2FEE               	goto	L1
 14741  0F8B  3A03               	xorlw	3	; case 2
 14742  0F8C  120A  118A  1903   	skipnz
 14743  0F8F  2AD0               	goto	l7694
 14744  0F90  3A01               	xorlw	1	; case 3
 14745  0F91  1903               	skipnz
 14746  0F92  2B46  120A  158A   	goto	l7718
 14747  0F95  3A05               	xorlw	5	; case 6
 14748  0F96  1903               	skipnz
 14749  0F97  2FF7               	goto	L7
 14750  0F98  3A01               	xorlw	1	; case 7
 14751  0F99  1903               	skipnz
 14752  0F9A  2830               	goto	l7770
 14753  0F9B  3A0F               	xorlw	15	; case 8
 14754  0F9C  120A  118A  1903   	skipnz
 14755  0F9F  2AE8  120A  158A   	goto	l7698
 14756  0FA2  3A01               	xorlw	1	; case 9
 14757  0FA3  1903               	skipnz
 14758  0FA4  2FFA               	goto	L9
 14759  0FA5  3A03               	xorlw	3	; case 10
 14760  0FA6  1903               	skipnz
 14761  0FA7  2928               	goto	l7812
 14762  0FA8  3A01               	xorlw	1	; case 11
 14763  0FA9  1903               	skipnz
 14764  0FAA  294F               	goto	l7820
 14765  0FAB  3A05               	xorlw	5	; case 14
 14766  0FAC  1903               	skipnz
 14767  0FAD  29F5               	goto	l7864
 14768  0FAE  3A1E               	xorlw	30	; case 16
 14769  0FAF  1903               	skipnz
 14770  0FB0  29EF               	goto	l7860
 14771  0FB1  3A0E               	xorlw	14	; case 30
 14772  0FB2  1903               	skipnz
 14773  0FB3  2A63               	goto	l7868
 14774  0FB4  3A36               	xorlw	54	; case 40
 14775  0FB5  1903               	skipnz
 14776  0FB6  2B86               	goto	l7898
 14777  0FB7  3A01               	xorlw	1	; case 41
 14778  0FB8  1903               	skipnz
 14779  0FB9  2BDA               	goto	l7920
 14780  0FBA  3A03               	xorlw	3	; case 42
 14781  0FBB  1903               	skipnz
 14782  0FBC  2C20               	goto	l7924
 14783  0FBD  3A1E               	xorlw	30	; case 52
 14784  0FBE  1903               	skipnz
 14785  0FBF  2C2F               	goto	l7930
 14786  0FC0  3A01               	xorlw	1	; case 53
 14787  0FC1  1903               	skipnz
 14788  0FC2  2C97               	goto	l7956
 14789  0FC3  3A03               	xorlw	3	; case 54
 14790  0FC4  1903               	skipnz
 14791  0FC5  2F64               	goto	l8094
 14792  0FC6  3A70               	xorlw	112	; case 70
 14793  0FC7  1903               	skipnz
 14794  0FC8  2A6A               	goto	l7872
 14795  0FC9  3A01               	xorlw	1	; case 71
 14796  0FCA  1903               	skipnz
 14797  0FCB  2FFD               	goto	L11
 14798  0FCC  3A0D               	xorlw	13	; case 74
 14799  0FCD  1903               	skipnz
 14800  0FCE  2CF0               	goto	l7966
 14801  0FCF  3A01               	xorlw	1	; case 75
 14802  0FD0  1903               	skipnz
 14803  0FD1  2D24               	goto	l7980
 14804  0FD2  3A07               	xorlw	7	; case 76
 14805  0FD3  1903               	skipnz
 14806  0FD4  2D3E               	goto	l7986
 14807  0FD5  3A01               	xorlw	1	; case 77
 14808  0FD6  1903               	skipnz
 14809  0FD7  2DED               	goto	l8002
 14810  0FD8  3A03               	xorlw	3	; case 78
 14811  0FD9  1903               	skipnz
 14812  0FDA  2EB3               	goto	l8058
 14813  0FDB  3A14               	xorlw	20	; case 90
 14814  0FDC  1903               	skipnz
 14815  0FDD  2EC3               	goto	l8062
 14816  0FDE  3A01               	xorlw	1	; case 91
 14817  0FDF  1903               	skipnz
 14818  0FE0  2F09               	goto	l8066
 14819  0FE1  3A07               	xorlw	7	; case 92
 14820  0FE2  1903               	skipnz
 14821  0FE3  2F5D               	goto	l8088
 14822  0FE4  2FE5               	goto	l8104
 14823  0FE5                     l8104:
 14824                           
 14825                           ;main.c: 747:         serialIOscan();
 14826  0FE5  160A  158A  26C8  120A  158A  	fcall	_serialIOscan
 14827  0FEA  2F7A               	goto	l8102
 14828  0FEB  120A  118A  280C   	ljmp	start
 14829  0FEE                     L1:
 14830  0FEE                     __end_of_main:
 14831  0FEE  120A  118A  2D34   	ljmp	l7672
 14832  0FF1                     L3:
 14833  0FF1                     L2:
 14834  0FF1  120A  118A  2AE1   	ljmp	l7696
 14835  0FF4                     L5:
 14836  0FF4                     L4:
 14837  0FF4  120A  118A  2CAD   	ljmp	l7624
 14838  0FF7                     L7:
 14839  0FF7                     L6:
 14840  0FF7  120A  118A  2B74   	ljmp	l7726
 14841  0FFA                     L9:
 14842  0FFA                     L8:
 14843  0FFA  120A  118A  2B11   	ljmp	l7706
 14844  0FFD                     L11:
 14845  0FFD                     L10:
 14846  0FFD  120A  118A  2B27   	ljmp	l7710

Data Sizes:
    Strings     747
    Constant    0
    Data        137
    BSS         68
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80     36      78
    BANK1            80     66      78
    BANK3            96      0      76
    BANK2            96      0      70

Pointer List with Targets:

    S122$1$1	PTR unsigned char  size(1) Largest target is 0

    S122$3$0	PTR unsigned char  size(1) Largest target is 0

    S737$1$0	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_35(CODE[14]), STR_34(CODE[40]), Wifi_cipsend@vtr(BANK0[30]), Wifi_cipsend@str(BANK0[30]), 
		 -> STR_33(CODE[21]), STR_32(CODE[14]), STR_31(CODE[15]), STR_30(CODE[18]), 
		 -> STR_29(CODE[11]), STR_28(CODE[11]), Wifi_connect@str(BANK0[40]), STR_27(CODE[14]), 
		 -> STR_26(CODE[41]), STR_25(CODE[14]), STR_24(CODE[41]), STR_23(CODE[14]), 
		 -> STR_22(CODE[14]), 

    S737$2$0	PTR unsigned char  size(1) Largest target is 0

    S737$4$1	PTR const unsigned char  size(1) Largest target is 0

    S737$4$0	PTR const unsigned char  size(1) Largest target is 0

    S737$9$1	PTR unsigned char  size(1) Largest target is 0

    S737$9$0	PTR unsigned char  size(1) Largest target is 0

    S1287$7$1	PTR const unsigned char  size(1) Largest target is 0

    S1287$7$0	PTR const unsigned char  size(1) Largest target is 0

    S122$0$1	PTR unsigned char  size(1) Largest target is 18
		 -> fila(BANK0[18]), 

    S665$1$0	PTR const unsigned char  size(2) Largest target is 83
		 -> STR_16(CODE[78]), STR_15(CODE[62]), STR_4(CODE[83]), 

    S665$2$2	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_21(CODE[21]), STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[8]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_3(CODE[21]), 
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 

    wifi_send@msg	PTR const unsigned char  size(2) Largest target is 41
		 -> STR_35(CODE[14]), STR_34(CODE[40]), Wifi_cipsend@vtr(BANK0[30]), Wifi_cipsend@str(BANK0[30]), 
		 -> STR_33(CODE[21]), STR_32(CODE[14]), STR_31(CODE[15]), STR_30(CODE[18]), 
		 -> STR_29(CODE[11]), STR_28(CODE[11]), Wifi_connect@str(BANK0[40]), STR_27(CODE[14]), 
		 -> STR_26(CODE[41]), STR_25(CODE[14]), STR_24(CODE[41]), STR_23(CODE[14]), 
		 -> STR_22(CODE[14]), 

    S1287eusartT$search_string	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)int  size(1) Largest target is 2
		 -> search(), 

    eusart.search_string	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)int  size(1) Largest target is 2
		 -> search(), 

    S1287eusartT$init	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
		 -> initEUSART(), 

    eusart.init	PTR FTN(unsigned long ,)void  size(1) Largest target is 1
		 -> initEUSART(), 

    S1287eusartT$txSTATUS	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> txStatusEUSART(), 

    eusart.txSTATUS	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> txStatusEUSART(), 

    S1287eusartT$tx	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> txEUSART(), 

    eusart.tx	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> txEUSART(), 

    S1287eusartT$rxResetERROR	PTR FTN()void  size(1) Largest target is 1
		 -> rxResetErrorEUSART(), 

    eusart.rxResetERROR	PTR FTN()void  size(1) Largest target is 1
		 -> rxResetErrorEUSART(), 

    S1287eusartT$rxERROR	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> rxErrorEUSART(), 

    eusart.rxERROR	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> rxErrorEUSART(), 

    S1287eusartT$rxSTATUS	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> rxStatusEUSART(), 

    eusart.rxSTATUS	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> rxStatusEUSART(), 

    S1287eusartT$rx	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> rxEUSART(), 

    eusart.rx	PTR FTN()unsigned char  size(1) Largest target is 1
		 -> rxEUSART(), 

    main@ptr	PTR unsigned char  size(1) Largest target is 20
		 -> main@lema(BANK1[20]), 

    S737$cipsend	PTR FTN(PTR unsigned char ,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> Wifi_cipsend(), 

    wifi.cipsend	PTR FTN(PTR unsigned char ,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> Wifi_cipsend(), 

    S737$config_servidor	PTR FTN()void  size(1) Largest target is 1
		 -> Wifi_config_servidor(), 

    wifi.config_servidor	PTR FTN()void  size(1) Largest target is 1
		 -> Wifi_config_servidor(), 

    S737$scan	PTR FTN()void  size(1) Largest target is 1
		 -> Wifi_scan(), 

    wifi.scan	PTR FTN()void  size(1) Largest target is 1
		 -> Wifi_scan(), 

    S737$autoconnect	PTR FTN()void  size(1) Largest target is 1
		 -> Wifi_autoconnect(), 

    wifi.autoconnect	PTR FTN()void  size(1) Largest target is 1
		 -> Wifi_autoconnect(), 

    S737$ip	PTR FTN()void  size(1) Largest target is 1
		 -> Wifi_ip(), 

    wifi.ip	PTR FTN()void  size(1) Largest target is 1
		 -> Wifi_ip(), 

    S737$connect	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> Wifi_connect(), 

    wifi.connect	PTR FTN(PTR const unsigned char ,PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> Wifi_connect(), 

    S737$mode	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Wifi_mode(), 

    wifi.mode	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Wifi_mode(), 

    S737$receive	PTR FTN(PTR unsigned char ,)unsigned char  size(1) Largest target is 1
		 -> wifi_receive(), 

    wifi.receive	PTR FTN(PTR unsigned char ,)unsigned char  size(1) Largest target is 1
		 -> wifi_receive(), 

    S737$send	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> wifi_send(), 

    wifi.send	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> wifi_send(), 

    S737$init	PTR FTN(long ,)void  size(1) Largest target is 1
		 -> wifi_init(), 

    wifi.init	PTR FTN(long ,)void  size(1) Largest target is 1
		 -> wifi_init(), 

    S665$clr	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_clr(), 

    IHM.clr	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_clr(), 

    S665$printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD_num(), 

    IHM.printv	PTR FTN(unsigned char ,unsigned char ,int ,unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD_num(), 

    S665$printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD(), 

    IHM.printpos	PTR FTN(unsigned char ,unsigned char ,PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD(), 

    S665$print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD_str(), 

    IHM.print	PTR FTN(PTR const unsigned char ,)void  size(1) Largest target is 1
		 -> dispLCD_str(), 

    S665$init	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_init(), 

    IHM.init	PTR FTN()void  size(1) Largest target is 1
		 -> dispLCD_init(), 

    initSerialIO@ptrOut	PTR unsigned char  size(1) Largest target is 1
		 -> main@vetorOut(BANK1[1]), 

    initSerialIO@ptrIn	PTR unsigned char  size(1) Largest target is 1
		 -> main@vetorIn(BANK1[1]), 

    ptrSerialOut	PTR unsigned char  size(1) Largest target is 1
		 -> NULL(NULL[0]), main@vetorOut(BANK1[1]), 

    ptrSerialIn	PTR unsigned char  size(1) Largest target is 1
		 -> NULL(NULL[0]), main@vetorIn(BANK1[1]), 

    dignum_apagar@ptrNum	PTR unsigned int  size(1) Largest target is 2
		 -> main@ciclos(BANK1[2]), main@num(BANK1[2]), 

    dignum_conc@ptrNum	PTR unsigned int  size(1) Largest target is 2
		 -> main@ciclos(BANK1[2]), main@num(BANK1[2]), 

    decodifica@d	PTR unsigned char  size(1) Largest target is 18
		 -> printExec@passo(BANK0[1]), fifo_print@comando(BANK0[1]), fila(BANK0[18]), 

    codifica@dado	PTR unsigned char  size(2) Largest target is 512
		 -> fifo_add_control@c(BANK0[1]), fifo_add_tempo@t(BANK0[1]), fifo_add@passo(BANK0[1]), RAM(DATA[512]), 

    sp__fifo_adrs	PTR unsigned char  size(1) Largest target is 18
		 -> fila(BANK0[18]), 

    salva_atuadores_init@pt	PTR unsigned char  size(1) Largest target is 4
		 -> salva_atuadores_init@condi_init(BANK0[4]), 

    salvar_receita@data	PTR unsigned char  size(1) Largest target is 18
		 -> fila(BANK0[18]), 

    S122$formatar	PTR FTN()void  size(1) Largest target is 1
		 -> formatar_receitas(), 

    EEPROM.formatar	PTR FTN()void  size(1) Largest target is 1
		 -> formatar_receitas(), 

    S122$livre	PTR FTN(PTR unsigned char ,)void  size(1) Largest target is 1
		 -> receita_livre(), 

    EEPROM.livre	PTR FTN(PTR unsigned char ,)void  size(1) Largest target is 1
		 -> receita_livre(), 

    S122$deletar	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> deletar_receita(), 

    EEPROM.deletar	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> deletar_receita(), 

    S122$buscar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> buscar_receita(), 

    EEPROM.buscar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> buscar_receita(), 

    S122$salvar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> salvar_receita(), 

    EEPROM.salvar	PTR FTN(unsigned char ,PTR unsigned char ,)void  size(1) Largest target is 1
		 -> salvar_receita(), 

    dispLCD_str@str	PTR const unsigned char  size(2) Largest target is 83
		 -> STR_16(CODE[78]), STR_15(CODE[62]), STR_4(CODE[83]), 

    dispLCD@str	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_21(CODE[21]), STR_20(CODE[21]), STR_19(CODE[21]), STR_18(CODE[2]), 
		 -> STR_17(CODE[2]), STR_14(CODE[21]), STR_13(CODE[21]), STR_12(CODE[21]), 
		 -> STR_11(CODE[21]), STR_10(CODE[21]), STR_9(CODE[8]), STR_8(CODE[21]), 
		 -> STR_7(CODE[21]), STR_6(CODE[21]), STR_5(CODE[21]), STR_3(CODE[21]), 
		 -> STR_2(CODE[2]), STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _irq in COMMON

    _irq->_intt1_1ms

Critical Paths under _main in BANK0

    _main->_printExec
    _wifi_init->_initEUSART
    _initEUSART->___lldiv
    _teclado_borda->_teclado_scan
    _serialIOscan->_serialIObyteShift
    _salvar_receita->___awmod
    _salvar_dado->___awmod
    _salva_atuadores_init->_ler_atuador
    _printExec->_dispLCD_num
    _posAtual->_fifo_lerPos
    _dispLCD_num->_dignum_tam
    _fifo_print->___awdiv
    _fifo_delete->_fifo_alinharPrint
    _fifo_add_tempo->_fifo_alinharPrint
    _fifo_add_control->_fifo_alinharPrint
    _fifo_add->_fifo_alinharPrint
    _fifo_alinharPrint->_dignum_tam
    _dignum_tam->___awdiv
    _dispLCD_str->_dispLCD_lincol
    _dispLCD_init->_delay
    _dispLCD_clr->_dispLCD_instReg
    _dispLCD->_dispLCD_lincol
    _dispLCD_lincol->_dispLCD_instReg
    _dignum_conc->___wmul
    _dignum_apagar->___lwdiv
    _Wifi_mode->_wifi_send
    _wifi_send->_txEUSART
    _MCP4725->_dac_write
    _dac_write->_delay
    _dac_init->_delay
    _I2C_init->___lldiv

Critical Paths under _irq in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _irq in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _irq in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _irq in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                85    85      0   78100
                                              0 BANK1     66    66      0
                           _I2C_init
                            _MCP4725
                          _Wifi_mode *
                            ___awmod
                        _alt_atuador
                              _delay
                      _dignum_apagar
                        _dignum_conc
                            _dispLCD *
                        _dispLCD_clr *
                    _dispLCD_dataReg
                       _dispLCD_init
                     _dispLCD_lincol
                        _dispLCD_num *
                        _dispLCD_str *
                           _fifo_add
                     _fifo_add_ciclo
                   _fifo_add_control
                     _fifo_add_tempo
                          _fifo_adrs
                        _fifo_delete
                    _fifo_disponivel
                        _fifo_indice
               _fifo_indicePrint_dec
               _fifo_indicePrint_inc
                         _fifo_print
                           _fifo_tam
                      _getContCiclos
                    _getIndicePassos
                       _initSerialIO
                     _init_atuadores
                        _ler_atuador
                          _printExec
               _salva_atuadores_init
                        _salvar_dado
                     _salvar_receita *
                       _serialIOscan
                              _setT1
                           _statusT1
                      _teclado_borda
                       _teclado_init
                        _timer1_init
                          _wifi_init *
 ---------------------------------------------------------------------------------
 (1) _wifi_init                                            4     0      4     793
                                             24 BANK0      4     0      4
                         _initEUSART *
 ---------------------------------------------------------------------------------
 (2) _initEUSART                                          10     6      4     697
                                             14 BANK0     10     6      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _timer1_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _teclado_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _teclado_borda                                        3     3      0     340
                                              7 BANK0      3     3      0
                       _teclado_scan
 ---------------------------------------------------------------------------------
 (2) _teclado_scan                                         7     7      0     204
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) _statusT1                                             4     0      4       0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _setT1                                                4     0      4     301
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _serialIOscan                                         6     6      0     300
                                              4 BANK0      6     6      0
                  _serialIObyteShift
                       _serialIOload
 ---------------------------------------------------------------------------------
 (2) _serialIOload                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _serialIObyteShift                                    4     4      0     167
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _salvar_receita                                       7     5      2    1349
                                              7 BANK0      7     5      2
                       _EEPROM_write
                            ___awmod (ARG)
                        _end_receita
                          _fifo_adrs (ARG)
 ---------------------------------------------------------------------------------
 (1) _salvar_dado                                          7     5      2    1300
                                              7 BANK0      7     5      2
                       _EEPROM_write
                            ___awmod (ARG)
                        _end_receita
 ---------------------------------------------------------------------------------
 (2) _end_receita                                          4     2      2     571
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _EEPROM_write                                         2     1      1     422
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _salva_atuadores_init                                 8     8      0     355
                                              3 BANK0      8     8      0
                        _ler_atuador
 ---------------------------------------------------------------------------------
 (2) _ler_atuador                                          3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _printExec                                           11    10      1   15176
                                             25 BANK0     11    10      1
                         _decodifica
                         _dignum_tam
                    _dispLCD_dataReg
                     _dispLCD_lincol
                        _dispLCD_num
                           _posAtual
 ---------------------------------------------------------------------------------
 (2) _posAtual                                             3     3      0      99
                                              1 BANK0      3     3      0
                        _fifo_lerPos
                    _getIndicePassos
 ---------------------------------------------------------------------------------
 (3) _getIndicePassos                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _fifo_lerPos                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _dispLCD_num                                         12     7      5    8970
                                             13 BANK0     12     7      5
                            ___awdiv
                            ___awmod
                         _dignum_tam (ARG)
                    _dispLCD_dataReg
                     _dispLCD_lincol
                        _fifo_indice (ARG)
                           _fifo_tam (ARG)
                      _getContCiclos (ARG)
                    _getIndicePassos (ARG)
 ---------------------------------------------------------------------------------
 (1) _init_atuadores                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSerialIO                                         4     2      2     309
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _getContCiclos                                        2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _fifo_tam                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fifo_print                                          10    10      0    7068
                                              9 BANK0     10    10      0
                            ___awdiv
                            ___awmod
                         _decodifica
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1693
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) _fifo_indicePrint_inc                                 2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _fifo_indicePrint_dec                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fifo_indice                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fifo_disponivel                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fifo_delete                                          2     2      0    4434
                                             19 BANK0      2     2      0
                        _alt_atuador
                           _codifica
                         _decodifica
                  _fifo_alinharPrint
 ---------------------------------------------------------------------------------
 (2) _decodifica                                           3     3      0     655
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _alt_atuador                                          3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _fifo_adrs                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _fifo_add_tempo                                       2     2      0    3907
                                             19 BANK0      2     2      0
                           _codifica
                  _fifo_alinharPrint
 ---------------------------------------------------------------------------------
 (1) _fifo_add_control                                     2     2      0    3876
                                             19 BANK0      2     2      0
                           _codifica
                  _fifo_alinharPrint
 ---------------------------------------------------------------------------------
 (1) _fifo_add_ciclo                                       3     1      2     152
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _fifo_add                                             2     2      0    3907
                                             19 BANK0      2     2      0
                           _codifica
                  _fifo_alinharPrint
 ---------------------------------------------------------------------------------
 (2) _fifo_alinharPrint                                    6     6      0    2985
                                             13 BANK0      6     6      0
                         _dignum_tam
 ---------------------------------------------------------------------------------
 (2) _dignum_tam                                           4     2      2    2527
                                              9 BANK0      4     2      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1705
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (2) _codifica                                             5     3      2     763
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _dispLCD_str                                          5     3      2    2093
                                              8 BANK0      5     3      2
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (1) _dispLCD_init                                         0     0      0    1542
                              _delay
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (1) _dispLCD_clr                                          0     0      0     248
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (1) _dispLCD                                              6     2      4    5439
                                              8 BANK0      6     2      4
                    _dispLCD_dataReg
                     _dispLCD_lincol
 ---------------------------------------------------------------------------------
 (3) _dispLCD_lincol                                       5     4      1    1703
                                              3 BANK0      5     4      1
                    _dispLCD_instReg
 ---------------------------------------------------------------------------------
 (4) _dispLCD_instReg                                      3     3      0     248
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (3) _dispLCD_dataReg                                      2     2      0      62
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _dignum_conc                                          6     5      1     679
                                              6 BANK0      6     5      1
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _dignum_apagar                                        1     1      0     591
                                              8 BANK0      1     1      0
                            ___lwdiv
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _Wifi_mode                                            1     0      1    1849
                                              4 BANK0      1     0      1
                          _wifi_send
 ---------------------------------------------------------------------------------
 (2) _wifi_send                                            3     1      2    1691
                                              1 BANK0      3     1      2
                           _txEUSART *
                     _txStatusEUSART *
 ---------------------------------------------------------------------------------
 (3) _txStatusEUSART                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _txEUSART                                             1     0      1      96
                                              0 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (1) _MCP4725                                              2     0      2    4397
                                              8 BANK0      2     0      2
                           _I2C_stop
                           _dac_init
                          _dac_write
                              _delay
 ---------------------------------------------------------------------------------
 (2) _dac_write                                            4     2      2    1657
                                              4 BANK0      4     2      2
                    _I2C_ack_receive
                             _I2C_tx
                              _delay
 ---------------------------------------------------------------------------------
 (2) _dac_init                                             0     0      0    1325
                    _I2C_ack_receive
                          _I2C_start
                             _I2C_tx
                              _delay
 ---------------------------------------------------------------------------------
 (2) _delay                                                4     2      2    1294
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _I2C_tx                                               1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_ack_receive                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_init                                             4     0      4     722
                                             14 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     601
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _irq                                                  2     2      0       0
                                              4 COMMON     2     2      0
                          _intt1_1ms
 ---------------------------------------------------------------------------------
 (6) _intt1_1ms                                            4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_init
     ___lldiv
   _MCP4725
     _I2C_stop
     _dac_init
       _I2C_ack_receive
       _I2C_start
       _I2C_tx
       _delay
     _dac_write
       _I2C_ack_receive
       _I2C_tx
       _delay
     _delay
   _Wifi_mode *
     _wifi_send
       _txEUSART *
       _txStatusEUSART *
   ___awmod *
   _alt_atuador *
   _delay *
   _dignum_apagar *
     ___lwdiv
   _dignum_conc *
     ___wmul
   _dispLCD *
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
   _dispLCD_clr *
     _dispLCD_instReg
   _dispLCD_dataReg *
   _dispLCD_init *
     _delay
     _dispLCD_instReg
   _dispLCD_lincol *
     _dispLCD_instReg
   _dispLCD_num *
     ___awdiv
     ___awmod
     _dignum_tam (ARG)
       ___awdiv
     _dispLCD_dataReg (ARG)
     _dispLCD_lincol (ARG)
       _dispLCD_instReg
     _fifo_indice (ARG)
     _fifo_tam (ARG)
     _getContCiclos (ARG)
     _getIndicePassos (ARG)
   _dispLCD_str *
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
   _fifo_add *
     _codifica
     _fifo_alinharPrint
       _dignum_tam
         ___awdiv
   _fifo_add_ciclo *
   _fifo_add_control *
     _codifica
     _fifo_alinharPrint
       _dignum_tam
         ___awdiv
   _fifo_add_tempo *
     _codifica
     _fifo_alinharPrint
       _dignum_tam
         ___awdiv
   _fifo_adrs *
   _fifo_delete *
     _alt_atuador
     _codifica
     _decodifica
     _fifo_alinharPrint
       _dignum_tam
         ___awdiv
   _fifo_disponivel *
   _fifo_indice *
   _fifo_indicePrint_dec *
   _fifo_indicePrint_inc *
   _fifo_print *
     ___awdiv
     ___awmod
     _decodifica
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
   _fifo_tam *
   _getContCiclos *
   _getIndicePassos *
   _initSerialIO *
   _init_atuadores *
   _ler_atuador *
   _printExec *
     _decodifica
     _dignum_tam
       ___awdiv
     _dispLCD_dataReg
     _dispLCD_lincol
       _dispLCD_instReg
     _dispLCD_num
       ___awdiv
       ___awmod
       _dignum_tam (ARG)
         ___awdiv
       _dispLCD_dataReg (ARG)
       _dispLCD_lincol (ARG)
         _dispLCD_instReg
       _fifo_indice (ARG)
       _fifo_tam (ARG)
       _getContCiclos (ARG)
       _getIndicePassos (ARG)
     _posAtual
       _fifo_lerPos
       _getIndicePassos
   _salva_atuadores_init *
     _ler_atuador
   _salvar_dado *
     _EEPROM_write
     ___awmod (ARG)
     _end_receita (ARG)
   _salvar_receita *
     _EEPROM_write
     ___awmod (ARG)
     _end_receita (ARG)
     _fifo_adrs (ARG)
   _serialIOscan *
     _serialIObyteShift
     _serialIOload
   _setT1 *
   _statusT1 *
   _teclado_borda *
     _teclado_scan
   _teclado_init *
   _timer1_init *
   _wifi_init *
     _initEUSART *
       ___lldiv

 _irq (ROOT)
   _intt1_1ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      4C       9       79.2%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      46      11       72.9%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     42      4E       7       97.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     24      4E       5       97.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     139      12        0.0%
ABS                  0      0     139       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Thu Nov 18 00:57:59 2021

            ??_fifo_add_control 0033                   dac_write@code 0024                ??_fifo_add_tempo 0033  
 __size_of_fifo_indicePrint_dec 000B   __size_of_fifo_indicePrint_inc 002E                               _d 0078  
                             pc 0002                     fp__txEUSART 006F                     _SSPSTATbits 0094  
                            l35 1AE3                              l60 1DBA                              l71 1D59  
                            l57 1752                              l68 1DEB                              l92 071E  
                            l77 1F3E                              l94 076B                              l97 19D3  
                  ___awdiv@sign 0026         __end_of_dispLCD_dataReg 1DBB                              fsr 0004  
           ___wmul@multiplicand 0022                    printExec@col 0042                    printExec@ind 0039  
                salvar_dado@col 0027                  salvar_dado@aux 002C              __size_of_I2C_start 000A  
                           l105 1FBA                             l210 19B6                             l141 1A92  
                           l135 1AFB                             l400 1D29                             l232 1CFA  
                           l241 1E23                             l137 1AFF                             l306 17FF  
                           l138 1B01                             l154 1B62                             l146 1E1E  
                           l403 1B20                             l243 1E2A                             l219 19DA  
                           l420 07EF                             l244 1E31                             l324 16D3  
                           l341 1A2F                             l245 1E38                             l334 082F  
                           l246 1E55                             l350 19B4                             l423 1AA9  
                           l431 0686                             l416 07C9                             l344 07FF  
                           l256 151D                             l409 1BA6                             l329 1D89  
                           l281 19B2                             l361 1A45                             l249 19C0  
                           l338 1C71                             l258 1529                             l347 1A3A  
                           l275 19FC                             l460 1BB0                             l357 1CCC  
                           l373 027D                             l461 1BB9                             l533 1A6D  
                           l462 1BBA                             l287 1428                             l439 0686  
                           l471 1F02                             l384 0212                             l464 1BCA  
                           l456 19C5                             l536 07FB                             l465 1BCC  
                           l481 19E2                             l474 1E8C                             l539 1A50  
                           l491 138F                             l812 0D49                             l397 0283  
                           l902 1A5C                             l920 19C6                             l496 1B7E  
                           l905 1A00                             l497 1B83                             l753 095A  
                           l907 1A05                             l923 19CC                             l835 0F3C  
                           l908 1A06                             l861 1B41                             l686 052F  
                           l855 1F7B                             l791 0C62                             l784 0BB9  
                           l776 0B5B                             l881 1C46                             l858 1FFF  
                           l795 0C69                             l884 1A0A                             l886 1A0F  
                           l990 19BB                             l887 1A10                             l993 19F3  
                           l899 1A56                             l996 14CF                             _IHM 00E2  
                           _irq 1AAA                             fsr0 0004                             indf 0000  
       __end_of_dispLCD_instReg 1753                    ___awmod@sign 0026                 __end_of_MCP4725 1B42  
               salvar_dado@data 0028                 salvar_dado@adrs 002B                alt_atuador@tecla 0022  
                          l1034 1A7E                            l1043 1EC7                            l1220 15EC  
                          l1062 147B                            l1350 1584                            l1184 1BDB  
                          l1337 1655                            l1186 1BF3                            l1456 1343  
                          l7000 1308                            l4600 1344                            l7010 132B  
                          l7002 130B                            l4602 1348                            l7012 1331  
                          l7004 1312                            l7100 14D0                            l4620 1383  
                          l7014 1332                            l7006 1316                            l7030 1D32  
                          l7022 1D2A                            l7110 150A                            l7102 14DA  
                          l4622 1389                            l4614 135B                            l4606 134F  
                          l7016 1339                            l7008 131A                            l7040 1D41  
                          l7032 1D33                            l7024 1D2D                            l7200 1C9F  
                          l7120 1523                            l7112 150B                            l7104 14E5  
                          l4616 136A                            l4608 135A                            l8000 0DC2  
                          l7018 133F                            l7050 1F09                            l7042 1D47  
                          l7034 1D34                            l7026 1D30                            l7130 13DC  
                          l7210 1A3B                            l7202 1CA7                            l7122 1528  
                          l7114 1510                            l7106 14F0                            l4618 137F  
                          l4626 138E                            l8010 0DFD                            l8002 0DED  
                          l7052 1F14                            l7060 19CD                            l7044 1D4D  
                          l7036 1D35                            l7028 1D31                            l6500 15F9  
                          l7140 141C                            l7132 13E3                            l7212 1A43  
                          l7204 1CB9                            l7300 01FF                            l7220 00A3  
                          l7116 1518                            l7108 14FB                            l8020 0E2A  
                          l8012 0DFE                            l8004 0DF3                            l7054 1F22  
                          l7046 1D53                            l7038 1D38                            l7070 1F94  
                          l7062 1F7C                            l6510 160A                            l6502 15FB  
                          l7150 1D72                            l7126 19B1                            l7134 13E9  
                          l7142 1423                            l7206 1CC0                            l7310 021F  
                          l7302 0205                            l7230 00C3                            l7222 00AA  
                          l7214 0093                            l7118 1521                            l8030 0E37  
                          l8006 0DF6                            l8102 0F7A                            l6600 1A07  
                          l7056 1F2A                            l7048 1F03                            l7072 1F9F  
                          l7064 1F7F                            l6520 1622                            l6512 1610  
                          l6504 15FF                            l7152 1D7C                            l7144 1D5D  
                          l7160 0809                            l7136 13EB                            l7208 1CC8  
                          l7312 0223                            l7304 020B                            l7240 00E1  
                          l7232 00C8                            l7224 00B0                            l7216 0098  
                          l7400 067F                            l8040 0E46                            l8024 0E31  
                          l8016 0E05                            l8104 0FE5                            l6602 1A54  
                          l7058 1F2E                            l7066 1F87                            l7074 1FA7  
                          l6522 1633                            l6514 1613                            l6530 1647  
                          l6506 1604                            l7154 1D80                            l7146 1D63  
                          l7162 080E                            l7170 082A                            l7138 13F5  
                          l7330 0269                            l7314 0228                            l7306 0212  
                          l7322 0233                            l7242 00E7                            l7250 010F  
                          l7234 00CB                            l7226 00B7                            l7218 009C  
                          l7090 1B45                            l7410 1EF3                            l7402 1EC8  
                          l8042 0E60                            l8034 0E3E                            l8018 0E1F  
                          l6620 15AB                            l6612 1585                            l6604 19C6  
                          l6540 1AC8                            l7500 1B31                            l6460 16F1  
                          l6452 16D7                            l7068 1F8D                            l6532 164C  
                          l6524 1639                            l6516 161A                            l6508 1608  
                          l7148 1D68                            l7156 1D84                            l7180 1C68  
                          l7172 1C4A                            l7164 0818                            l7332 0270  
                          l7316 022C                            l7308 0219                            l7324 0257  
                          l7260 0151                            l7252 0115                            l7244 00FD  
                          l7236 00D1                            l7228 00BF                            l7420 1E66  
                          l6700 0709                            l7092 1B57                            l7084 1E01  
                          l7076 1DEC                            l7412 1EF7                            l7404 1ECF  
                          l8044 0E6B                            l8036 0E3F                            l8052 0E77  
                          l8028 0E36                            l6630 15DE                            l6622 15B4  
                          l6614 1597                            l6542 1ADB                            l7502 1B36  
                          l6606 19B7                            l7510 1439                            l6550 1D9C  
                          l6470 1710                            l6462 16FC                            l6454 16D8  
                          l6534 1651                            l6526 163A                            l6518 161E  
                          l7174 1C50                            l7182 1C6C                            l7166 0822  
                          l7158 0803                            l7334 0276                            l7326 025D  
                          l7270 0170                            l7254 012E                            l7246 0103  
                          l7238 00DB                            l7094 19D4                            l7430 1E75  
                          l7422 1E69                            l6702 0711                            l7350 0568  
                          l6710 1AE8                            l7086 1E12                            l7078 1E00  
                          l7414 1EFD                            l7406 1ED4                            l8070 0F19  
                          l8062 0EC3                            l8054 0E9D                            l6624 15C6  
                          l6616 159A                            l6632 15E4                            l6608 19EB  
                          l7512 1441                            l6560 1DB7                            l6552 1DA3  
                          l6544 1D8D                            l6480 1729                            l6472 171D  
                          l6464 1703                            l6456 16E5                            l6528 1641  
                          l7184 1A25                            l7176 1C5A                            l7168 0826  
                          l6800 16A8                            l7192 1A30                            l6640 1531  
                          l7328 0263                            l7280 019E                            l7272 0176  
                          l7256 0134                            l7248 0109                            l7264 015E  
                          l7440 1E87                            l7432 1E78                            l7424 1E6C  
                          l7416 1E59                            l6704 0718                            l7360 0593  
                          l7352 0573                            l6712 1AF2                            l7088 1E18  
                          l7408 1ED8                            l7504 1A6E                            l8080 0F46  
                          l8072 0F1F                            l8064 0F02                            l8056 0EAC  
                          l8048 0E72                            l7600 0487                            ?_irq 0070  
                          l6626 15D4                            l6618 15A7                            l6538 1AC7  
                          l7514 1455                            l7506 1429                            l7346 1CFE  
                          l6554 1DA6                            l6546 1D8E                            l6490 1748  
                          l6482 1731                            l6474 171E                            l6466 1706  
                          l6458 16EB                            l6562 1DBE                            l6810 1756  
                          l7186 1A2B                            l7178 1C64                            l6650 1547  
                          l6642 1536                            l7290 01CF                            l7282 01A4  
                          l7274 017C                            l7266 0164                            l7258 014A  
                          l7338 027D                            l7442 1E8A                            l7434 1E7B  
                          l7426 1E6F                            l7418 1E65                            l7098 19BC  
                          l6706 075E                            l7370 05D0                            l7362 05B7  
                          l7354 0578                            l6730 1CD4                            l6722 1CD0  
                          l6714 1AF5                            l7450 1B63                            l8082 0F4C  
                          l8074 0F2D                            l8066 0F09                            l8058 0EB3  
                          l7610 048C                            l7602 0488                            l6628 15D5  
                          l7516 145D                            l7508 1430                            l7348 1B05  
                          l6556 1DA7                            l6548 1D9B                            l6492 174F  
                          l6484 1732                            l6476 1725                            l6468 170F  
                          l6564 1DC0                            l6572 1DCF                            l6820 177F  
                          l6812 1757                            l6804 16AC                            l7188 07FC  
                          l6660 1563                            l6652 154A                            l6644 1538  
                          l6636 152A                            l7292 01D5                            l7284 01AA  
                          l7276 0182                            l7268 016A                            l7196 19B3  
                          l7444 1E8B                            l7436 1E81                            l7428 1E72  
                          l6580 19B5                            l7380 0618                            l7372 05E3  
                          l7356 057E                            l7364 05BE                            l6724 1CD1  
                          l6716 1AFA                            l6708 1AE7                            l7452 1B66  
                          l8084 0F52                            l8076 0F38                            l8068 0F13  
                          l7700 02ED                            l7620 04A7                            l7612 049A  
                          l7604 0489                            l7518 1472                            l6558 1DAF  
                          l6486 1737                            l6478 1728                            l6566 1DC5  
                          l6574 1DE2                            l6830 17B1                            l6822 1789  
                          l6814 1761                            l6494 15ED                            l6590 1B88  
                          l6670 1580                            l6662 1569                            l6654 1551  
                          l6646 153C                            l6638 152D                            l7294 01EB  
                          l7278 0188                            l7286 01B0                            l7438 1E84  
                          l7390 0644                            l7382 061E                            l7374 05E7  
                          l7366 05C4                            l7358 058F                            l6742 1CDC  
                          l6718 1A7F                            l6910 1BB7                            l6902 19C1  
                          l7454 1B70                            l7446 19DB                            l7470 1A65  
                          l7462 1A5D                            l8094 0F64                            l8086 0F58  
                          l8078 0F40                            l7710 0327                            l7702 02FB  
                          l7630 04B5                            l7622 04A9                            l7614 04A0  
                          l7606 048A                            l6488 173D                            l6568 1DCA  
                          l6832 17BB                            l6824 1793                            l6816 176B  
                          l6840 17EC                            l6496 15F0                            l6592 1B9B  
                          l6664 1570                            l6656 1555                            l6648 1541  
                          l7296 01F2                            l7288 01B6                            l6680 069C  
                          l6584 19F7                            l7392 0648                            l7384 0630  
                          l7376 060B                            l7368 05CA                            l6736 1CD7  
                          l6920 1BCB                            l6912 1BBE                            l6904 1BAA  
                          l7480 07F0                            l7456 1B75                            l7448 19DE  
                          l7472 1A67                            l7464 1A60                            l8096 0F73  
                          l8088 0F5D                            l7800 08FA                            l7720 034C  
                          l7712 0332                            l7704 030A                            l7640 04E2  
                          l7632 04B6                            l7624 04AD                            l7616 04A1  
                          l7608 048B                            l7490 1C20                            l6930 1F5A  
                          l6826 179D                            l6818 1775                            l6498 15F4  
                          l6594 1B9F                            l6658 1559                            l6666 1576  
                          l6690 06CA                            l6682 06A6                            l6674 0687  
                          l7386 0639                            l7394 064F                            l7378 0612  
                          l6914 1BC2                            l6906 1BAE                            l7482 07FA  
                          l7458 1B7A                            l7474 1A68                            l7466 1A62  
                          l7802 0900                            l7810 090C                            l7730 0395  
                          l7722 035C                            l7706 0311                            l7650 04EF  
                          l7626 04AE                            l7618 04A5                            l7492 1C26  
                          l6932 1F65                            l6924 1F3F                            l6940 1FD3  
                          l6836 17C5                            l6828 17A7                            l6596 1BA5  
                          l6588 1B84                            l6764 1E22                            l6780 1663  
                          l6668 157B                            l6692 06DD                            l6684 06AC  
                          l6676 0692                            l7396 0655                            l7388 063F  
                          l6748 1CE2                            l6756 1CE4                            l6916 1BC3  
                          l6908 1BB1                            l7484 1A46                            l7476 1A6B  
                          l7468 1A63                            l8700 0F84                            l7900 0B90  
                          l7820 094F                            l7812 0928                            l7804 0907  
                          l7740 03C1                            l7732 03A0                            l7724 036D  
                          l7716 0339                            l7708 0320                            l7660 04FE  
                          l7644 04E9                            l7636 04BD                            l7494 1C42  
                          l6934 1F70                            l6926 1F44                            l6942 1FDE  
                          l8710 17D2                            l6870 07A1                            l6862 077B  
                          l6854 076C                            l6790 1685                            l6782 166B  
                          l6694 06EB                            l6686 06B1                            l6678 0697  
                          l7398 065B                            l8702 1CEC                            l6918 1BC5  
                          l7478 1A6C                            l6950 147D                            l7902 0B96  
                          l7910 0BBD                            l7830 098A                            l7822 095A  
                          l7814 0932                            l7750 03ED                            l7742 03CC  
                          l7734 03A7                            l7726 0374                            l7718 0346  
                          l7662 0518                            l7654 04F6                            l7638 04D7  
                          l7496 1C43                            l7488 1C1C                            l6928 1F4F  
                          l6944 1FEF                            l6936 1FBB                            l8712 17F4  
                          l6880 07CF                            l6872 07A7                            l6864 0783  
                          l6856 076F                            l6768 1E3F                            l6792 168C  
                          l6784 1670                            l6776 1659                            l8704 023D  
                          l6696 06F1                            l6688 06C8                            l6960 14C3  
                          l6952 14B9                            l7920 0BDA                            l7912 0BC3  
                          l7904 0B9C                            l7832 0990                            l7824 0964  
                          l7816 0938                            l7760 0419                            l7752 03F8  
                          l7744 03D3                            l7736 03AD                            l7728 0387  
                          l7680 0284                            l7672 0534                            l7664 0523  
                          l7656 04F7                            l7648 04EE                            l6946 19FD  
                          l6938 1FCE                            l7498 1B21                            l8714 1DD7  
                          l6890 07EC                            l6882 07E1                            l6874 07B9  
                          l6866 0789                            l6858 0774                            l8706 16B6  
                          l6794 1693                            l6786 1677                            l6698 06F5  
                          l6970 14CE                            l6962 14C6                            l6954 14BA  
                          l7930 0C2F                            l7922 0C19                            l7914 0BC9  
                          l7906 0BAA                            l7850 09B6                            l7842 09A3  
                          l7834 0997                            l7826 0979                            l7818 0948  
                          l7770 0830                            l7762 0424                            l7754 03FF  
                          l7746 03D9                            l7738 03B3                            l7690 02BA  
                          l7682 029B                            l7674 0545                            l7594 043E  
                          l6980 1EB7                            l6972 1E8D                            l6876 07BF  
                          l6868 079B                            l8708 1E47                            l6796 169A  
                          l6788 167E                            l6964 14C9                            l6956 14BD  
                          l6948 147C                            l7940 0C5E                            l7932 0C39  
                          l7924 0C20                            l7916 0BCF                            l7908 0BB5  
                          l7860 09EF                            l7852 09BD                            l7828 0981  
                          l7780 086E                            l7772 083B                            l7764 042B  
                          l7756 0405                            l7748 03DF                            l7692 02C9  
                          l7684 02A1                            l7676 055D                            l7668 052A  
                          l7596 0478                            l6974 1E8E                            l6990 1BE9  
                          l6982 1BCD                            l6878 07C5                            l6798 16A1  
                          l6894 1A96                            l6966 14CC                            l6958 14C0  
                          l7942 0C69                            l7934 0C3F                            l7926 0C26  
                          l7918 0BD5                            l7870 0A67                            l7854 09C2  
                          l7846 09B0                            l7838 099D                            l7790 08C0  
                          l7782 088D                            l7774 085A                            l7766 0431  
                          l7758 040B                            l7694 02D0                            l7686 02AC  
                          l7678 055E                            l7598 0484                            l6976 1E9B  
                          l6992 1BEF                            l6984 1BD1                            l6888 07E8  
                          l6896 1A96                            l6968 14CD                            l7960 0CAD  
                          l7936 0C45                            l7880 0B46                            l7872 0A6A  
                          l7864 09F5                            l7792 08C7                            l7784 0894  
                          l7776 0861                            l7768 0437                            l7696 02E1  
                          l7688 02B2                            l6978 1EAF                            l6986 1BD5  
                          l6898 1AA8                            l7970 0D09                            l7962 0CD4  
                          l7946 0C6F                            l7938 0C53                            l7954 0C7B  
                          l7890 0B65                            l7882 0B4A                            l7874 0A70  
                          l7866 0A5C                            l8690 09CF                            l7858 09C7  
                          l7794 08CD                            l7786 089A                            l7778 0867  
                          l7698 02E8                            l6996 12FE                            l6988 1BE2  
                          l7980 0D24                            l7972 0D0E                            l7964 0CE9  
                          l7956 0C97                            l7948 0C74                            l8692 0B78  
                          l7892 0B6B                            l7884 0B50                            l7876 0A76  
                          l7868 0A63                            l7796 08D4                            l7788 08A1  
                          l6998 1302                            l7990 0D7B                            l7982 0D2A  
                          l7966 0CF0                            l7958 0C9D                            l8694 0C83  
                          l7886 0B5E                            l7878 0B3F                            l7798 08F3  
                          l8686 0341         __end_of_getIndicePassos 19B7                            l7992 0DB4  
                          l7984 0D38                            l8696 0D1C                            l7968 0CFE  
                          l7888 0B63                            l7896 0B70                            l8688 0914  
                          l8698 0DCA                            l7994 0DBB                            l7986 0D3E  
                          l7978 0D14                            l7898 0B86                            l7988 0D49  
                          STR_1 12E9                            STR_2 1158                            STR_3 1184  
                          STR_4 1000                            STR_5 11ED                            STR_6 11C3  
                          STR_7 11D8                            STR_8 1202                            STR_9 12E1  
                          u3010 136A                            u3011 1369                            u3004 1361  
                          u3005 135F                            u3030 1389                            u3031 1388  
                          u3025 136D                            u5000 07A1                            u5001 07A0  
                          u5010 07A7                            u5011 07A6                            u5020 07BF  
                          u5021 07BE                            u5110 1A05                            u5030 07C5  
                          u5111 1A04                            u5031 07C4                            u4400 16F1  
                          u5040 07CF                            u5120 148D                            u6000 0979  
                          u5105 1FE3                            u4401 16F0                            u5041 07CE  
                          u6001 0978                            u5130 1E9B                            u5210 131A  
                          u4410 170F                            u5050 07E7                            u6010 09AD  
                          u5131 1E9A                            u5211 1319                            u4411 170E  
                          u5051 07E6                            u6011 09AC                            u5140 1EC7  
                          u5300 1518                            u5060 1BB7                            u6100 0BD5  
                          u6020 0A70                            u5141 1EC6                            u5205 130C  
                          u5301 1517                            u5061 1BB6                            u5125 1488  
                          u6101 0BD4                            u6021 0A6F                            u5230 132B  
                          u5150 1BD5                            u4430 1737                            u4510 1633  
                          u5310 1528                            u5070 1BBE                            u6110 0C3F  
                          u6030 0A76                            u5231 132A                            u5151 1BD4  
                          u4431 1736                            u4511 1632                            u5311 1527  
                          u5071 1BBD                            u6111 0C3E                            u6031 0A75  
                          u4600 19CC                            u4440 173D                            u5320 13E3  
                          u5400 1A39                            u5080 1BCA                            u6200 0F1F  
                          u6120 0C45                            u6040 0B46                            u4601 19CB  
                          u5225 131B                            u4441 173C                            u4425 1713  
                          u4505 1623                            u5321 13E2                            u5401 1A37  
                          u5081 1BC9                            u6201 0F1E                            u6121 0C44  
                          u6041 0B45                            u4610 1597                            u5250 133F  
                          u4530 1647                            u4450 15F4                            u5330 13E9  
                          u5410 1A3A                            u6210 0F38                            u6130 0C5E  
                          u6050 0B6B                            u4611 1596                            u5251 133E  
                          u5235 1327                            u4531 1646                            u4515 162F  
                          u4451 15F3                            u5331 13E8                            u6211 0F37  
                          u6131 0C5D                            u6051 0B6A                            u5180 1BEF  
                          u5260 1F3E                            u4540 164C                            u4460 15FF  
                          u5340 13F5                            u5420 1CA7                            u4700 1547  
                          u5500 0115                            u6220 0F46                            u6140 0DFC  
                          u6060 0B96                            u5245 1333                            u5181 1BEE  
                          u5165 1BDC                            u5261 1F3D                            u4541 164B  
                          u4525 163B                            u4461 15FE                            u5341 13F4  
                          u5421 1CA6                            u4701 1546                            u5501 0114  
                          u6221 0F45                            u6141 0DFB                            u6061 0B95  
                          u4630 15AB                            u4550 1AE3                            u5190 1308  
                          u4390 16EB                            u5270 1F8D                            u4470 1610  
                          u5350 1D63                            u5430 1CB9                            u5510 0164  
                          u6230 0F58                            u6150 0E04                            u6070 0B9C  
                          u4631 15AA                            u4551 1AE2                            u5095 1FC2  
                          u5191 1307                            u5175 1BE3                            u4391 16EA  
                          u5271 1F8C                            u4471 160F                            u5351 1D62  
                          u5431 1CB8                            u5511 0163                            u6231 0F57  
                          u6151 0E03                            u6071 0B9B                            u5280 1FBA  
                          u5360 1D68                            u5440 1A43                            u4720 1559  
                          u5600 0283                            u5520 016A                            u4800 06C8  
                          u6160 0E3D                            u6080 0BB5                            u4625 159C  
                          u4385 16DB                            u5281 1FB9                            u5361 1D67  
                          u5441 1A42                            u4721 1558                            u5601 0282  
                          u5521 0169                            u4801 06C7                            u6161 0E3C  
                          u6081 0BB4                            u4650 15C6                            u4490 1622  
                          u4570 1BA5                            u5370 0809                            u4730 1563  
                          u5530 017C                            u5450 00AA                            u4810 06EA  
                          u5610 0578                            u5290 1E1E                            u6170 0E45  
                          u6090 0BC3                            u4651 15C5                            u4491 1621  
                          u4571 1BA4                            u5371 0808                            u5435 1CB5  
                          u4731 1562                            u4715 154B                            u5531 017B  
                          u5451 00A9                            u4811 06E9                            u5611 0577  
                          u5291 1E1D                            u6171 0E44                            u6091 0BC2  
                          u4580 1A0F                            u5380 080E                            u5540 01A4  
                          u5460 00C8                            u4820 0709                            u5700 0655  
                          u5620 057E                            u2980 134E                            u6180 0EC2  
                          u4645 15AD                            u4581 1A0E                            u4565 1D91  
                          u6317 16F7                            u4485 1614                            u5381 080D  
                          u5541 01A3                            u5461 00C7                            u4821 0708  
                          u5701 0654                            u5621 057D                            u2981 134D  
                          u6181 0EC1                            u4670 15E4                            u4590 1A5C  
                          u5390 1C50                            u4910 1E36                            u4750 1576  
                          u5550 01B6                            u5470 00D1                            u4830 0711  
                          u5630 058F                            u5710 1EFD                            u6190 0F19  
                          u4671 15E3                            u4655 15C2                            u4591 1A5B  
                          u6327 1700                            u5391 1C4F                            u4911 1E34  
                          u4751 1575                            u4735 155F                            u5551 01B5  
                          u5471 00D0                            u4831 0710                            u4815 06E6  
                          u5631 058E                            u5711 1EFC                            u6191 0F18  
                          u4904 1E30                            u4760 157B                            u4680 1531  
                          u5560 0205                            u5480 00DB                            u4840 0718  
                          u5640 05C4                            u5720 1B75                            u4665 15D6  
                          u6337 1722                            u4761 157A                            u4745 156A  
                          u4681 1530                            u5561 0204                            u5481 00DA  
                          u4841 0717                            u4825 0705                            u5641 05C3  
                          u5721 1B74                            u4930 1E3D                            u4690 153C  
                          u5570 020B                            u5490 0103                            u4850 076B  
                          u4770 068E                            u5650 05CA                            u2994 1355  
                          u5730 1B7A                            u6347 1743                            u4931 1E3B  
                          u4691 153B                            u5571 020A                            u5491 0102  
                          u4851 076A                            u4771 068C                            u5651 05C9  
                          u2995 1353                            u5731 1B79                            u5740 1430  
                          u4924 1E37                            u5580 0223                            u4780 068F  
                          u5660 05E3                            u4860 1AFF                            u5900 0320  
                          u5741 142F                            u6357 174C                            u5581 0222  
                          u5661 05E2                            u4861 1AFE                            u5901 031F  
                          u5750 1441                            u4870 1E28                            u4950 1662  
                          u5590 025D                            u4790 0697                            u5670 0618  
                          u5910 03A0                            u5830 04B4                            u5751 1440  
                          u6367 1DA0                            u4871 1E26                            u4951 1661  
                          u5591 025C                            u4855 0767                            u4791 0696  
                          u5671 0617                            u5911 039F                            u5831 04B3  
                          u5760 145D                            u4944 1E3E                            u4960 166B  
                          u5680 061E                            u5920 03CC                            u5840 04BC  
                          u5761 145C                            u6377 1DB4                            u4961 166A  
                          u5681 061D                            u5921 03CB                            u5841 04BB  
                          u4970 1761                            u4890 1E2F                            u5690 063F  
                          u5930 03F8                            u5850 04F5                            u6387 1ACE  
                          u4971 1760                            u4891 1E2D                            u5691 063E  
                          u5931 03F7                            u5851 04F4                            u4980 077A  
                          u4884 1E29                            u5940 0424                            u5860 04FD  
                          u4981 0779                            u5941 0423                            u5861 04FC  
                          u4990 0789                            u5950 085A                            u5870 054F  
                          u4991 0788                            u5951 0859                            u5960 088D  
                          u5880 02BA                            u5961 088C                            u5881 02B9  
                          u5970 08C0                            u5890 02E1                            u5971 08BF  
                          u5891 02DE                            u5980 08F3                            u5981 08F2  
                          u5990 0964                            u5991 0963                            _fila 0052  
                          _main 043E                    fp__wifi_init 0090                    fp__wifi_send 0075  
                          _wifi 01D2                            btemp 007E                __end_of_I2C_init 1C47  
                   main@vetorIn 00D0                            start 000C         __size_of_salvar_receita 0033  
             fp__salvar_receita 008A                __end_of_I2C_stop 1A07               _formatar_receitas 0000  
                  ?_ler_atuador 0070                  printExec@passo 0043    __end_of_salva_atuadores_init 152A  
                         ??_irq 0074            __end_of_EEPROM_write 1B02                    main@auxPasso 00B9  
                         ?_main 0070                 __end_of___awdiv 1656                           _EEADR 010D  
                  wifi_send@msg 0021                           STR_10 1199                           _EEDAT 010C  
                         STR_11 115A                           STR_12 1241                           STR_20 116F  
                         STR_21 122C                           STR_13 1145                           STR_22 1285  
                         STR_30 1256                           STR_14 1217                           STR_23 12A1  
                         STR_31 1268                           STR_15 10A1                           STR_32 1293  
                         STR_24 10DF                           STR_16 1053                           STR_17 12E9  
                         STR_25 12AF                           STR_33 1130                           STR_26 10DF  
                         STR_18 1158                           STR_34 1108                           STR_35 12BD  
                         STR_27 1277                           STR_19 11AE                           STR_28 12CB  
               __end_of___awmod 1585                           STR_29 12D6                 __end_of___lldiv 15ED  
               ___awdiv@divisor 0020                 __end_of___lwdiv 1344                           i1l530 1C9E  
                         i1l528 1C9D                           i1l669 1AC0                 ___awdiv@counter 0025  
                         _RCREG 001A                           _TMR1H 000F                           _TMR1L 000E  
                         _PORTD 0008                           _TRISD 0088                           _TXREG 0019  
               __end_of_dispLCD 1F3F                  _txStatusEUSART 19EB               ??_fifo_disponivel 0020  
         __end_of_teclado_borda 1B84                           _delay 1AC7                           _setT1 07F0  
               salvar_receita@i 002D                           main@i 00D3                           main@j 00D4  
                         fpbase 006E                           pclath 000A                 _I2C_ack_receive 19C6  
                  main@vetorOut 00CE                           status 0003               __end_of_I2C_start 1A11  
                         wtemp0 007E                   _indice_passos 007A            __end_of_dispLCD_init 1D5A  
               __initialization 000F                    __end_of_main 0FEE                ?_dispLCD_dataReg 0070  
                        ??_main 00A0                       ??_MCP4725 002A                   ?_initSerialIO 0020  
          __size_of_dispLCD_clr 0007          __end_of_txStatusEUSART 19F4            __size_of_dispLCD_num 00E5  
          __size_of_dispLCD_str 003F            __size_of_alt_atuador 0037                ?_dispLCD_instReg 0070  
                        ?_delay 0020                    ?_salvar_dado 0027                          ?_setT1 0020  
                        _EEADRH 010F                          _EECON2 018D                ___awdiv@dividend 0022  
                        _I2C_tx 1A51            __size_of_dignum_conc 002F                          _ANSELH 0189  
                        _EEPROM 00E7                ?_getIndicePassos 0070                          i1l5170 1C80  
                        i1l5340 1ABA                          i1l5342 1ABF                          i1l5334 1AAA  
                        i1l5168 1C72                          i1l5336 1AB1                          i1l5338 1AB7  
          __size_of_fifo_delete 004D                          u370_20 1C9C                          u370_25 1C8F  
                        u370_26 1C90                          u370_27 1C95                          u370_28 1C96  
                        u370_29 1C9B                __end_of_dac_init 1F7C                          u382_20 1AB1  
                        u382_21 1AB0                          u383_20 1AB7                          u383_21 1AB6  
                        u369_20 1C80                          u369_21 1C7F            __size_of_end_receita 0014  
          __size_of_fifo_indice 0004            __size_of_fifo_lerPos 0009                          _SSPADD 0093  
                        _SSPBUF 0013                __end_of__fptable 0093                   main@init_cond 00CD  
              __end_of_codifica 1800                __end_of_fifo_add 1D8A                __end_of_fifo_tam 19B5  
              _Wifi_autoconnect 0000                          _t1cont 0044                          ___wmul 1BCD  
                     ??___awdiv 0024                       ??___awmod 0024                          _ciclos 004C  
                     ??___lldiv 0028               _fifo_alinharPrint 076C                    ?_timer1_init 0070  
                     ??___lwdiv 0024                          _eusart 0064                          delay@t 0020  
              __end_of_txEUSART 19BC                          _search 0000                ___awdiv@quotient 0027  
                        _teclas 01C2                 ___awmod@divisor 0020              ?_fifo_alinharPrint 0070  
                     ??_dispLCD 002C                 ___awmod@counter 0025                  ??_initSerialIO 0022  
             entry__dispLCD_clr 007E               entry__dispLCD_num 0087                          fptable 0069  
                _buscar_receita 0000                __end_of_posAtual 1AAA                 ?_txStatusEUSART 0070  
                        setT1@c 0020                    __pdataCOMMON 007A                          fptotal 0018  
                    Wifi_mode@d 0024              __size_of_Wifi_mode 0053                          saved_w 007E  
                     ?_I2C_init 002E             ??_fifo_alinharPrint 002D                       ?_I2C_stop 0070  
       __end_of_I2C_ack_receive 19CD           __end_of_getContCiclos 19DB            _Wifi_config_servidor 0000  
              __end_of_statusT1 1A51          salva_atuadores_init@pt 0028            _salva_atuadores_init 14D0  
       __end_of__initialization 0065               _serialIObyteShift 1BA7                  _salvar_receita 1DEC  
       __size_of_dispLCD_lincol 0031              ?_serialIObyteShift 0070              __size_of_dac_write 0045  
     __end_of_fifo_alinharPrint 07F0                  __pcstackCOMMON 0070           __size_of_EEPROM_write 001E  
                  __pidataBANK0 1A1B                    __pidataBANK1 1A11                    __pidataBANK2 1BF4  
                  __pidataBANK3 1390                   __end_of_delay 1AE4                   __end_of_setT1 07FC  
             fifo_add_control@c 0034            __size_of_ler_atuador 002E             ??_serialIObyteShift 0020  
     __size_of_fifo_add_control 002B               initSerialIO@ptrIn 0023              __size_of_fifo_adrs 0002  
                       I2C_tx@b 0020                      ??_I2C_init 0032    __end_of_fifo_indicePrint_dec 1A46  
                    ??_I2C_stop 0020    __end_of_fifo_indicePrint_inc 1CCD                         ??_delay 0022  
                       ??_setT1 0024              teclado_borda@tecla 0029                         ?_I2C_tx 0070  
         ?_salva_atuadores_init 0070                      __pbssBANK0 0044                      __pbssBANK1 00EC  
                    __pbssBANK2 0138           __size_of_dispLCD_init 0030       __end_of_serialIObyteShift 1BCD  
        __end_of_salvar_receita 1E1F                      _decodifica 1656                   ?_teclado_init 0070  
                 ?_teclado_scan 0070              __size_of_intt1_1ms 002D                    _EEPROM_write 1AE4  
              teclado_borda@aux 0028           __end_of_dignum_apagar 1B21               __end_of_Wifi_mode 147C  
                    __pmaintext 043E                  main@contPassos 00B8                         ?___wmul 0020  
                    __pintentry 0004                 _fifo_disponivel 1A30         serialIObyteShift@dataIn 0021  
                    _dignum_tam 1B84                         _MCP4725 1B21                       ?_dac_init 0070  
                    _fifo_print 0093              __size_of_printExec 0122                         _LCDbits 0006  
                  _dispLCD_init 1D2A              __size_of_wifi_init 0011              __size_of_wifi_send 003B  
              ?_I2C_ack_receive 0070               __end_of_dac_write 2000                       ?_codifica 0020  
                     ?_fifo_add 0070                       ?_fifo_tam 0070                 __size_of_I2C_tx 000C  
                    __stringtab 1800            __size_of_salvar_dado 0021                  ??_teclado_init 0020  
               entry__wifi_send 0075                  ??_teclado_scan 0020                 ?_salvar_receita 0027  
                 ?_serialIOload 0070                   ?_serialIOscan 0070                      _initEUSART 147C  
                     ?_txEUSART 0020            __end_of_initSerialIO 1E8D                     posAtual@ind 0022  
              EEPROM_write@addr 0021                EEPROM_write@data 0020               __end_of_fifo_adrs 19B3  
                     ?_posAtual 0070                       _I2C_start 1A07      __size_of_fifo_alinharPrint 0084  
                       _Wifi_ip 0000                         ___awdiv 15ED                         ___awmod 152A  
                       ___lldiv 1585                 __size_of___wmul 0027         __size_of_init_atuadores 0005  
                       ___lwdiv 12FE                       ?_statusT1 0020                       _ANSELbits 0188  
                       _dispLCD 1F03            __size_of_timer1_init 0011                         __ptext1 1A6E  
                       __ptext2 147C                         __ptext3 1A5D                         __ptext4 19DB  
                       __ptext5 1B63                         __ptext6 1344                         __ptext7 1A46  
                       __ptext8 07F0                         __ptext9 1EC8                   teclado_scan@c 0026  
                 teclado_scan@l 0025                      ??_dac_init 0024               __end_of_intt1_1ms 1C9F  
                       _atuador 0079         __size_of_fifo_add_ciclo 000B                       _T1CONbits 0010  
                  __size_of_irq 001D         __size_of_fifo_add_tempo 0030                ___awmod@dividend 0022  
             salvar_receita@aux 002B                   _receita_livre 0000                      ??_codifica 0022  
        ??_salva_atuadores_init 0023                      ??_fifo_add 0033                      ??_fifo_tam 0020  
                       main@aux 00BA                         clrloop0 19E4                         main@num 00DE  
                       main@ptr 00D2              entry__dispLCD_init 0081            end_of_initialization 0065  
                ??_serialIOload 0020                  ??_serialIOscan 0024      __size_of_serialIObyteShift 0026  
                   ?_decodifica 0070                  dispLCD_num@col 002E                  dispLCD_num@div 0037  
                dispLCD_num@lin 002D                  dispLCD_num@tam 0031                      ??_txEUSART 0021  
                dispLCD_num@num 002F                  _dispLCD_lincol 1DBB                  dispLCD_str@lin 002B  
                dispLCD_str@str 0028                      dispLCD@col 0029                 ___lldiv@divisor 0020  
                    dispLCD@lin 0028                      dispLCD@pos 002D                      dispLCD@str 002A  
       __end_of_fifo_disponivel 1A3B               __end_of_printExec 0687                 ___lldiv@counter 002D  
                    ??_posAtual 0021                      ?_I2C_start 0070               __end_of_wifi_init 1A7F  
             __end_of_wifi_send 1EC8                    I2C_init@freq 002E                       _RCSTAbits 0018  
          _fifo_indicePrint_dec 1A3B            _fifo_indicePrint_inc 1C9F                         psplit$0 180063  
                       psplit$1 630064          __size_of_teclado_borda 0021                    __pstringtext 1000  
              ??_txStatusEUSART 0020              fifo_alinharPrint@i 0031                      ??_statusT1 0024  
                 ??_dispLCD_clr 0023                   ??_dispLCD_num 0032                   ??_dispLCD_str 002A  
                 ??_alt_atuador 0020                     ?_dignum_tam 0029                       _PORTAbits 0005  
              _fifo_add_control 1C47                     ?_fifo_print 0070                      fp__dispLCD 007B  
                 ??_dignum_conc 0027                       _TRISAbits 0085                       _TRISBbits 0086  
                     _TRISCbits 0087        __size_of_dispLCD_dataReg 0031                   ??_fifo_delete 0033  
          pnum$maintext_split_1 0063            pnum$maintext_split_2 0064                      main@i_1025 00D7  
                    main@i_1028 00D9                      main@j_1026 00D8                   ??_end_receita 0022  
                    main@j_1029 00DA                   ??_fifo_indice 0020                   ??_fifo_lerPos 0020  
             __size_of_I2C_init 002B               __size_of_I2C_stop 000A                   _teclaAnterior 004E  
        __end_of_dispLCD_lincol 1DEC                  __end_of_I2C_tx 1A5D        __size_of_dispLCD_instReg 007F  
                    main@ciclos 00DC                     ?_initEUSART 002E                       _TXSTAbits 0098  
           dignum_apagar@ptrNum 0028                      main@estado 00E0        __size_of_getIndicePassos 0002  
         ?_fifo_indicePrint_dec 0070           ?_fifo_indicePrint_inc 0070                     wifi_init@br 0038  
                __end_of___wmul 1BF4                   __pidataCOMMON 0003                     _BAUDCTLbits 0187  
          __end_of_teclado_init 19E3            __end_of_teclado_scan 1390             __size_of_decodifica 007E  
           start_initialization 000F             __end_of_dispLCD_clr 19D4                   posAtual@passo 0023  
           __end_of_dispLCD_num 076C             __end_of_dispLCD_str 1FBB             __end_of_alt_atuador 1E56  
                   __end_of_irq 1AC7                   _teclado_borda 1B63                        ??_I2C_tx 0020  
         __size_of_initSerialIO 0037                 fifo_add_tempo@t 0034                 ?_dispLCD_lincol 0023  
           __end_of_dignum_conc 1D2A              initSerialIO@length 0021             __size_of_dignum_tam 0023  
           __end_of_fifo_delete 1429              initSerialIO@ptrOut 0020             __end_of_end_receita 1A93  
           __end_of_fifo_indice 0800             __end_of_fifo_lerPos 19FD             __size_of_fifo_print 01F1  
              ?_fifo_disponivel 0070               dispLCD_lincol@col 0023               dispLCD_lincol@aux 0027  
             dispLCD_lincol@lin 0026                     ??_I2C_start 0020                 main@meAtuadores 00D1  
                 ??_ler_atuador 0020                        ??___wmul 0024                  _init_atuadores 19BC  
        __size_of_getContCiclos 0007                      init_fetch0 12EB                     __pdataBANK0 0064  
                   __pdataBANK1 00E2                     __pdataBANK2 0110                     __pdataBANK3 0190  
                     _Wifi_mode 1429                       _Wifi_scan 0000            __end_of_serialIOload 19C6  
          __end_of_serialIOscan 1F03                        ?_MCP4725 0028                  _fifo_add_ciclo 1A25  
              ler_atuador@tecla 0022                    _initSerialIO 1E56             __size_of_initEUSART 0054  
                _fifo_add_tempo 0800                     __pbssCOMMON 0076                       ___latbits 0002  
             __size_of_dac_init 003D                   __pcstackBANK0 0020                   __pcstackBANK1 00A0  
              ??_salvar_receita 0029                  ?_teclado_borda 0070               __size_of__fptable 002A  
             __size_of_codifica 00AD               __size_of_fifo_add 0030                       _dac_write 1FBB  
             __size_of_fifo_tam 0002                 _deletar_receita 0000               ??_dispLCD_dataReg 0020  
        ??_fifo_indicePrint_dec 0020          ??_fifo_indicePrint_inc 0020                       _main$1003 00CB  
             __size_of_txEUSART 0005                ___lwdiv@dividend 0022          __end_of_init_atuadores 19C1  
             ??_dispLCD_instReg 0020                       __pfunctab 0069                        ?___awdiv 0020  
             __size_of_posAtual 0017                        ?___awmod 0020                        ?___lldiv 0020  
                      ?___lwdiv 0020                       _fifo_adrs 19B1                   serialIOscan@i 0029  
                 serialIOscan@j 0028                      ?_Wifi_mode 0024          __end_of_fifo_add_ciclo 1A30  
                   _dispLCD_clr 19CD                     _dispLCD_num 0687                     _dispLCD_str 1F7C  
             ??_getIndicePassos 0020          __end_of_fifo_add_tempo 0830                        ?_dispLCD 0028  
                     __pstrings 1800                     _alt_atuador 1E1F             __end_of_ler_atuador 1CFB  
             __size_of_statusT1 000B                       _ind_print 006C                   _rxErrorEUSART 0000  
                      _I2C_init 1C1C        serialIObyteShift@dataBit 0023                        _I2C_stop 19FD  
        __size_of_dignum_apagar 001F                     _dignum_conc 1CFB        serialIObyteShift@dataOut 0022  
                     _intt1_1ms 1C72                   ??_salvar_dado 0029                ___lwdiv@quotient 0026  
                 _getContCiclos 19D4                  __size_of_delay 001D                     _fifo_delete 13DC  
                __size_of_setT1 000C                     _end_receita 1A7F                     _fifo_indice 07FC  
                   _fifo_lerPos 19F4                      ?_dac_write 0024                    ??_decodifica 0020  
             teclado_scan@tecla 0024                  _fifo_print$392 002C               interrupt_function 0004  
                ___wmul@product 0024        __size_of_I2C_ack_receive 0007        __end_of_fifo_add_control 1C72  
                     clear_ram0 19E3                        _PIE1bits 008C                        _PIR1bits 000C  
               ?_init_atuadores 0070                        _SERIALIO 0005           __size_of_teclado_init 0008  
                     main@F1614 01AE                       main@F1590 00EC           __size_of_teclado_scan 004C  
                     main@F1588 00ED                  dignum_conc@dig 002B                   ??_timer1_init 0020  
                    ?_fifo_adrs 0070                       _printExec 0565                dispLCD_dataReg@d 0021  
                      _SPBRbits 0099                 ?_fifo_add_ciclo 0020                       _wifi_init 1A6E  
                     _wifi_send 1E8D                    ??_dignum_tam 002B                     _cont_ciclos 0076  
               ?_fifo_add_tempo 0070                     __stringbase 1812               ___wmul@multiplier 0020  
                     main@i_980 00CF                       main@i_974 00D5              initEUSART@baudRate 002E  
                     main@j_975 00D6             fifo_print@completar 002E                    ??_fifo_print 0029  
            __end_of_decodifica 16D4                __size_of_MCP4725 0021                       main@botao 00DB  
                   _lenSerialIO 004F                 ??_teclado_borda 0027                       main@tecla 00E1  
                    ?_intt1_1ms 0070                  ?_getContCiclos 0020               Wifi_cipsend@F1401 0138  
             Wifi_cipsend@F1398 0190   __size_of_salva_atuadores_init 005A                    ??_initEUSART 0032  
                  _teclado_init 19DB             __end_of_salvar_dado 1B63                    _teclado_scan 1344  
                    _EECON1bits 018C              __end_of_dignum_tam 1BA7                   _dignum_apagar 1B02  
            __end_of_fifo_print 0284           __size_of_serialIOload 0005           __size_of_serialIOscan 003B  
              dispLCD_instReg@i 0022                     _ler_atuador 1CCD                       txEUSART@d 0020  
                    ?_printExec 0039                    pnum$maintext 0018                     ??_Wifi_mode 0025  
              __size_of___awdiv 0069                __size_of___awmod 005B                __size_of___lldiv 0068  
                    ?_wifi_init 0038                      ?_wifi_send 0021                __size_of___lwdiv 0046  
               fp__dispLCD_init 0081                dispLCD_num@sinal 0036           fifo_alinharPrint@cont 0030  
            __end_of__stringtab 1812                        _dac_init 1F3F                __size_of_dispLCD 003C  
           __end_of_timer1_init 1A6E                        __fptable 0069                  _rxStatusEUSART 0000  
            __end_of_initEUSART 14D0                     decodifica@d 0022                        _main$991 00BB  
                      _main$992 00BD                        _main$993 00BF                        _main$994 00C1  
                      _main$995 00C3                        _main$996 00C5                        _main$997 00C7  
                      _main$998 00C9                ??_dispLCD_lincol 0024                 ___lwdiv@divisor 0020  
               ___lwdiv@counter 0025                        _codifica 1753                        __ptext10 19C1  
                      __ptext11 1BA7                        __ptext20 19B5                        __ptext12 1DEC  
                      __ptext21 19F4                        __ptext13 1B42                        __ptext30 1A3B  
                      __ptext22 0687                        __ptext14 1A7F                        __ptext31 07FC  
                      __ptext23 19BC                        __ptext15 1AE4                        __ptext40 1D5A  
                      __ptext32 1A30                        __ptext24 1E56                        __ptext16 14D0  
                      __ptext41 076C                        __ptext33 13DC                        __ptext25 19D4  
                      __ptext17 1CCD                        __ptext50 16D4                        __ptext42 1B84  
                      __ptext34 1656                        __ptext26 19B3                        __ptext18 0565  
                      __ptext51 1D8A                        __ptext43 15ED                        __ptext35 1E1F  
                      __ptext27 0093                        __ptext19 1A93                        __ptext60 1B21  
                      __ptext52 1CFB                        __ptext44 1753                        __ptext36 19B1  
                      __ptext28 152A                        __ptext61 1FBB                        __ptext53 1BCD  
                      __ptext45 1F7C                        __ptext37 0800                        __ptext29 1C9F  
                      __ptext70 1AAA                        __ptext62 1F3F                        __ptext54 1B02  
                      __ptext46 1D2A                        __ptext38 1C47                        __ptext71 1C72  
                      __ptext63 1AC7                        __ptext55 12FE                        __ptext47 19CD  
                      __ptext39 1A25                        __ptext64 1A51                        __ptext56 1429  
                      __ptext48 1F03                        __ptext65 1A07                        __ptext57 1E8D  
                      __ptext49 1DBB                        __ptext66 19C6                        __ptext58 19EB  
                      __ptext67 19FD                        __ptext59 19B7                        __ptext68 1C1C  
                      __ptext69 1585                        _fifo_add 1D5A                        _fifo_tam 19B3  
                      _ind_fila 006D                     ??_dac_write 0026                        _rxEUSART 0000  
                 ?_EEPROM_write 0020                    _serialIOload 19C1                    _serialIOscan 1EC8  
            _rxResetErrorEUSART 0000                   __size_of_main 0BB0                        _txEUSART 19B7  
            salvar_receita@data 0028              salvar_receita@adrs 0027                  ?_dignum_apagar 0070  
                      _posAtual 1A93                    dispLCD_str@c 002C                   _printExec$417 0040  
             ??_I2C_ack_receive 0020                     ??_fifo_adrs 0020              fifo_print@indPrint 002F  
                 fifo_add@passo 0034                        _statusT1 1A46                     MCP4725@Vout 0028  
                 dignum_tam@tam 002C                   dignum_tam@num 0029                        main@lema 00A4  
                  _Wifi_cipsend 0000                    _Wifi_connect 0000  salva_atuadores_init@condi_init 0024  
               ??_getContCiclos 0022               Wifi_connect@F1388 0110                      _INTCONbits 000B  
                 ?_dispLCD_init 0070                    codifica@dado 0020                 _dispLCD_dataReg 1D8A  
                  codifica@tipo 0024                     ??_intt1_1ms 0070         __size_of_txStatusEUSART 0009  
             fp__txStatusEUSART 0072                        init_ram0 12EF                     _salvar_dado 1B42  
                fp__dispLCD_clr 007E                  fp__dispLCD_num 0087                  fp__dispLCD_str 0084  
               dispLCD_num@size 0035            fifo_alinharPrint@aux 0032                 _dispLCD_instReg 16D4  
                      intlevel1 0069                  ??_EEPROM_write 0021                    fp__Wifi_mode 0078  
              ___lldiv@dividend 0024                 _getIndicePassos 19B5               dignum_conc@ptrNum 0026  
                     stringcode 180A               fifo_print@comando 0032                     ??_printExec 003A  
      salva_atuadores_init@F108 0048                     _timer1_init 1A5D                     ??_wifi_init 003C  
                  _ptrSerialOut 0050                     ??_wifi_send 0023                    ?_dispLCD_clr 0070  
                  ?_dispLCD_num 002D                    ?_dispLCD_str 0028        __size_of_fifo_disponivel 000B  
                  ?_alt_atuador 0070        salva_atuadores_init@dado 0029            fifo_add_ciclo@ciclos 0020  
      salva_atuadores_init@mask 002A                  ??_dispLCD_init 0024                ___lldiv@quotient 0029  
                      stringtab 1800                    ?_dignum_conc 0026                    end_receita@x 0020  
                   _SSPCON2bits 0091                fifo_print@atraso 0031                    ?_fifo_delete 0070  
                   _ptrSerialIn 0051                    fifo_lerPos@i 0020                    ?_end_receita 0020  
                  _wifi_receive 0000                    ?_fifo_indice 0070                    ?_fifo_lerPos 0070  
              ??_init_atuadores 0020                 ??_dignum_apagar 0028                      _SSPCONbits 0014  
             ?_fifo_add_control 0070                ??_fifo_add_ciclo 0022                     fifo_print@i 0030  
                 fp__initEUSART 008D  
