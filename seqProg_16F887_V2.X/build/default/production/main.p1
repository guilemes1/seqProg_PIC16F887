Version 4.0 HI-TECH Software Intermediate Code
[v F1366 `(v ~T0 @X0 0 tf ]
[v F1368 `(v ~T0 @X0 0 tf1`*Cuc ]
[v F1371 `(v ~T0 @X0 0 tf3`uc`uc`*Cuc ]
[v F1376 `(v ~T0 @X0 0 tf4`uc`uc`i`uc ]
[v F1382 `(v ~T0 @X0 0 tf ]
"7 ./ihm.h
[; ;./ihm.h: 7: {
[s S138 `*F1366 1 `*F1368 1 `*F1371 1 `*F1376 1 `*F1382 1 ]
[n S138 . init print printpos printv clr ]
"10 ./dispLCD4vias.h
[; ;./dispLCD4vias.h: 10: void dispLCD_init( void );
[v _dispLCD_init `(v ~T0 @X0 0 ef ]
"14
[; ;./dispLCD4vias.h: 14: void dispLCD_str( const char * str );
[v _dispLCD_str `(v ~T0 @X0 0 ef1`*Cuc ]
"11
[; ;./dispLCD4vias.h: 11: void dispLCD( unsigned char lin, unsigned char col, const char * str );
[v _dispLCD `(v ~T0 @X0 0 ef3`uc`uc`*Cuc ]
"12
[; ;./dispLCD4vias.h: 12: void dispLCD_num( unsigned char lin, unsigned char col, int num, unsigned char tam );
[v _dispLCD_num `(v ~T0 @X0 0 ef4`uc`uc`i`uc ]
"13
[; ;./dispLCD4vias.h: 13: void dispLCD_clr( void );
[v _dispLCD_clr `(v ~T0 @X0 0 ef ]
[v F1429 `(v ~T0 @X0 0 tf2`uc`*uc ]
[v F1433 `(v ~T0 @X0 0 tf2`uc`*uc ]
[v F1437 `(v ~T0 @X0 0 tf1`uc ]
[v F1440 `(v ~T0 @X0 0 tf1`*uc ]
[v F1443 `(v ~T0 @X0 0 tf ]
"22 ./eeprom.h
[; ;./eeprom.h: 22: {
[s S139 `*F1429 1 `*F1433 1 `*F1437 1 `*F1440 1 `*F1443 1 ]
[n S139 . salvar buscar deletar livre formatar ]
"10
[; ;./eeprom.h: 10: void salvar_receita (char adrs,unsigned char *data );
[v _salvar_receita `(v ~T0 @X0 0 ef2`uc`*uc ]
"11
[; ;./eeprom.h: 11: void buscar_receita (char adrs,unsigned char *data );
[v _buscar_receita `(v ~T0 @X0 0 ef2`uc`*uc ]
"12
[; ;./eeprom.h: 12: void deletar_receita (char receita);
[v _deletar_receita `(v ~T0 @X0 0 ef1`uc ]
"13
[; ;./eeprom.h: 13: void receita_livre ( unsigned char * rec);
[v _receita_livre `(v ~T0 @X0 0 ef1`*uc ]
"14
[; ;./eeprom.h: 14: void formatar_receitas (void);
[v _formatar_receitas `(v ~T0 @X0 0 ef ]
[v F1529 `(v ~T0 @X0 0 tf1`l ]
[v F1532 `(v ~T0 @X0 0 tf1`*Cuc ]
[v F1535 `(uc ~T0 @X0 0 tf1`*uc ]
[v F1538 `(v ~T0 @X0 0 tf1`uc ]
[v F1541 `(v ~T0 @X0 0 tf2`*Cuc`*Cuc ]
[v F1545 `(v ~T0 @X0 0 tf ]
[v F1547 `(v ~T0 @X0 0 tf ]
[v F1549 `(v ~T0 @X0 0 tf ]
[v F1551 `(v ~T0 @X0 0 tf ]
[v F1553 `(v ~T0 @X0 0 tf2`*uc`*uc ]
"27 ./wifi.h
[; ;./wifi.h: 27: {
[s S142 `*F1529 1 `*F1532 1 `*F1535 1 `*F1538 1 `*F1541 1 `*F1545 1 `*F1547 1 `*F1549 1 `*F1551 1 `*F1553 1 ]
[n S142 . init send receive mode connect ip autoconnect scan config_servidor cipsend ]
"13
[; ;./wifi.h: 13: void wifi_init( long br );
[v _wifi_init `(v ~T0 @X0 0 ef1`l ]
"14
[; ;./wifi.h: 14: void wifi_send( const char * msg );
[v _wifi_send `(v ~T0 @X0 0 ef1`*Cuc ]
"15
[; ;./wifi.h: 15: unsigned char wifi_receive( unsigned char * rcv );
[v _wifi_receive `(uc ~T0 @X0 0 ef1`*uc ]
"16
[; ;./wifi.h: 16: void Wifi_mode(unsigned char d );
[v _Wifi_mode `(v ~T0 @X0 0 ef1`uc ]
"17
[; ;./wifi.h: 17: void Wifi_connect( const char * ssid, const char * pass );
[v _Wifi_connect `(v ~T0 @X0 0 ef2`*Cuc`*Cuc ]
"18
[; ;./wifi.h: 18: void Wifi_ip( void );
[v _Wifi_ip `(v ~T0 @X0 0 ef ]
"19
[; ;./wifi.h: 19: void Wifi_autoconnect( void );
[v _Wifi_autoconnect `(v ~T0 @X0 0 ef ]
"20
[; ;./wifi.h: 20: void Wifi_scan (void);
[v _Wifi_scan `(v ~T0 @X0 0 ef ]
"21
[; ;./wifi.h: 21: void Wifi_config_servidor( void );
[v _Wifi_config_servidor `(v ~T0 @X0 0 ef ]
"22
[; ;./wifi.h: 22: void Wifi_cipsend( unsigned char *tam, unsigned char *msg );
[v _Wifi_cipsend `(v ~T0 @X0 0 ef2`*uc`*uc ]
[t ~ __interrupt . k ]
[t T1 __interrupt ]
"465 C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 465:     struct {
[s S16 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S16 . RBIF INTF T0IF RBIE INTE T0IE PEIE GIE ]
"475
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 475:     struct {
[s S17 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S17 . . TMR0IF . TMR0IE ]
"464
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 464: typedef union {
[u S15 `S16 1 `S17 1 ]
[n S15 . . . ]
"482
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 482: extern volatile INTCONbits_t INTCONbits __attribute__((address(0x00B)));
[v _INTCONbits `VS15 ~T0 @X0 0 e@11 ]
"543
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 543:     struct {
[s S19 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S19 . TMR1IF TMR2IF CCP1IF SSPIF TXIF RCIF ADIF ]
"542
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 542: typedef union {
[u S18 `S19 1 ]
[n S18 . . ]
"553
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 553: extern volatile PIR1bits_t PIR1bits __attribute__((address(0x00C)));
[v _PIR1bits `VS18 ~T0 @X0 0 e@12 ]
"1708
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1708:     struct {
[s S63 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S63 . TMR1IE TMR2IE CCP1IE SSPIE TXIE RCIE ADIE ]
"1707
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1707: typedef union {
[u S62 `S63 1 ]
[n S62 . . ]
"1718
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1718: extern volatile PIE1bits_t PIE1bits __attribute__((address(0x08C)));
[v _PIE1bits `VS62 ~T0 @X0 0 e@140 ]
"14 ./timer1.h
[; ;./timer1.h: 14: void intt1_1ms( void );
[v _intt1_1ms `(v ~T0 @X0 0 ef ]
[p mainexit ]
"15 ./teclado.h
[; ;./teclado.h: 15: void teclado_init( void );
[v _teclado_init `(v ~T0 @X0 0 ef ]
"15 ./timer1.h
[; ;./timer1.h: 15: void timer1_init(void);
[v _timer1_init `(v ~T0 @X0 0 ef ]
"4 ./spi_i2c.h
[; ;./spi_i2c.h: 4: void I2C_init( unsigned long freq );
[v _I2C_init `(v ~T0 @X0 0 ef1`ul ]
"5 ./MCP4725.h
[; ;./MCP4725.h: 5: void MCP4725(unsigned int Vout);
[v _MCP4725 `(v ~T0 @X0 0 ef1`ui ]
"12 ./serialIO.h
[; ;./serialIO.h: 12: void initSerialIO( char * ptrIn, char * ptrOut, unsigned char length );
[v _initSerialIO `(v ~T0 @X0 0 ef3`*uc`*uc`uc ]
"4 ./delay.h
[; ;./delay.h: 4: void delay( unsigned int t );
[v _delay `(v ~T0 @X0 0 ef1`ui ]
"9 ./dispLCD4vias.h
[; ;./dispLCD4vias.h: 9: void dispLCD_lincol( unsigned char lin, unsigned char col);
[v _dispLCD_lincol `(v ~T0 @X0 0 ef2`uc`uc ]
"8
[; ;./dispLCD4vias.h: 8: void dispLCD_dataReg( unsigned char d );
[v _dispLCD_dataReg `(v ~T0 @X0 0 ef1`uc ]
"16 ./timer1.h
[; ;./timer1.h: 16: void setT1( unsigned long int c );
[v _setT1 `(v ~T0 @X0 0 ef1`ul ]
"17
[; ;./timer1.h: 17: unsigned long int statusT1( void );
[v _statusT1 `(ul ~T0 @X0 0 ef ]
"16 ./fifo.h
[; ;./fifo.h: 16: void init_atuadores(void);
[v _init_atuadores `(v ~T0 @X0 0 ef ]
"17 ./teclado.h
[; ;./teclado.h: 17: unsigned char teclado_borda(void);
[v _teclado_borda `(uc ~T0 @X0 0 ef ]
"14 ./fifo.h
[; ;./fifo.h: 14: char ler_atuador(char tecla);
[v _ler_atuador `(uc ~T0 @X0 0 ef1`uc ]
"15
[; ;./fifo.h: 15: void alt_atuador( char tecla );
[v _alt_atuador `(v ~T0 @X0 0 ef1`uc ]
"47
[; ;./fifo.h: 47: char salva_atuadores_init( void );
[v _salva_atuadores_init `(uc ~T0 @X0 0 ef ]
"25
[; ;./fifo.h: 25: char fifo_disponivel( void );
[v _fifo_disponivel `(uc ~T0 @X0 0 ef ]
"22
[; ;./fifo.h: 22: void fifo_add(const char passo);
[v _fifo_add `(v ~T0 @X0 0 ef1`Cuc ]
"27
[; ;./fifo.h: 27: void fifo_indicePrint_inc( void );
[v _fifo_indicePrint_inc `(v ~T0 @X0 0 ef ]
"28
[; ;./fifo.h: 28: void fifo_indicePrint_dec( void );
[v _fifo_indicePrint_dec `(v ~T0 @X0 0 ef ]
"24
[; ;./fifo.h: 24: char fifo_indice(void);
[v _fifo_indice `(uc ~T0 @X0 0 ef ]
"21
[; ;./fifo.h: 21: void fifo_delete(void);
[v _fifo_delete `(v ~T0 @X0 0 ef ]
"29
[; ;./fifo.h: 29: void fifo_print(void);
[v _fifo_print `(v ~T0 @X0 0 ef ]
"26
[; ;./fifo.h: 26: char fifo_tam(void);
[v _fifo_tam `(uc ~T0 @X0 0 ef ]
"44
[; ;./fifo.h: 44: void printExec (char col, char ind);
[v _printExec `(v ~T0 @X0 0 ef2`uc`uc ]
"40
[; ;./fifo.h: 40: unsigned char getIndicePassos(void);
[v _getIndicePassos `(uc ~T0 @X0 0 ef ]
"35
[; ;./fifo.h: 35: unsigned int getContCiclos(void);
[v _getContCiclos `(ui ~T0 @X0 0 ef ]
"30
[; ;./fifo.h: 30: void dignum_conc(char dig, unsigned int * ptrNum );
[v _dignum_conc `(v ~T0 @X0 0 ef2`uc`*ui ]
"31
[; ;./fifo.h: 31: void dignum_apagar(unsigned int * ptrNum );
[v _dignum_apagar `(v ~T0 @X0 0 ef1`*ui ]
"23
[; ;./fifo.h: 23: void fifo_add_tempo(const char t);
[v _fifo_add_tempo `(v ~T0 @X0 0 ef1`Cuc ]
"16 ./eeprom.h
[; ;./eeprom.h: 16: void salvar_dado (char adrs, char col, unsigned char data);
[v _salvar_dado `(v ~T0 @X0 0 ef3`uc`uc`uc ]
"20 ./fifo.h
[; ;./fifo.h: 20: char * fifo_adrs(void);
[v _fifo_adrs `(*uc ~T0 @X0 0 ef ]
"46
[; ;./fifo.h: 46: void fifo_add_control(const char c);
[v _fifo_add_control `(v ~T0 @X0 0 ef1`Cuc ]
"33
[; ;./fifo.h: 33: void fifo_add_ciclo(unsigned int ciclos);
[v _fifo_add_ciclo `(v ~T0 @X0 0 ef1`ui ]
"13 ./serialIO.h
[; ;./serialIO.h: 13: void serialIOscan( void );
[v _serialIOscan `(v ~T0 @X0 0 ef ]
"54 C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"230
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 230: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"292
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 292: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"354
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 354: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"416
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 416: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"454
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 454: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"461
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 461: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"539
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 539: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"595
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 595: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"652
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 652: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"659
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 659: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"666
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 666: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"673
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 673: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"767
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 767: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"774
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 774: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"845
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 845: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"852
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 852: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"922
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 922: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"929
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 929: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"936
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 936: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"943
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 943: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"1040
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1040: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1135
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1135: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1142
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1142: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1149
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1149: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1156
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1156: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1163
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1163: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1170
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1170: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1240
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1240: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1247
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1247: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1348
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1348: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1418
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1418: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1480
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1480: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1542
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1542: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1604
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1604: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1666
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1666: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1704
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1704: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1760
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1760: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1817
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1817: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1864
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1864: __asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
"1929
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1929: __asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
"1981
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1981: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"2043
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2043: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"2050
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2050: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"2057
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2057: __asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
"2062
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2062: __asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
"2179
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2179: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2348
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2348: __asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
"2418
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2418: __asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
"2488
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2488: __asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
"2558
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2558: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2644
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2644: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2706
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2706: __asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
"2776
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2776: __asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
"2846
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2846: __asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
"2928
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2928: __asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
"2972
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2972: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2979
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2979: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"3013
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3013: __asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
"3066
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3066: __asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
"3131
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3131: __asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
"3196
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3196: __asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
"3247
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3247: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"3252
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3252: __asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
"3259
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3259: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"3266
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3266: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"3273
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3273: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"3280
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3280: __asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
"3337
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3337: __asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
"3389
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3389: __asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
"3451
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3451: __asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
"3501
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3501: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"3546
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3546: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"69 ./config.h
[p x FOSC  =  HS         ]
"70
[p x WDTE  =  OFF        ]
"71
[p x PWRTE  =  ON        ]
"72
[p x MCLRE  =  OFF       ]
"73
[p x CP  =  OFF          ]
"74
[p x CPD  =  OFF         ]
"75
[p x BOREN  =  OFF       ]
"76
[p x IESO  =  OFF        ]
"77
[p x FCMEN  =  OFF       ]
"78
[p x LVP  =  OFF         ]
"81
[p x BOR4V  =  BOR40V    ]
"82
[p x WRT  =  OFF         ]
"14 ./ihm.h
[; ;./ihm.h: 14: } IHM = { dispLCD_init, dispLCD_str, dispLCD, dispLCD_num, dispLCD_clr };
[v _IHM `S138 ~T0 @X0 1 e ]
[i _IHM
:U ..
:U ..
&U _dispLCD_init
&U _dispLCD_str
&U _dispLCD
&U _dispLCD_num
&U _dispLCD_clr
..
..
]
"28 ./eeprom.h
[; ;./eeprom.h: 28: } EEPROM = { salvar_receita, buscar_receita, deletar_receita, receita_livre, formatar_receitas };
[v _EEPROM `S139 ~T0 @X0 1 e ]
[i _EEPROM
:U ..
:U ..
&U _salvar_receita
&U _buscar_receita
&U _deletar_receita
&U _receita_livre
&U _formatar_receitas
..
..
]
"11 ./wifi.h
[; ;./wifi.h: 11: unsigned char d = 0;
[v _d `uc ~T0 @X0 1 e ]
[i _d
-> -> 0 `i `uc
]
"38
[; ;./wifi.h: 38: }wifi = {wifi_init, wifi_send, wifi_receive, Wifi_mode, Wifi_connect, Wifi_ip, Wifi_autoconnect, Wifi_scan, Wifi_config_servidor, Wifi_cipsend};
[v _wifi `S142 ~T0 @X0 1 e ]
[i _wifi
:U ..
:U ..
&U _wifi_init
&U _wifi_send
&U _wifi_receive
&U _Wifi_mode
&U _Wifi_connect
&U _Wifi_ip
&U _Wifi_autoconnect
&U _Wifi_scan
&U _Wifi_config_servidor
&U _Wifi_cipsend
..
..
]
[v $root$_irq `(v ~T0 @X0 0 e ]
"57 main.c
[; ;main.c: 57: void __attribute__((picinterrupt(("")))) irq(void)
[v _irq `(v ~T1 @X0 1 ef ]
"58
[; ;main.c: 58: {
{
[e :U _irq ]
[f ]
"59
[; ;main.c: 59:     INTCONbits.GIE = 0;
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"60
[; ;main.c: 60:     if(PIR1bits.TMR1IF && PIE1bits.TMR1IE)
[e $ ! && != -> . . _PIR1bits 0 0 `i -> 0 `i != -> . . _PIE1bits 0 0 `i -> 0 `i 144  ]
"61
[; ;main.c: 61:     {
{
"62
[; ;main.c: 62:         PIR1bits.TMR1IF = 0;
[e = . . _PIR1bits 0 0 -> -> 0 `i `uc ]
"64
[; ;main.c: 64:         intt1_1ms();
[e ( _intt1_1ms ..  ]
"65
[; ;main.c: 65:     }
}
[e :U 144 ]
"66
[; ;main.c: 66:     INTCONbits.GIE = 1;
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
"67
[; ;main.c: 67: }
[e :UE 143 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"70
[; ;main.c: 70: void main(void)
[v _main `(v ~T0 @X0 1 ef ]
"71
[; ;main.c: 71: {
{
[e :U _main ]
[f ]
"72
[; ;main.c: 72:     dispLCD_init();
[e ( _dispLCD_init ..  ]
"73
[; ;main.c: 73:     teclado_init();
[e ( _teclado_init ..  ]
"74
[; ;main.c: 74:     timer1_init();
[e ( _timer1_init ..  ]
"75
[; ;main.c: 75:     I2C_init(20000000);
[e ( _I2C_init (1 -> -> 20000000 `l `ul ]
"76
[; ;main.c: 76:     MCP4725(0);
[e ( _MCP4725 (1 -> -> 0 `i `ui ]
"77
[; ;main.c: 77:     wifi.init(115200);
[e ( *U . _wifi 0 (1 -> 115200 `l ]
"78
[; ;main.c: 78:     wifi.mode(1);
[e ( *U . _wifi 3 (1 -> -> 1 `i `uc ]
"81
[; ;main.c: 81:     char tecla = 0;
[v _tecla `uc ~T0 @X0 1 a ]
[e = _tecla -> -> 0 `i `uc ]
"82
[; ;main.c: 82:     char estado = 0;
[v _estado `uc ~T0 @X0 1 a ]
[e = _estado -> -> 0 `i `uc ]
"83
[; ;main.c: 83:     char atuador;
[v _atuador `uc ~T0 @X0 1 a ]
"84
[; ;main.c: 84:     char vetor_aux[16];
[v _vetor_aux `uc ~T0 @X0 -> 16 `i a ]
"85
[; ;main.c: 85:     char init_cond = 0;
[v _init_cond `uc ~T0 @X0 1 a ]
[e = _init_cond -> -> 0 `i `uc ]
"86
[; ;main.c: 86:     char *pt;
[v _pt `*uc ~T0 @X0 1 a ]
"88
[; ;main.c: 88:     char contPassos = 0;
[v _contPassos `uc ~T0 @X0 1 a ]
[e = _contPassos -> -> 0 `i `uc ]
[v F1588 `uc ~T0 @X0 -> -> 1 `i `ux s ]
[i F1588
:U ..
"89
[; ;main.c: 89:     char vetorIn[1] = { 0 };
-> -> 0 `i `uc
..
]
[v _vetorIn `uc ~T0 @X0 -> -> 1 `i `ux a ]
[e = _vetorIn F1588 ]
[v F1590 `uc ~T0 @X0 -> -> 1 `i `ux s ]
[i F1590
:U ..
"90
[; ;main.c: 90:     char vetorOut[1] = { 0 };
-> -> 0 `i `uc
..
]
[v _vetorOut `uc ~T0 @X0 -> -> 1 `i `ux a ]
[e = _vetorOut F1590 ]
"91
[; ;main.c: 91:     initSerialIO( vetorIn, vetorOut, 1 );
[e ( _initSerialIO (3 , , &U _vetorIn &U _vetorOut -> -> 1 `i `uc ]
"92
[; ;main.c: 92:     char meAtuadores = -1;
[v _meAtuadores `uc ~T0 @X0 1 a ]
[e = _meAtuadores -> -U -> 1 `i `uc ]
"93
[; ;main.c: 93:     char auxPasso = 0;
[v _auxPasso `uc ~T0 @X0 1 a ]
[e = _auxPasso -> -> 0 `i `uc ]
"94
[; ;main.c: 94:     char aux = 2;
[v _aux `uc ~T0 @X0 1 a ]
[e = _aux -> -> 2 `i `uc ]
"95
[; ;main.c: 95:     unsigned int num = 0;
[v _num `ui ~T0 @X0 1 a ]
[e = _num -> -> 0 `i `ui ]
"96
[; ;main.c: 96:     unsigned int ciclos = 0;
[v _ciclos `ui ~T0 @X0 1 a ]
[e = _ciclos -> -> 0 `i `ui ]
"97
[; ;main.c: 97:     char botao = 0;
[v _botao `uc ~T0 @X0 1 a ]
[e = _botao -> -> 0 `i `uc ]
"110
[; ;main.c: 110:     while(1)
[e :U 147 ]
"111
[; ;main.c: 111:     {
{
"112
[; ;main.c: 112:          switch(estado)
[e $U 150  ]
"113
[; ;main.c: 113:         {
{
"114
[; ;main.c: 114:              case 0:
[e :U 151 ]
"115
[; ;main.c: 115:                             for(char i = 0; i <= 3; i++)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ <= -> _i `i -> 3 `i 152  ]
[e $U 153  ]
[e :U 152 ]
"116
[; ;main.c: 116:                             {
{
"117
[; ;main.c: 117:                                 for(char j = 0; j <= 19; j++)
{
[v _j `uc ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `uc ]
[e $ <= -> _j `i -> 19 `i 155  ]
[e $U 156  ]
[e :U 155 ]
"118
[; ;main.c: 118:                                 {
{
"119
[; ;main.c: 119:                                     IHM.printpos(i, j, "\377");
[e ( *U . _IHM 2 (3 , , -> _i `uc -> _j `uc :s 1C ]
"120
[; ;main.c: 120:                                     delay(10);
[e ( _delay (1 -> -> 10 `i `ui ]
"121
[; ;main.c: 121:                                 }
}
[e ++ _j -> -> 1 `i `uc ]
[e $ <= -> _j `i -> 19 `i 155  ]
[e :U 156 ]
}
"122
[; ;main.c: 122:                             }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ <= -> _i `i -> 3 `i 152  ]
[e :U 153 ]
}
"124
[; ;main.c: 124:                             for(char i = 0; i <= 3; i++)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ <= -> _i `i -> 3 `i 158  ]
[e $U 159  ]
[e :U 158 ]
"125
[; ;main.c: 125:                             {
{
"126
[; ;main.c: 126:                                 for(char j = 0; j <= 19; j++)
{
[v _j `uc ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `uc ]
[e $ <= -> _j `i -> 19 `i 161  ]
[e $U 162  ]
[e :U 161 ]
"127
[; ;main.c: 127:                                 {
{
"128
[; ;main.c: 128:                                     IHM.printpos(i, j, " ");
[e ( *U . _IHM 2 (3 , , -> _i `uc -> _j `uc :s 2C ]
"129
[; ;main.c: 129:                                     delay(10);
[e ( _delay (1 -> -> 10 `i `ui ]
"130
[; ;main.c: 130:                                 }
}
[e ++ _j -> -> 1 `i `uc ]
[e $ <= -> _j `i -> 19 `i 161  ]
[e :U 162 ]
}
"131
[; ;main.c: 131:                             }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ <= -> _i `i -> 3 `i 158  ]
[e :U 159 ]
}
"132
[; ;main.c: 132:                             estado = 1;
[e = _estado -> -> 1 `i `uc ]
"133
[; ;main.c: 133:                             break;
[e $U 149  ]
"135
[; ;main.c: 135:             case 1:
[e :U 164 ]
"136
[; ;main.c: 136:                             IHM.printpos(1, 0, "      SEGGTTI       ");
[e ( *U . _IHM 2 (3 , , -> -> 1 `i `uc -> -> 0 `i `uc :s 3C ]
[v F1614 `uc ~T0 @X0 -> 20 `i s ]
[i F1614
:U ..
"138
[; ;main.c: 138:                             char lema[20] = "Mundo ao seu comando";
-> 77 `c
-> 117 `c
-> 110 `c
-> 100 `c
-> 111 `c
-> 32 `c
-> 97 `c
-> 111 `c
-> 32 `c
-> 115 `c
-> 101 `c
-> 117 `c
-> 32 `c
-> 99 `c
-> 111 `c
-> 109 `c
-> 97 `c
-> 110 `c
-> 100 `c
-> 111 `c
..
]
[v _lema `uc ~T0 @X0 -> 20 `i a ]
[e = _lema F1614 ]
"139
[; ;main.c: 139:                             char i = 0;
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
"140
[; ;main.c: 140:                             char *ptr;
[v _ptr `*uc ~T0 @X0 1 a ]
"142
[; ;main.c: 142:                             for(ptr = lema; *ptr != 0; ptr++)
{
[e = _ptr &U _lema ]
[e $U 168  ]
[e :U 165 ]
"143
[; ;main.c: 143:                             {
{
"144
[; ;main.c: 144:                                 dispLCD_lincol( 2, i );
[e ( _dispLCD_lincol (2 , -> -> 2 `i `uc -> _i `uc ]
"145
[; ;main.c: 145:                                 dispLCD_dataReg( *ptr );
[e ( _dispLCD_dataReg (1 -> *U _ptr `uc ]
"146
[; ;main.c: 146:                                 i++;
[e ++ _i -> -> 1 `i `uc ]
"147
[; ;main.c: 147:                                 delay(50);
[e ( _delay (1 -> -> 50 `i `ui ]
"148
[; ;main.c: 148:                             }
}
[e ++ _ptr * -> -> 1 `i `x -> -> # *U _ptr `i `x ]
[e :U 168 ]
[e $ != -> *U _ptr `i -> 0 `i 165  ]
[e :U 166 ]
}
"150
[; ;main.c: 150:                             setT1(1500);
[e ( _setT1 (1 -> -> -> 1500 `i `l `ul ]
"151
[; ;main.c: 151:                             estado = 2;
[e = _estado -> -> 2 `i `uc ]
"152
[; ;main.c: 152:                             break;
[e $U 149  ]
"154
[; ;main.c: 154:              case 2:
[e :U 169 ]
"155
[; ;main.c: 155:                             if(!statusT1())
[e $ ! ! != ( _statusT1 ..  -> -> -> 0 `i `l `ul 170  ]
"156
[; ;main.c: 156:                                 estado = 8;
[e = _estado -> -> 8 `i `uc ]
[e :U 170 ]
"157
[; ;main.c: 157:                             break;
[e $U 149  ]
"174
[; ;main.c: 174:              case 8:
[e :U 171 ]
"175
[; ;main.c: 175:                             init_atuadores();
[e ( _init_atuadores ..  ]
"176
[; ;main.c: 176:                             IHM.print("1: INSERIR SEQUENCIA\n"
[e ( *U . _IHM 1 (1 :s 4C ]
"180
[; ;main.c: 180:                             setT1(1000);
[e ( _setT1 (1 -> -> -> 1000 `i `l `ul ]
"181
[; ;main.c: 181:                             estado = 9;
[e = _estado -> -> 9 `i `uc ]
"182
[; ;main.c: 182:                             break;
[e $U 149  ]
"184
[; ;main.c: 184:             case 9:
[e :U 172 ]
"185
[; ;main.c: 185:                             if(!statusT1())
[e $ ! ! != ( _statusT1 ..  -> -> -> 0 `i `l `ul 173  ]
"186
[; ;main.c: 186:                                 estado = 71;
[e = _estado -> -> 71 `i `uc ]
[e :U 173 ]
"187
[; ;main.c: 187:                             break;
[e $U 149  ]
"189
[; ;main.c: 189:             case 71:
[e :U 174 ]
"190
[; ;main.c: 190:                             tecla = teclado_borda();
[e = _tecla -> ( _teclado_borda ..  `uc ]
"191
[; ;main.c: 191:                             switch(tecla)
[e $U 176  ]
"192
[; ;main.c: 192:                             {
{
"193
[; ;main.c: 193:                                 case '1': estado = 3; break;
[e :U 177 ]
[e = _estado -> -> 3 `i `uc ]
[e $U 175  ]
"197
[; ;main.c: 197:                             }
}
[e $U 175  ]
[e :U 176 ]
[e [\ -> _tecla `i , $ -> -> 49 `ui `i 177
 175 ]
[e :U 175 ]
"198
[; ;main.c: 198:                             break;
[e $U 149  ]
"401
[; ;main.c: 401:              case 3:
[e :U 178 ]
"402
[; ;main.c: 402:                             IHM.clr();
[e ( *U . _IHM 4 ..  ]
"403
[; ;main.c: 403:                             IHM.printpos(0, 0, "   AJUSTE O INICIO  ");
[e ( *U . _IHM 2 (3 , , -> -> 0 `i `uc -> -> 0 `i `uc :s 5C ]
"404
[; ;main.c: 404:                             IHM.printpos(1, 0, "     DO SISTEMA     ");
[e ( *U . _IHM 2 (3 , , -> -> 1 `i `uc -> -> 0 `i `uc :s 6C ]
"405
[; ;main.c: 405:                             estado = 6;
[e = _estado -> -> 6 `i `uc ]
"406
[; ;main.c: 406:                             break;
[e $U 149  ]
"408
[; ;main.c: 408:             case 6:
[e :U 179 ]
"409
[; ;main.c: 409:                             IHM.printpos(3,0,"   A   B   C   D    ");
[e ( *U . _IHM 2 (3 , , -> -> 3 `i `uc -> -> 0 `i `uc :s 7C ]
"410
[; ;main.c: 410:                             dispLCD_lincol(3, 4); dispLCD_dataReg(ler_atuador('A') ? '+' : '-');
[e ( _dispLCD_lincol (2 , -> -> 3 `i `uc -> -> 4 `i `uc ]
[e ( _dispLCD_dataReg (1 -> ? != -> ( _ler_atuador (1 -> -> 65 `ui `uc `i -> 0 `i : -> 43 `ui -> 45 `ui `uc ]
"411
[; ;main.c: 411:                             dispLCD_lincol(3, 8);dispLCD_dataReg(ler_atuador('B') ? '+' : '-');
[e ( _dispLCD_lincol (2 , -> -> 3 `i `uc -> -> 8 `i `uc ]
[e ( _dispLCD_dataReg (1 -> ? != -> ( _ler_atuador (1 -> -> 66 `ui `uc `i -> 0 `i : -> 43 `ui -> 45 `ui `uc ]
"412
[; ;main.c: 412:                             dispLCD_lincol(3, 12);dispLCD_dataReg(ler_atuador('C') ? '+' : '-');
[e ( _dispLCD_lincol (2 , -> -> 3 `i `uc -> -> 12 `i `uc ]
[e ( _dispLCD_dataReg (1 -> ? != -> ( _ler_atuador (1 -> -> 67 `ui `uc `i -> 0 `i : -> 43 `ui -> 45 `ui `uc ]
"413
[; ;main.c: 413:                             dispLCD_lincol(3, 16);dispLCD_dataReg(ler_atuador('D') ? '+' : '-');
[e ( _dispLCD_lincol (2 , -> -> 3 `i `uc -> -> 16 `i `uc ]
[e ( _dispLCD_dataReg (1 -> ? != -> ( _ler_atuador (1 -> -> 68 `ui `uc `i -> 0 `i : -> 43 `ui -> 45 `ui `uc ]
"414
[; ;main.c: 414:                             estado = 7;
[e = _estado -> -> 7 `i `uc ]
"415
[; ;main.c: 415:                             break;
[e $U 149  ]
"417
[; ;main.c: 417:             case 7:
[e :U 180 ]
"418
[; ;main.c: 418:                             tecla = teclado_borda();
[e = _tecla -> ( _teclado_borda ..  `uc ]
"419
[; ;main.c: 419:                             switch(tecla)
[e $U 182  ]
"420
[; ;main.c: 420:                             {
{
"421
[; ;main.c: 421:                                 case 'A': alt_atuador(tecla); dispLCD_lincol(3, 4); dispLCD_dataReg(ler_atuador('A') ? '+' : '-'); break;
[e :U 183 ]
[e ( _alt_atuador (1 _tecla ]
[e ( _dispLCD_lincol (2 , -> -> 3 `i `uc -> -> 4 `i `uc ]
[e ( _dispLCD_dataReg (1 -> ? != -> ( _ler_atuador (1 -> -> 65 `ui `uc `i -> 0 `i : -> 43 `ui -> 45 `ui `uc ]
[e $U 181  ]
"422
[; ;main.c: 422:                                 case 'B': alt_atuador(tecla); dispLCD_lincol(3, 8); dispLCD_dataReg(ler_atuador('B') ? '+' : '-'); break;
[e :U 184 ]
[e ( _alt_atuador (1 _tecla ]
[e ( _dispLCD_lincol (2 , -> -> 3 `i `uc -> -> 8 `i `uc ]
[e ( _dispLCD_dataReg (1 -> ? != -> ( _ler_atuador (1 -> -> 66 `ui `uc `i -> 0 `i : -> 43 `ui -> 45 `ui `uc ]
[e $U 181  ]
"423
[; ;main.c: 423:                                 case 'C': alt_atuador(tecla); dispLCD_lincol(3,12); dispLCD_dataReg(ler_atuador('C') ? '+' : '-'); break;
[e :U 185 ]
[e ( _alt_atuador (1 _tecla ]
[e ( _dispLCD_lincol (2 , -> -> 3 `i `uc -> -> 12 `i `uc ]
[e ( _dispLCD_dataReg (1 -> ? != -> ( _ler_atuador (1 -> -> 67 `ui `uc `i -> 0 `i : -> 43 `ui -> 45 `ui `uc ]
[e $U 181  ]
"424
[; ;main.c: 424:                                 case 'D': alt_atuador(tecla); dispLCD_lincol(3,16); dispLCD_dataReg(ler_atuador('D') ? '+' : '-'); break;
[e :U 186 ]
[e ( _alt_atuador (1 _tecla ]
[e ( _dispLCD_lincol (2 , -> -> 3 `i `uc -> -> 16 `i `uc ]
[e ( _dispLCD_dataReg (1 -> ? != -> ( _ler_atuador (1 -> -> 68 `ui `uc `i -> 0 `i : -> 43 `ui -> 45 `ui `uc ]
[e $U 181  ]
"425
[; ;main.c: 425:                                 case '#': estado = 10; break;
[e :U 187 ]
[e = _estado -> -> 10 `i `uc ]
[e $U 181  ]
"426
[; ;main.c: 426:                                 case '*': estado = 8; break;
[e :U 188 ]
[e = _estado -> -> 8 `i `uc ]
[e $U 181  ]
"427
[; ;main.c: 427:                             }
}
[e $U 181  ]
[e :U 182 ]
[e [\ -> _tecla `i , $ -> -> 65 `ui `i 183
 , $ -> -> 66 `ui `i 184
 , $ -> -> 67 `ui `i 185
 , $ -> -> 68 `ui `i 186
 , $ -> -> 35 `ui `i 187
 , $ -> -> 42 `ui `i 188
 181 ]
[e :U 181 ]
"428
[; ;main.c: 428:                             break;
[e $U 149  ]
"432
[; ;main.c: 432:             case 10:
[e :U 189 ]
"433
[; ;main.c: 433:                             init_cond = salva_atuadores_init();
[e = _init_cond ( _salva_atuadores_init ..  ]
"434
[; ;main.c: 434:                             IHM.clr();
[e ( *U . _IHM 4 ..  ]
"435
[; ;main.c: 435:                             IHM.printpos(0, 0, "  INSIRA OS PASSOS  ");
[e ( *U . _IHM 2 (3 , , -> -> 0 `i `uc -> -> 0 `i `uc :s 8C ]
"436
[; ;main.c: 436:                             estado = 14;
[e = _estado -> -> 14 `i `uc ]
"437
[; ;main.c: 437:                             break;
[e $U 149  ]
"439
[; ;main.c: 439:              case 11:
[e :U 190 ]
"440
[; ;main.c: 440:                             tecla = teclado_borda();
[e = _tecla -> ( _teclado_borda ..  `uc ]
"441
[; ;main.c: 441:                             switch( tecla )
[e $U 192  ]
"442
[; ;main.c: 442:                             {
{
"443
[; ;main.c: 443:                                 case 'A':
[e :U 193 ]
"444
[; ;main.c: 444:                                 case 'B':
[e :U 194 ]
"445
[; ;main.c: 445:                                 case 'C':
[e :U 195 ]
"446
[; ;main.c: 446:                                 case 'D':
[e :U 196 ]
"447
[; ;main.c: 447:                                             if( fifo_disponivel() )
[e $ ! != -> ( _fifo_disponivel ..  `i -> 0 `i 197  ]
"448
[; ;main.c: 448:                                             {
{
"449
[; ;main.c: 449:                                                 alt_atuador(tecla);
[e ( _alt_atuador (1 _tecla ]
"450
[; ;main.c: 450:                                                 fifo_add( ler_atuador(tecla) ? tecla : tecla|0x20 );
[e ( _fifo_add (1 -> ? != -> ( _ler_atuador (1 _tecla `i -> 0 `i : -> _tecla `i | -> _tecla `i -> 32 `i `uc ]
"451
[; ;main.c: 451:                                                 estado = 16;
[e = _estado -> -> 16 `i `uc ]
"452
[; ;main.c: 452:                                             }
}
[e :U 197 ]
"453
[; ;main.c: 453:                                             break;
[e $U 191  ]
"454
[; ;main.c: 454:                                 case '6':
[e :U 198 ]
"455
[; ;main.c: 455:                                             fifo_indicePrint_inc();
[e ( _fifo_indicePrint_inc ..  ]
"456
[; ;main.c: 456:                                             estado = 16;
[e = _estado -> -> 16 `i `uc ]
"457
[; ;main.c: 457:                                             break;
[e $U 191  ]
"458
[; ;main.c: 458:                                 case '4':
[e :U 199 ]
"459
[; ;main.c: 459:                                             fifo_indicePrint_dec();
[e ( _fifo_indicePrint_dec ..  ]
"460
[; ;main.c: 460:                                             estado = 16;
[e = _estado -> -> 16 `i `uc ]
"461
[; ;main.c: 461:                                             break;
[e $U 191  ]
"463
[; ;main.c: 463:                                 case '*':
[e :U 200 ]
"464
[; ;main.c: 464:                                             if(fifo_indice() == 2 )
[e $ ! == -> ( _fifo_indice ..  `i -> 2 `i 201  ]
"465
[; ;main.c: 465:                                                 estado = 3;
[e = _estado -> -> 3 `i `uc ]
[e $U 202  ]
"466
[; ;main.c: 466:                                             else
[e :U 201 ]
"467
[; ;main.c: 467:                                             {
{
"468
[; ;main.c: 468:                                                 fifo_delete();
[e ( _fifo_delete ..  ]
"469
[; ;main.c: 469:                                                 estado = 16;
[e = _estado -> -> 16 `i `uc ]
"470
[; ;main.c: 470:                                             }
}
[e :U 202 ]
"471
[; ;main.c: 471:                                             break;
[e $U 191  ]
"473
[; ;main.c: 473:                                 case '#': estado = 74; break;
[e :U 203 ]
[e = _estado -> -> 74 `i `uc ]
[e $U 191  ]
"475
[; ;main.c: 475:                                 case '0': estado = 41; break;
[e :U 204 ]
[e = _estado -> -> 41 `i `uc ]
[e $U 191  ]
"477
[; ;main.c: 477:                                 case '9': estado = 90; break;
[e :U 205 ]
[e = _estado -> -> 90 `i `uc ]
[e $U 191  ]
"478
[; ;main.c: 478:                             }
}
[e $U 191  ]
[e :U 192 ]
[e [\ -> _tecla `i , $ -> -> 65 `ui `i 193
 , $ -> -> 66 `ui `i 194
 , $ -> -> 67 `ui `i 195
 , $ -> -> 68 `ui `i 196
 , $ -> -> 54 `ui `i 198
 , $ -> -> 52 `ui `i 199
 , $ -> -> 42 `ui `i 200
 , $ -> -> 35 `ui `i 203
 , $ -> -> 48 `ui `i 204
 , $ -> -> 57 `ui `i 205
 191 ]
[e :U 191 ]
"479
[; ;main.c: 479:                             break;
[e $U 149  ]
"481
[; ;main.c: 481:              case 16:
[e :U 206 ]
"482
[; ;main.c: 482:                             fifo_print();
[e ( _fifo_print ..  ]
"483
[; ;main.c: 483:                             estado = 14;
[e = _estado -> -> 14 `i `uc ]
"484
[; ;main.c: 484:                             break;
[e $U 149  ]
"486
[; ;main.c: 486:              case 14:
[e :U 207 ]
"487
[; ;main.c: 487:                             IHM.printpos(3,0,"<  /  >");
[e ( *U . _IHM 2 (3 , , -> -> 3 `i `uc -> -> 0 `i `uc :s 9C ]
"488
[; ;main.c: 488:                             IHM.printv(3, 1,( fifo_indice()-2 ), 2);
[e ( *U . _IHM 3 (4 , , , -> -> 3 `i `uc -> -> 1 `i `uc - -> ( _fifo_indice ..  `i -> 2 `i -> -> 2 `i `uc ]
"489
[; ;main.c: 489:                             IHM.printv(3, 4,( fifo_tam()-2 ), 2);
[e ( *U . _IHM 3 (4 , , , -> -> 3 `i `uc -> -> 4 `i `uc - -> ( _fifo_tam ..  `i -> 2 `i -> -> 2 `i `uc ]
"490
[; ;main.c: 490:                             estado = 11;
[e = _estado -> -> 11 `i `uc ]
"491
[; ;main.c: 491:                             break;
[e $U 149  ]
"493
[; ;main.c: 493:              case 30:
[e :U 208 ]
"495
[; ;main.c: 495:                             estado = 70;
[e = _estado -> -> 70 `i `uc ]
"496
[; ;main.c: 496:                             meAtuadores = 1;
[e = _meAtuadores -> -> 1 `i `uc ]
"497
[; ;main.c: 497:                             break;
[e $U 149  ]
"499
[; ;main.c: 499:              case 70:
[e :U 209 ]
"500
[; ;main.c: 500:                             if( meAtuadores == 3 && botao != 2 )
[e $ ! && == -> _meAtuadores `i -> 3 `i != -> _botao `i -> 2 `i 210  ]
"501
[; ;main.c: 501:                             {
{
"502
[; ;main.c: 502:                                 IHM.printpos(0, 0, "       [    ]       ");
[e ( *U . _IHM 2 (3 , , -> -> 0 `i `uc -> -> 0 `i `uc :s 10C ]
"503
[; ;main.c: 503:                                 printExec(1, -1);
[e ( _printExec (2 , -> -> 1 `i `uc -> -U -> 1 `i `uc ]
"504
[; ;main.c: 504:                                 printExec(9, 0);
[e ( _printExec (2 , -> -> 9 `i `uc -> -> 0 `i `uc ]
"505
[; ;main.c: 505:                                 printExec(14, 1);
[e ( _printExec (2 , -> -> 14 `i `uc -> -> 1 `i `uc ]
"506
[; ;main.c: 506:                                 IHM.printpos(2, 0, "<  /  > c:          ");
[e ( *U . _IHM 2 (3 , , -> -> 2 `i `uc -> -> 0 `i `uc :s 11C ]
"507
[; ;main.c: 507:                                 IHM.printv(2, 4,( fifo_indice() - 2 ), 2);
[e ( *U . _IHM 3 (4 , , , -> -> 2 `i `uc -> -> 4 `i `uc - -> ( _fifo_indice ..  `i -> 2 `i -> -> 2 `i `uc ]
"508
[; ;main.c: 508:                                 IHM.printv(2, 1, ( getIndicePassos() - 1 ), 2);
[e ( *U . _IHM 3 (4 , , , -> -> 2 `i `uc -> -> 1 `i `uc - -> ( _getIndicePassos ..  `i -> 1 `i -> -> 2 `i `uc ]
"509
[; ;main.c: 509:                                 IHM.printv(2, 11, ( getContCiclos() + 1 ), 5);
[e ( *U . _IHM 3 (4 , , , -> -> 2 `i `uc -> -> 11 `i `uc -> + ( _getContCiclos ..  -> -> 1 `i `ui `i -> -> 5 `i `uc ]
"511
[; ;main.c: 511:                             }
}
[e :U 210 ]
"512
[; ;main.c: 512:                             if(meAtuadores == 0)
[e $ ! == -> _meAtuadores `i -> 0 `i 211  ]
"513
[; ;main.c: 513:                             {
{
"514
[; ;main.c: 514:                                 estado = 16;
[e = _estado -> -> 16 `i `uc ]
"515
[; ;main.c: 515:                                 IHM.clr();
[e ( *U . _IHM 4 ..  ]
"516
[; ;main.c: 516:                             }
}
[e :U 211 ]
"517
[; ;main.c: 517:                             tecla = teclado_borda();
[e = _tecla -> ( _teclado_borda ..  `uc ]
"518
[; ;main.c: 518:                             switch(tecla)
[e $U 213  ]
"519
[; ;main.c: 519:                             {
{
"520
[; ;main.c: 520:                                 case '#':
[e :U 214 ]
"521
[; ;main.c: 521:                                     botao = 1;
[e = _botao -> -> 1 `i `uc ]
"522
[; ;main.c: 522:                                     break;
[e $U 212  ]
"524
[; ;main.c: 524:                                 case '5':
[e :U 215 ]
"525
[; ;main.c: 525:                                     botao = 2;
[e = _botao -> -> 2 `i `uc ]
"526
[; ;main.c: 526:                                     break;
[e $U 212  ]
"528
[; ;main.c: 528:                                 case '0':
[e :U 216 ]
"529
[; ;main.c: 529:                                     botao = 0;
[e = _botao -> -> 0 `i `uc ]
"530
[; ;main.c: 530:                                     break;
[e $U 212  ]
"532
[; ;main.c: 532:                                 case '1':
[e :U 217 ]
"533
[; ;main.c: 533:                                     if(botao == 2)
[e $ ! == -> _botao `i -> 2 `i 218  ]
"534
[; ;main.c: 534:                                         botao = 3;
[e = _botao -> -> 3 `i `uc ]
[e :U 218 ]
"535
[; ;main.c: 535:                                     break;
[e $U 212  ]
"536
[; ;main.c: 536:                             }
}
[e $U 212  ]
[e :U 213 ]
[e [\ -> _tecla `i , $ -> -> 35 `ui `i 214
 , $ -> -> 53 `ui `i 215
 , $ -> -> 48 `ui `i 216
 , $ -> -> 49 `ui `i 217
 212 ]
[e :U 212 ]
"537
[; ;main.c: 537:                             break;
[e $U 149  ]
"539
[; ;main.c: 539:              case 40:
[e :U 219 ]
"540
[; ;main.c: 540:                             tecla = teclado_borda();
[e = _tecla -> ( _teclado_borda ..  `uc ]
"541
[; ;main.c: 541:                             if(tecla >= '0' && tecla <= '9')
[e $ ! && >= -> _tecla `ui -> 48 `ui <= -> _tecla `ui -> 57 `ui 220  ]
"542
[; ;main.c: 542:                             {
{
"543
[; ;main.c: 543:                                 dignum_conc(tecla, &num);
[e ( _dignum_conc (2 , _tecla &U _num ]
"544
[; ;main.c: 544:                                 if(num > 120)
[e $ ! > _num -> -> 120 `i `ui 221  ]
"545
[; ;main.c: 545:                                     num = 120;
[e = _num -> -> 120 `i `ui ]
[e :U 221 ]
"546
[; ;main.c: 546:                                 estado = 41;
[e = _estado -> -> 41 `i `uc ]
"547
[; ;main.c: 547:                             }
}
[e :U 220 ]
"548
[; ;main.c: 548:                             if(tecla == '*')
[e $ ! == -> _tecla `ui -> 42 `ui 222  ]
"549
[; ;main.c: 549:                             {
{
"550
[; ;main.c: 550:                                 dignum_apagar(&num);
[e ( _dignum_apagar (1 &U _num ]
"551
[; ;main.c: 551:                                 estado = 41;
[e = _estado -> -> 41 `i `uc ]
"552
[; ;main.c: 552:                             }
}
[e :U 222 ]
"553
[; ;main.c: 553:                             if(tecla == '#')
[e $ ! == -> _tecla `ui -> 35 `ui 223  ]
"554
[; ;main.c: 554:                                 estado = 42;
[e = _estado -> -> 42 `i `uc ]
[e :U 223 ]
"555
[; ;main.c: 555:                             break;
[e $U 149  ]
"557
[; ;main.c: 557:              case 41:
[e :U 224 ]
"559
[; ;main.c: 559:                             IHM.printpos(2, 0, "config tempo:      s");
[e ( *U . _IHM 2 (3 , , -> -> 2 `i `uc -> -> 0 `i `uc :s 12C ]
"560
[; ;main.c: 560:                             IHM.printv(2, 15, num, 3);
[e ( *U . _IHM 3 (4 , , , -> -> 2 `i `uc -> -> 15 `i `uc -> _num `i -> -> 3 `i `uc ]
"561
[; ;main.c: 561:                             estado = 40;
[e = _estado -> -> 40 `i `uc ]
"562
[; ;main.c: 562:                             break;
[e $U 149  ]
"564
[; ;main.c: 564:              case 42:
[e :U 225 ]
"565
[; ;main.c: 565:                             fifo_add_tempo(num);
[e ( _fifo_add_tempo (1 -> _num `uc ]
"566
[; ;main.c: 566:                             IHM.clr();
[e ( *U . _IHM 4 ..  ]
"567
[; ;main.c: 567:                             estado = 16;
[e = _estado -> -> 16 `i `uc ]
"568
[; ;main.c: 568:                             break;
[e $U 149  ]
"598
[; ;main.c: 598:              case 52:
[e :U 226 ]
"599
[; ;main.c: 599:                             tecla = teclado_borda();
[e = _tecla -> ( _teclado_borda ..  `uc ]
"600
[; ;main.c: 600:                             if(tecla >= '0' && tecla <= '9')
[e $ ! && >= -> _tecla `ui -> 48 `ui <= -> _tecla `ui -> 57 `ui 227  ]
"601
[; ;main.c: 601:                                {
{
"602
[; ;main.c: 602:                                 dignum_conc(tecla, &ciclos);
[e ( _dignum_conc (2 , _tecla &U _ciclos ]
"603
[; ;main.c: 603:                                 if(ciclos > 10000)
[e $ ! > _ciclos -> -> 10000 `i `ui 228  ]
"604
[; ;main.c: 604:                                     ciclos = 10000;
[e = _ciclos -> -> 10000 `i `ui ]
[e :U 228 ]
"605
[; ;main.c: 605:                                 estado = 53;
[e = _estado -> -> 53 `i `uc ]
"606
[; ;main.c: 606:                                 break;
[e $U 149  ]
"607
[; ;main.c: 607:                                }
}
[e :U 227 ]
"608
[; ;main.c: 608:                             switch(tecla)
[e $U 230  ]
"609
[; ;main.c: 609:                                {
{
"610
[; ;main.c: 610:                                    case 'A':
[e :U 231 ]
"611
[; ;main.c: 611:                                    case 'B':
[e :U 232 ]
"612
[; ;main.c: 612:                                    case 'C':
[e :U 233 ]
"613
[; ;main.c: 613:                                    case 'D':
[e :U 234 ]
"614
[; ;main.c: 614:                                        dispLCD_clr();
[e ( _dispLCD_clr ..  ]
"615
[; ;main.c: 615:                                        estado = 16;
[e = _estado -> -> 16 `i `uc ]
"616
[; ;main.c: 616:                                        break;
[e $U 229  ]
"617
[; ;main.c: 617:                                    case '#':
[e :U 235 ]
"618
[; ;main.c: 618:                                        estado = 54;
[e = _estado -> -> 54 `i `uc ]
"619
[; ;main.c: 619:                                        break;
[e $U 229  ]
"620
[; ;main.c: 620:                                    case '*':
[e :U 236 ]
"621
[; ;main.c: 621:                                        dignum_apagar(&ciclos);
[e ( _dignum_apagar (1 &U _ciclos ]
"622
[; ;main.c: 622:                                        estado = 53;
[e = _estado -> -> 53 `i `uc ]
"623
[; ;main.c: 623:                                        break;
[e $U 229  ]
"624
[; ;main.c: 624:                                }
}
[e $U 229  ]
[e :U 230 ]
[e [\ -> _tecla `i , $ -> -> 65 `ui `i 231
 , $ -> -> 66 `ui `i 232
 , $ -> -> 67 `ui `i 233
 , $ -> -> 68 `ui `i 234
 , $ -> -> 35 `ui `i 235
 , $ -> -> 42 `ui `i 236
 229 ]
[e :U 229 ]
"625
[; ;main.c: 625:                             break;
[e $U 149  ]
"627
[; ;main.c: 627:              case 53:
[e :U 237 ]
"628
[; ;main.c: 628:                             IHM.clr();
[e ( *U . _IHM 4 ..  ]
"629
[; ;main.c: 629:                             IHM.printpos(0, 0, "Ciclos:             ");
[e ( *U . _IHM 2 (3 , , -> -> 0 `i `uc -> -> 0 `i `uc :s 13C ]
"630
[; ;main.c: 630:                             IHM.printv(0, 15, ciclos, 5);
[e ( *U . _IHM 3 (4 , , , -> -> 0 `i `uc -> -> 15 `i `uc -> _ciclos `i -> -> 5 `i `uc ]
"631
[; ;main.c: 631:                             IHM.printpos(2, 0, "0 - Ciclo continuo  ");
[e ( *U . _IHM 2 (3 , , -> -> 2 `i `uc -> -> 0 `i `uc :s 14C ]
"632
[; ;main.c: 632:                             estado = 52;
[e = _estado -> -> 52 `i `uc ]
"633
[; ;main.c: 633:                             break;
[e $U 149  ]
"635
[; ;main.c: 635:              case 74:
[e :U 238 ]
"636
[; ;main.c: 636:                             IHM.print("    DESEJA SALVAR   \n"
[e ( *U . _IHM 1 (1 :s 15C ]
"640
[; ;main.c: 640:                             tecla = teclado_borda();
[e = _tecla -> ( _teclado_borda ..  `uc ]
"641
[; ;main.c: 641:                             switch(tecla)
[e $U 240  ]
"642
[; ;main.c: 642:                             {
{
"643
[; ;main.c: 643:                                 case '#': estado = 75; break;
[e :U 241 ]
[e = _estado -> -> 75 `i `uc ]
[e $U 239  ]
"644
[; ;main.c: 644:                                 case '*': dispLCD_clr(); estado = 53; break;
[e :U 242 ]
[e ( _dispLCD_clr ..  ]
[e = _estado -> -> 53 `i `uc ]
[e $U 239  ]
"645
[; ;main.c: 645:                             }
}
[e $U 239  ]
[e :U 240 ]
[e [\ -> _tecla `i , $ -> -> 35 `ui `i 241
 , $ -> -> 42 `ui `i 242
 239 ]
[e :U 239 ]
"646
[; ;main.c: 646:                             break;
[e $U 149  ]
"648
[; ;main.c: 648:              case 75:
[e :U 243 ]
"649
[; ;main.c: 649:                             IHM.clr();
[e ( *U . _IHM 4 ..  ]
"650
[; ;main.c: 650:                             IHM.print(" ESCOLHA A MEMORIA\n"
[e ( *U . _IHM 1 (1 :s 16C ]
"654
[; ;main.c: 654:                             estado = 76;
[e = _estado -> -> 76 `i `uc ]
"656
[; ;main.c: 656:              case 76:
[e :U 244 ]
"657
[; ;main.c: 657:                             tecla = teclado_borda();
[e = _tecla -> ( _teclado_borda ..  `uc ]
"658
[; ;main.c: 658:                             switch(tecla)
[e $U 246  ]
"659
[; ;main.c: 659:                             {
{
"660
[; ;main.c: 660:                                 case '0':
[e :U 247 ]
"661
[; ;main.c: 661:                                 case '1':
[e :U 248 ]
"662
[; ;main.c: 662:                                 case '2':
[e :U 249 ]
"663
[; ;main.c: 663:                                 case '3':
[e :U 250 ]
"664
[; ;main.c: 664:                                 case '4':
[e :U 251 ]
"665
[; ;main.c: 665:                                 case '5':
[e :U 252 ]
"666
[; ;main.c: 666:                                 case '6':
[e :U 253 ]
"667
[; ;main.c: 667:                                 case '7':
[e :U 254 ]
"668
[; ;main.c: 668:                                 case '8':
[e :U 255 ]
"669
[; ;main.c: 669:                                 case '9':
[e :U 256 ]
"670
[; ;main.c: 670:                                            salvar_dado(10, tecla % 0x30, init_cond);
[e ( _salvar_dado (3 , , -> -> 10 `i `uc -> % -> _tecla `i -> 48 `i `uc -> _init_cond `uc ]
"671
[; ;main.c: 671:                                            EEPROM.salvar(tecla % 0x30, fifo_adrs() + 2);
[e ( *U . _EEPROM 0 (2 , -> % -> _tecla `i -> 48 `i `uc -> + ( _fifo_adrs ..  * -> -> 2 `i `x -> -> # *U ( _fifo_adrs ..  `i `x `*uc ]
"672
[; ;main.c: 672:                                            estado = 77;
[e = _estado -> -> 77 `i `uc ]
"673
[; ;main.c: 673:                                            break;
[e $U 245  ]
"675
[; ;main.c: 675:                                 case '*': IHM.clr(); estado = 74; break;
[e :U 257 ]
[e ( *U . _IHM 4 ..  ]
[e = _estado -> -> 74 `i `uc ]
[e $U 245  ]
"676
[; ;main.c: 676:                             }
}
[e $U 245  ]
[e :U 246 ]
[e [\ -> _tecla `i , $ -> -> 48 `ui `i 247
 , $ -> -> 49 `ui `i 248
 , $ -> -> 50 `ui `i 249
 , $ -> -> 51 `ui `i 250
 , $ -> -> 52 `ui `i 251
 , $ -> -> 53 `ui `i 252
 , $ -> -> 54 `ui `i 253
 , $ -> -> 55 `ui `i 254
 , $ -> -> 56 `ui `i 255
 , $ -> -> 57 `ui `i 256
 , $ -> -> 42 `ui `i 257
 245 ]
[e :U 245 ]
"677
[; ;main.c: 677:                             break;
[e $U 149  ]
"679
[; ;main.c: 679:              case 77:
[e :U 258 ]
"680
[; ;main.c: 680:                             IHM.clr();
[e ( *U . _IHM 4 ..  ]
"681
[; ;main.c: 681:                             for(char i = 0; i <= 3; i++)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ <= -> _i `i -> 3 `i 259  ]
[e $U 260  ]
[e :U 259 ]
"682
[; ;main.c: 682:                             {
{
"683
[; ;main.c: 683:                                 for(char j = 0; j <= 19; j++)
{
[v _j `uc ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `uc ]
[e $ <= -> _j `i -> 19 `i 262  ]
[e $U 263  ]
[e :U 262 ]
"684
[; ;main.c: 684:                                 {
{
"685
[; ;main.c: 685:                                     IHM.printpos(i, j, "\377");
[e ( *U . _IHM 2 (3 , , -> _i `uc -> _j `uc :s 17C ]
"686
[; ;main.c: 686:                                     delay(10);
[e ( _delay (1 -> -> 10 `i `ui ]
"687
[; ;main.c: 687:                                 }
}
[e ++ _j -> -> 1 `i `uc ]
[e $ <= -> _j `i -> 19 `i 262  ]
[e :U 263 ]
}
"688
[; ;main.c: 688:                             }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ <= -> _i `i -> 3 `i 259  ]
[e :U 260 ]
}
"690
[; ;main.c: 690:                             for(char i = 0; i <= 3; i++)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ <= -> _i `i -> 3 `i 265  ]
[e $U 266  ]
[e :U 265 ]
"691
[; ;main.c: 691:                             {
{
"692
[; ;main.c: 692:                                 for(char j = 0; j <= 19; j++)
{
[v _j `uc ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `uc ]
[e $ <= -> _j `i -> 19 `i 268  ]
[e $U 269  ]
[e :U 268 ]
"693
[; ;main.c: 693:                                 {
{
"694
[; ;main.c: 694:                                     IHM.printpos(i, j, " ");
[e ( *U . _IHM 2 (3 , , -> _i `uc -> _j `uc :s 18C ]
"695
[; ;main.c: 695:                                     delay(10);
[e ( _delay (1 -> -> 10 `i `ui ]
"696
[; ;main.c: 696:                                 }
}
[e ++ _j -> -> 1 `i `uc ]
[e $ <= -> _j `i -> 19 `i 268  ]
[e :U 269 ]
}
"697
[; ;main.c: 697:                             }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ <= -> _i `i -> 3 `i 265  ]
[e :U 266 ]
}
"698
[; ;main.c: 698:                             IHM.printpos(1, 0, "      SEQUENCIA     ");
[e ( *U . _IHM 2 (3 , , -> -> 1 `i `uc -> -> 0 `i `uc :s 19C ]
"699
[; ;main.c: 699:                             IHM.printpos(2, 0, "        SALVA       ");
[e ( *U . _IHM 2 (3 , , -> -> 2 `i `uc -> -> 0 `i `uc :s 20C ]
"701
[; ;main.c: 701:                             setT1(1000);
[e ( _setT1 (1 -> -> -> 1000 `i `l `ul ]
"702
[; ;main.c: 702:                             estado = 78;
[e = _estado -> -> 78 `i `uc ]
"703
[; ;main.c: 703:                             break;
[e $U 149  ]
"705
[; ;main.c: 705:              case 78:
[e :U 271 ]
"706
[; ;main.c: 706:                             if(!statusT1())
[e $ ! ! != ( _statusT1 ..  -> -> -> 0 `i `l `ul 272  ]
"707
[; ;main.c: 707:                                 estado = 53;
[e = _estado -> -> 53 `i `uc ]
[e :U 272 ]
"708
[; ;main.c: 708:                             break;
[e $U 149  ]
"710
[; ;main.c: 710:              case 90:
[e :U 273 ]
"711
[; ;main.c: 711:                             IHM.printpos(2, 0, "config contrl:     %");
[e ( *U . _IHM 2 (3 , , -> -> 2 `i `uc -> -> 0 `i `uc :s 21C ]
"712
[; ;main.c: 712:                             IHM.printv(2, 15, num, 3);
[e ( *U . _IHM 3 (4 , , , -> -> 2 `i `uc -> -> 15 `i `uc -> _num `i -> -> 3 `i `uc ]
"713
[; ;main.c: 713:                             estado = 91;
[e = _estado -> -> 91 `i `uc ]
"714
[; ;main.c: 714:                             break;
[e $U 149  ]
"716
[; ;main.c: 716:              case 91:
[e :U 274 ]
"717
[; ;main.c: 717:                             tecla = teclado_borda();
[e = _tecla -> ( _teclado_borda ..  `uc ]
"718
[; ;main.c: 718:                             if(tecla >= '0' && tecla <= '9')
[e $ ! && >= -> _tecla `ui -> 48 `ui <= -> _tecla `ui -> 57 `ui 275  ]
"719
[; ;main.c: 719:                             {
{
"720
[; ;main.c: 720:                                 dignum_conc(tecla, &num);
[e ( _dignum_conc (2 , _tecla &U _num ]
"721
[; ;main.c: 721:                                 if(num > 100)
[e $ ! > _num -> -> 100 `i `ui 276  ]
"722
[; ;main.c: 722:                                     num = 100;
[e = _num -> -> 100 `i `ui ]
[e :U 276 ]
"723
[; ;main.c: 723:                                 estado = 90;
[e = _estado -> -> 90 `i `uc ]
"724
[; ;main.c: 724:                             }
}
[e :U 275 ]
"725
[; ;main.c: 725:                             if(tecla == '*')
[e $ ! == -> _tecla `ui -> 42 `ui 277  ]
"726
[; ;main.c: 726:                             {
{
"727
[; ;main.c: 727:                                 dignum_apagar(&num);
[e ( _dignum_apagar (1 &U _num ]
"728
[; ;main.c: 728:                                 estado = 90;
[e = _estado -> -> 90 `i `uc ]
"729
[; ;main.c: 729:                             }
}
[e :U 277 ]
"730
[; ;main.c: 730:                             if(tecla == '#')
[e $ ! == -> _tecla `ui -> 35 `ui 278  ]
"731
[; ;main.c: 731:                                 estado = 92;
[e = _estado -> -> 92 `i `uc ]
[e :U 278 ]
"732
[; ;main.c: 732:                             break;
[e $U 149  ]
"734
[; ;main.c: 734:              case 92:
[e :U 279 ]
"735
[; ;main.c: 735:                             fifo_add_control(num);
[e ( _fifo_add_control (1 -> _num `uc ]
"736
[; ;main.c: 736:                             IHM.clr();
[e ( *U . _IHM 4 ..  ]
"737
[; ;main.c: 737:                             estado = 16;
[e = _estado -> -> 16 `i `uc ]
"738
[; ;main.c: 738:                             break;
[e $U 149  ]
"740
[; ;main.c: 740:              case 54:
[e :U 280 ]
"741
[; ;main.c: 741:                             fifo_add_ciclo(ciclos);
[e ( _fifo_add_ciclo (1 _ciclos ]
"742
[; ;main.c: 742:                             estado = 30;
[e = _estado -> -> 30 `i `uc ]
"743
[; ;main.c: 743:                             botao = 1;
[e = _botao -> -> 1 `i `uc ]
"744
[; ;main.c: 744:                             break;
[e $U 149  ]
"745
[; ;main.c: 745:         }
}
[e $U 149  ]
[e :U 150 ]
[e [\ -> _estado `i , $ -> 0 `i 151
 , $ -> 1 `i 164
 , $ -> 2 `i 169
 , $ -> 8 `i 171
 , $ -> 9 `i 172
 , $ -> 71 `i 174
 , $ -> 3 `i 178
 , $ -> 6 `i 179
 , $ -> 7 `i 180
 , $ -> 10 `i 189
 , $ -> 11 `i 190
 , $ -> 16 `i 206
 , $ -> 14 `i 207
 , $ -> 30 `i 208
 , $ -> 70 `i 209
 , $ -> 40 `i 219
 , $ -> 41 `i 224
 , $ -> 42 `i 225
 , $ -> 52 `i 226
 , $ -> 53 `i 237
 , $ -> 74 `i 238
 , $ -> 75 `i 243
 , $ -> 76 `i 244
 , $ -> 77 `i 258
 , $ -> 78 `i 271
 , $ -> 90 `i 273
 , $ -> 91 `i 274
 , $ -> 92 `i 279
 , $ -> 54 `i 280
 149 ]
[e :U 149 ]
"747
[; ;main.c: 747:         serialIOscan();
[e ( _serialIOscan ..  ]
"829
[; ;main.c: 829:     }
}
[e :U 146 ]
[e $U 147  ]
[e :U 148 ]
"830
[; ;main.c: 830:     return;
[e $UE 145  ]
"831
[; ;main.c: 831: }
[e :UE 145 ]
}
[a 12C 99 111 110 102 105 103 32 116 101 109 112 111 58 32 32 32 32 32 32 115 0 ]
[a 15C 32 32 32 32 68 69 83 69 74 65 32 83 65 76 86 65 82 32 32 32 10 32 32 32 32 32 83 69 81 85 69 78 67 73 65 32 63 32 32 10 10 35 32 45 32 83 73 77 32 32 32 32 32 32 42 32 45 32 78 65 79 0 ]
[a 9C 60 32 32 47 32 32 62 0 ]
[a 21C 99 111 110 102 105 103 32 99 111 110 116 114 108 58 32 32 32 32 32 37 0 ]
[a 14C 48 32 45 32 67 105 99 108 111 32 99 111 110 116 105 110 117 111 32 32 0 ]
[a 8C 32 32 73 78 83 73 82 65 32 79 83 32 80 65 83 83 79 83 32 32 0 ]
[a 5C 32 32 32 65 74 85 83 84 69 32 79 32 73 78 73 67 73 79 32 32 0 ]
[a 16C 32 69 83 67 79 76 72 65 32 65 32 77 69 77 79 82 73 65 10 32 81 85 69 32 68 69 83 69 74 65 32 83 65 76 86 65 82 10 32 48 32 32 32 49 32 32 32 50 32 32 32 51 32 32 32 52 10 32 53 32 32 32 54 32 32 32 55 32 32 32 56 32 32 32 57 32 32 0 ]
[a 4C 49 58 32 73 78 83 69 82 73 82 32 83 69 81 85 69 78 67 73 65 10 50 58 32 66 85 83 67 65 82 32 83 69 81 85 69 78 67 73 65 10 51 58 32 82 69 80 69 84 73 82 32 85 76 84 46 32 83 69 81 85 10 52 58 32 67 79 78 70 73 71 85 82 65 67 79 69 83 32 32 32 32 0 ]
[a 7C 32 32 32 65 32 32 32 66 32 32 32 67 32 32 32 68 32 32 32 32 0 ]
[a 6C 32 32 32 32 32 68 79 32 83 73 83 84 69 77 65 32 32 32 32 32 0 ]
[a 19C 32 32 32 32 32 32 83 69 81 85 69 78 67 73 65 32 32 32 32 32 0 ]
[a 10C 32 32 32 32 32 32 32 91 32 32 32 32 93 32 32 32 32 32 32 32 0 ]
[a 3C 32 32 32 32 32 32 83 69 71 71 84 84 73 32 32 32 32 32 32 32 0 ]
[a 20C 32 32 32 32 32 32 32 32 83 65 76 86 65 32 32 32 32 32 32 32 0 ]
[a 11C 60 32 32 47 32 32 62 32 99 58 32 32 32 32 32 32 32 32 32 32 0 ]
[a 13C 67 105 99 108 111 115 58 32 32 32 32 32 32 32 32 32 32 32 32 32 0 ]
[a 2C 32 0 ]
[a 18C 32 0 ]
[a 1C 18446744073709551615 0 ]
[a 17C 18446744073709551615 0 ]
