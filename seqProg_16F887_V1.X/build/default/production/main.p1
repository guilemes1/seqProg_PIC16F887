Version 4.0 HI-TECH Software Intermediate Code
[v F1361 `(v ~T0 @X0 0 tf ]
[v F1363 `(v ~T0 @X0 0 tf1`*Cuc ]
[v F1366 `(v ~T0 @X0 0 tf3`uc`uc`*Cuc ]
[v F1371 `(v ~T0 @X0 0 tf4`uc`uc`i`uc ]
[v F1377 `(v ~T0 @X0 0 tf ]
"7 ./ihm.h
[; ;./ihm.h: 7: {
[s S138 `*F1361 1 `*F1363 1 `*F1366 1 `*F1371 1 `*F1377 1 ]
[n S138 . init print printpos printv clr ]
"10 ./dispLCD4vias.h
[; ;./dispLCD4vias.h: 10: void dispLCD_init( void );
[v _dispLCD_init `(v ~T0 @X0 0 ef ]
"14
[; ;./dispLCD4vias.h: 14: void dispLCD_str( const char * str );
[v _dispLCD_str `(v ~T0 @X0 0 ef1`*Cuc ]
"11
[; ;./dispLCD4vias.h: 11: void dispLCD( unsigned char lin, unsigned char col, const char * str );
[v _dispLCD `(v ~T0 @X0 0 ef3`uc`uc`*Cuc ]
"12
[; ;./dispLCD4vias.h: 12: void dispLCD_num( unsigned char lin, unsigned char col, int num, unsigned char tam );
[v _dispLCD_num `(v ~T0 @X0 0 ef4`uc`uc`i`uc ]
"13
[; ;./dispLCD4vias.h: 13: void dispLCD_clr( void );
[v _dispLCD_clr `(v ~T0 @X0 0 ef ]
[v F1424 `(v ~T0 @X0 0 tf2`uc`*uc ]
[v F1428 `(v ~T0 @X0 0 tf2`uc`*uc ]
[v F1432 `(v ~T0 @X0 0 tf1`uc ]
[v F1435 `(v ~T0 @X0 0 tf1`*uc ]
[v F1438 `(v ~T0 @X0 0 tf ]
"22 ./eeprom.h
[; ;./eeprom.h: 22: {
[s S139 `*F1424 1 `*F1428 1 `*F1432 1 `*F1435 1 `*F1438 1 ]
[n S139 . salvar buscar deletar livre formatar ]
"10
[; ;./eeprom.h: 10: void salvar_receita (char adrs,unsigned char *data );
[v _salvar_receita `(v ~T0 @X0 0 ef2`uc`*uc ]
"11
[; ;./eeprom.h: 11: void buscar_receita (char adrs,unsigned char *data );
[v _buscar_receita `(v ~T0 @X0 0 ef2`uc`*uc ]
"12
[; ;./eeprom.h: 12: void deletar_receita (char receita);
[v _deletar_receita `(v ~T0 @X0 0 ef1`uc ]
"13
[; ;./eeprom.h: 13: void receita_livre ( unsigned char * rec);
[v _receita_livre `(v ~T0 @X0 0 ef1`*uc ]
"14
[; ;./eeprom.h: 14: void formatar_receitas (void);
[v _formatar_receitas `(v ~T0 @X0 0 ef ]
[t ~ __interrupt . k ]
[t T1 __interrupt ]
"465 C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 465:     struct {
[s S16 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S16 . RBIF INTF T0IF RBIE INTE T0IE PEIE GIE ]
"475
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 475:     struct {
[s S17 :2 `uc 1 :1 `uc 1 :2 `uc 1 :1 `uc 1 ]
[n S17 . . TMR0IF . TMR0IE ]
"464
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 464: typedef union {
[u S15 `S16 1 `S17 1 ]
[n S15 . . . ]
"482
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 482: extern volatile INTCONbits_t INTCONbits __attribute__((address(0x00B)));
[v _INTCONbits `VS15 ~T0 @X0 0 e@11 ]
"543
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 543:     struct {
[s S19 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S19 . TMR1IF TMR2IF CCP1IF SSPIF TXIF RCIF ADIF ]
"542
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 542: typedef union {
[u S18 `S19 1 ]
[n S18 . . ]
"553
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 553: extern volatile PIR1bits_t PIR1bits __attribute__((address(0x00C)));
[v _PIR1bits `VS18 ~T0 @X0 0 e@12 ]
"1708
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1708:     struct {
[s S63 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S63 . TMR1IE TMR2IE CCP1IE SSPIE TXIE RCIE ADIE ]
"1707
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1707: typedef union {
[u S62 `S63 1 ]
[n S62 . . ]
"1718
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1718: extern volatile PIE1bits_t PIE1bits __attribute__((address(0x08C)));
[v _PIE1bits `VS62 ~T0 @X0 0 e@140 ]
"14 ./timer1.h
[; ;./timer1.h: 14: void intt1_1ms( void );
[v _intt1_1ms `(v ~T0 @X0 0 ef ]
[p mainexit ]
"15 ./teclado.h
[; ;./teclado.h: 15: void teclado_init( void );
[v _teclado_init `(v ~T0 @X0 0 ef ]
"15 ./timer1.h
[; ;./timer1.h: 15: void timer1_init(void);
[v _timer1_init `(v ~T0 @X0 0 ef ]
"12 ./serialIO.h
[; ;./serialIO.h: 12: void initSerialIO( char * ptrIn, char * ptrOut, unsigned char length );
[v _initSerialIO `(v ~T0 @X0 0 ef3`*uc`*uc`uc ]
"4 ./delay.h
[; ;./delay.h: 4: void delay( unsigned int t );
[v _delay `(v ~T0 @X0 0 ef1`ui ]
"9 ./dispLCD4vias.h
[; ;./dispLCD4vias.h: 9: void dispLCD_lincol( unsigned char lin, unsigned char col);
[v _dispLCD_lincol `(v ~T0 @X0 0 ef2`uc`uc ]
"8
[; ;./dispLCD4vias.h: 8: void dispLCD_dataReg( unsigned char d );
[v _dispLCD_dataReg `(v ~T0 @X0 0 ef1`uc ]
"16 ./timer1.h
[; ;./timer1.h: 16: void setT1( unsigned long int c );
[v _setT1 `(v ~T0 @X0 0 ef1`ul ]
"17
[; ;./timer1.h: 17: unsigned long int statusT1( void );
[v _statusT1 `(ul ~T0 @X0 0 ef ]
"16 ./fifo.h
[; ;./fifo.h: 16: void init_atuadores(void);
[v _init_atuadores `(v ~T0 @X0 0 ef ]
"17 ./teclado.h
[; ;./teclado.h: 17: unsigned char teclado_borda(void);
[v _teclado_borda `(uc ~T0 @X0 0 ef ]
"17 ./eeprom.h
[; ;./eeprom.h: 17: void buscar_dado (char adrs, char col, unsigned char *data);
[v _buscar_dado `(v ~T0 @X0 0 ef3`uc`uc`*uc ]
"48 ./fifo.h
[; ;./fifo.h: 48: void manipula_atuadores_init(char aux);
[v _manipula_atuadores_init `(v ~T0 @X0 0 ef1`uc ]
"23
[; ;./fifo.h: 23: void fifo_add_tempo(const char t);
[v _fifo_add_tempo `(v ~T0 @X0 0 ef1`Cuc ]
"15
[; ;./fifo.h: 15: void alt_atuador( char tecla );
[v _alt_atuador `(v ~T0 @X0 0 ef1`uc ]
"22
[; ;./fifo.h: 22: void fifo_add(const char passo);
[v _fifo_add `(v ~T0 @X0 0 ef1`Cuc ]
"14
[; ;./fifo.h: 14: char ler_atuador(char tecla);
[v _ler_atuador `(uc ~T0 @X0 0 ef1`uc ]
"29
[; ;./fifo.h: 29: void fifo_print(void);
[v _fifo_print `(v ~T0 @X0 0 ef ]
"47
[; ;./fifo.h: 47: char salva_atuadores_init( void );
[v _salva_atuadores_init `(uc ~T0 @X0 0 ef ]
"25
[; ;./fifo.h: 25: char fifo_disponivel( void );
[v _fifo_disponivel `(uc ~T0 @X0 0 ef ]
"27
[; ;./fifo.h: 27: void fifo_indicePrint_inc( void );
[v _fifo_indicePrint_inc `(v ~T0 @X0 0 ef ]
"28
[; ;./fifo.h: 28: void fifo_indicePrint_dec( void );
[v _fifo_indicePrint_dec `(v ~T0 @X0 0 ef ]
"24
[; ;./fifo.h: 24: char fifo_indice(void);
[v _fifo_indice `(uc ~T0 @X0 0 ef ]
"21
[; ;./fifo.h: 21: void fifo_delete(void);
[v _fifo_delete `(v ~T0 @X0 0 ef ]
"26
[; ;./fifo.h: 26: char fifo_tam(void);
[v _fifo_tam `(uc ~T0 @X0 0 ef ]
"44
[; ;./fifo.h: 44: void printExec (char col, char ind);
[v _printExec `(v ~T0 @X0 0 ef2`uc`uc ]
"40
[; ;./fifo.h: 40: unsigned char getIndicePassos(void);
[v _getIndicePassos `(uc ~T0 @X0 0 ef ]
"35
[; ;./fifo.h: 35: unsigned int getContCiclos(void);
[v _getContCiclos `(ui ~T0 @X0 0 ef ]
"30
[; ;./fifo.h: 30: void dignum_conc(char dig, unsigned int * ptrNum );
[v _dignum_conc `(v ~T0 @X0 0 ef2`uc`*ui ]
"31
[; ;./fifo.h: 31: void dignum_apagar(unsigned int * ptrNum );
[v _dignum_apagar `(v ~T0 @X0 0 ef1`*ui ]
"16 ./eeprom.h
[; ;./eeprom.h: 16: void salvar_dado (char adrs, char col, unsigned char data);
[v _salvar_dado `(v ~T0 @X0 0 ef3`uc`uc`uc ]
"20 ./fifo.h
[; ;./fifo.h: 20: char * fifo_adrs(void);
[v _fifo_adrs `(*uc ~T0 @X0 0 ef ]
"46
[; ;./fifo.h: 46: void fifo_add_control(const char c);
[v _fifo_add_control `(v ~T0 @X0 0 ef1`Cuc ]
"33
[; ;./fifo.h: 33: void fifo_add_ciclo(unsigned int ciclos);
[v _fifo_add_ciclo `(v ~T0 @X0 0 ef1`ui ]
"13 ./serialIO.h
[; ;./serialIO.h: 13: void serialIOscan( void );
[v _serialIOscan `(v ~T0 @X0 0 ef ]
"41 ./fifo.h
[; ;./fifo.h: 41: void resetIndicePassos(void);
[v _resetIndicePassos `(v ~T0 @X0 0 ef ]
"36
[; ;./fifo.h: 36: void resetContCiclos(void);
[v _resetContCiclos `(v ~T0 @X0 0 ef ]
"18
[; ;./fifo.h: 18: char fifo_lerPos(char i);
[v _fifo_lerPos `(uc ~T0 @X0 0 ef1`uc ]
"5 ./atuadores.h
[; ;./atuadores.h: 5: void set_passo(char passo, char* ptr);
[v _set_passo `(v ~T0 @X0 0 ef2`uc`*uc ]
"6
[; ;./atuadores.h: 6: char ler_sensor(char passo, char* ptr);
[v _ler_sensor `(uc ~T0 @X0 0 ef2`uc`*uc ]
"38 ./fifo.h
[; ;./fifo.h: 38: void addIndicePassos(void);
[v _addIndicePassos `(v ~T0 @X0 0 ef ]
"37
[; ;./fifo.h: 37: void addContCiclos(void);
[v _addContCiclos `(v ~T0 @X0 0 ef ]
"34
[; ;./fifo.h: 34: unsigned int getCiclos(void);
[v _getCiclos `(ui ~T0 @X0 0 ef ]
"54 C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 54: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"61
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 61: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"68
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 68: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"75
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 75: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"161
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 161: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"168
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 168: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"230
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 230: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"292
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 292: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"354
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 354: __asm("PORTD equ 08h");
[; <" PORTD equ 08h ;# ">
"416
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 416: __asm("PORTE equ 09h");
[; <" PORTE equ 09h ;# ">
"454
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 454: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"461
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 461: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"539
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 539: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"595
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 595: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"652
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 652: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"659
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 659: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"666
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 666: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"673
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 673: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"767
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 767: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"774
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 774: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"845
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 845: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"852
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 852: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"922
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 922: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"929
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 929: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"936
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 936: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"943
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 943: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"1040
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1040: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"1135
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1135: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"1142
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1142: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"1149
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1149: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"1156
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1156: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"1163
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1163: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"1170
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1170: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1240
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1240: __asm("ADRESH equ 01Eh");
[; <" ADRESH equ 01Eh ;# ">
"1247
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1247: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1348
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1348: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1418
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1418: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1480
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1480: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1542
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1542: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1604
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1604: __asm("TRISD equ 088h");
[; <" TRISD equ 088h ;# ">
"1666
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1666: __asm("TRISE equ 089h");
[; <" TRISE equ 089h ;# ">
"1704
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1704: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1760
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1760: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1817
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1817: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1864
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1864: __asm("OSCCON equ 08Fh");
[; <" OSCCON equ 08Fh ;# ">
"1929
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1929: __asm("OSCTUNE equ 090h");
[; <" OSCTUNE equ 090h ;# ">
"1981
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 1981: __asm("SSPCON2 equ 091h");
[; <" SSPCON2 equ 091h ;# ">
"2043
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2043: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"2050
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2050: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"2057
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2057: __asm("SSPMSK equ 093h");
[; <" SSPMSK equ 093h ;# ">
"2062
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2062: __asm("MSK equ 093h");
[; <" MSK equ 093h ;# ">
"2179
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2179: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"2348
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2348: __asm("WPUB equ 095h");
[; <" WPUB equ 095h ;# ">
"2418
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2418: __asm("IOCB equ 096h");
[; <" IOCB equ 096h ;# ">
"2488
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2488: __asm("VRCON equ 097h");
[; <" VRCON equ 097h ;# ">
"2558
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2558: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"2644
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2644: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"2706
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2706: __asm("SPBRGH equ 09Ah");
[; <" SPBRGH equ 09Ah ;# ">
"2776
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2776: __asm("PWM1CON equ 09Bh");
[; <" PWM1CON equ 09Bh ;# ">
"2846
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2846: __asm("ECCPAS equ 09Ch");
[; <" ECCPAS equ 09Ch ;# ">
"2928
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2928: __asm("PSTRCON equ 09Dh");
[; <" PSTRCON equ 09Dh ;# ">
"2972
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2972: __asm("ADRESL equ 09Eh");
[; <" ADRESL equ 09Eh ;# ">
"2979
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 2979: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"3013
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3013: __asm("WDTCON equ 0105h");
[; <" WDTCON equ 0105h ;# ">
"3066
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3066: __asm("CM1CON0 equ 0107h");
[; <" CM1CON0 equ 0107h ;# ">
"3131
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3131: __asm("CM2CON0 equ 0108h");
[; <" CM2CON0 equ 0108h ;# ">
"3196
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3196: __asm("CM2CON1 equ 0109h");
[; <" CM2CON1 equ 0109h ;# ">
"3247
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3247: __asm("EEDATA equ 010Ch");
[; <" EEDATA equ 010Ch ;# ">
"3252
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3252: __asm("EEDAT equ 010Ch");
[; <" EEDAT equ 010Ch ;# ">
"3259
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3259: __asm("EEADR equ 010Dh");
[; <" EEADR equ 010Dh ;# ">
"3266
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3266: __asm("EEDATH equ 010Eh");
[; <" EEDATH equ 010Eh ;# ">
"3273
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3273: __asm("EEADRH equ 010Fh");
[; <" EEADRH equ 010Fh ;# ">
"3280
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3280: __asm("SRCON equ 0185h");
[; <" SRCON equ 0185h ;# ">
"3337
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3337: __asm("BAUDCTL equ 0187h");
[; <" BAUDCTL equ 0187h ;# ">
"3389
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3389: __asm("ANSEL equ 0188h");
[; <" ANSEL equ 0188h ;# ">
"3451
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3451: __asm("ANSELH equ 0189h");
[; <" ANSELH equ 0189h ;# ">
"3501
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3501: __asm("EECON1 equ 018Ch");
[; <" EECON1 equ 018Ch ;# ">
"3546
[; ;C:/Program Files/Microchip/MPLABX/v5.45/packs/Microchip/PIC16Fxxx_DFP/1.2.33/xc8\pic\include\proc\pic16f887.h: 3546: __asm("EECON2 equ 018Dh");
[; <" EECON2 equ 018Dh ;# ">
"69 ./config.h
[p x FOSC  =  HS         ]
"70
[p x WDTE  =  OFF        ]
"71
[p x PWRTE  =  ON        ]
"72
[p x MCLRE  =  OFF       ]
"73
[p x CP  =  OFF          ]
"74
[p x CPD  =  OFF         ]
"75
[p x BOREN  =  OFF       ]
"76
[p x IESO  =  OFF        ]
"77
[p x FCMEN  =  OFF       ]
"78
[p x LVP  =  OFF         ]
"81
[p x BOR4V  =  BOR40V    ]
"82
[p x WRT  =  OFF         ]
"14 ./ihm.h
[; ;./ihm.h: 14: } IHM = { dispLCD_init, dispLCD_str, dispLCD, dispLCD_num, dispLCD_clr };
[v _IHM `S138 ~T0 @X0 1 e ]
[i _IHM
:U ..
:U ..
&U _dispLCD_init
&U _dispLCD_str
&U _dispLCD
&U _dispLCD_num
&U _dispLCD_clr
..
..
]
"28 ./eeprom.h
[; ;./eeprom.h: 28: } EEPROM = { salvar_receita, buscar_receita, deletar_receita, receita_livre, formatar_receitas };
[v _EEPROM `S139 ~T0 @X0 1 e ]
[i _EEPROM
:U ..
:U ..
&U _salvar_receita
&U _buscar_receita
&U _deletar_receita
&U _receita_livre
&U _formatar_receitas
..
..
]
[v $root$_irq `(v ~T0 @X0 0 e ]
"53 main.c
[; ;main.c: 53: void __attribute__((picinterrupt(("")))) irq(void)
[v _irq `(v ~T1 @X0 1 ef ]
"54
[; ;main.c: 54: {
{
[e :U _irq ]
[f ]
"55
[; ;main.c: 55:     INTCONbits.GIE = 0;
[e = . . _INTCONbits 0 7 -> -> 0 `i `uc ]
"56
[; ;main.c: 56:     if(PIR1bits.TMR1IF && PIE1bits.TMR1IE)
[e $ ! && != -> . . _PIR1bits 0 0 `i -> 0 `i != -> . . _PIE1bits 0 0 `i -> 0 `i 141  ]
"57
[; ;main.c: 57:     {
{
"58
[; ;main.c: 58:         PIR1bits.TMR1IF = 0;
[e = . . _PIR1bits 0 0 -> -> 0 `i `uc ]
"60
[; ;main.c: 60:         intt1_1ms();
[e ( _intt1_1ms ..  ]
"61
[; ;main.c: 61:     }
}
[e :U 141 ]
"62
[; ;main.c: 62:     INTCONbits.GIE = 1;
[e = . . _INTCONbits 0 7 -> -> 1 `i `uc ]
"63
[; ;main.c: 63: }
[e :UE 140 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"66
[; ;main.c: 66: void main(void)
[v _main `(v ~T0 @X0 1 ef ]
"67
[; ;main.c: 67: {
{
[e :U _main ]
[f ]
"68
[; ;main.c: 68:     dispLCD_init();
[e ( _dispLCD_init ..  ]
"69
[; ;main.c: 69:     teclado_init();
[e ( _teclado_init ..  ]
"70
[; ;main.c: 70:     timer1_init();
[e ( _timer1_init ..  ]
"73
[; ;main.c: 73:     char tecla = 0;
[v _tecla `uc ~T0 @X0 1 a ]
[e = _tecla -> -> 0 `i `uc ]
"74
[; ;main.c: 74:     char estado = 0;
[v _estado `uc ~T0 @X0 1 a ]
[e = _estado -> -> 0 `i `uc ]
"75
[; ;main.c: 75:     char atuador;
[v _atuador `uc ~T0 @X0 1 a ]
"76
[; ;main.c: 76:     char vetor_aux[16];
[v _vetor_aux `uc ~T0 @X0 -> 16 `i a ]
"77
[; ;main.c: 77:     char init_cond = 0;
[v _init_cond `uc ~T0 @X0 1 a ]
[e = _init_cond -> -> 0 `i `uc ]
"78
[; ;main.c: 78:     char *pt;
[v _pt `*uc ~T0 @X0 1 a ]
"80
[; ;main.c: 80:     char contPassos = 0;
[v _contPassos `uc ~T0 @X0 1 a ]
[e = _contPassos -> -> 0 `i `uc ]
[v F1460 `uc ~T0 @X0 -> -> 1 `i `ux s ]
[i F1460
:U ..
"81
[; ;main.c: 81:     char vetorIn[1] = { 0 };
-> -> 0 `i `uc
..
]
[v _vetorIn `uc ~T0 @X0 -> -> 1 `i `ux a ]
[e = _vetorIn F1460 ]
[v F1462 `uc ~T0 @X0 -> -> 1 `i `ux s ]
[i F1462
:U ..
"82
[; ;main.c: 82:     char vetorOut[1] = { 0 };
-> -> 0 `i `uc
..
]
[v _vetorOut `uc ~T0 @X0 -> -> 1 `i `ux a ]
[e = _vetorOut F1462 ]
"83
[; ;main.c: 83:     initSerialIO( vetorIn, vetorOut, 1 );
[e ( _initSerialIO (3 , , &U _vetorIn &U _vetorOut -> -> 1 `i `uc ]
"84
[; ;main.c: 84:     char meAtuadores = -1;
[v _meAtuadores `uc ~T0 @X0 1 a ]
[e = _meAtuadores -> -U -> 1 `i `uc ]
"85
[; ;main.c: 85:     char auxPasso = 0;
[v _auxPasso `uc ~T0 @X0 1 a ]
[e = _auxPasso -> -> 0 `i `uc ]
"86
[; ;main.c: 86:     char aux = 2;
[v _aux `uc ~T0 @X0 1 a ]
[e = _aux -> -> 2 `i `uc ]
"87
[; ;main.c: 87:     unsigned int num = 0;
[v _num `ui ~T0 @X0 1 a ]
[e = _num -> -> 0 `i `ui ]
"88
[; ;main.c: 88:     unsigned int ciclos = 0;
[v _ciclos `ui ~T0 @X0 1 a ]
[e = _ciclos -> -> 0 `i `ui ]
"89
[; ;main.c: 89:     char botao = 0;
[v _botao `uc ~T0 @X0 1 a ]
[e = _botao -> -> 0 `i `uc ]
"102
[; ;main.c: 102:     while(1)
[e :U 144 ]
"103
[; ;main.c: 103:     {
{
"104
[; ;main.c: 104:          switch(estado)
[e $U 147  ]
"105
[; ;main.c: 105:         {
{
"106
[; ;main.c: 106:              case 0:
[e :U 148 ]
"107
[; ;main.c: 107:                             for(char i = 0; i <= 3; i++)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ <= -> _i `i -> 3 `i 149  ]
[e $U 150  ]
[e :U 149 ]
"108
[; ;main.c: 108:                             {
{
"109
[; ;main.c: 109:                                 for(char j = 0; j <= 19; j++)
{
[v _j `uc ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `uc ]
[e $ <= -> _j `i -> 19 `i 152  ]
[e $U 153  ]
[e :U 152 ]
"110
[; ;main.c: 110:                                 {
{
"111
[; ;main.c: 111:                                     IHM.printpos(i, j, "\377");
[e ( *U . _IHM 2 (3 , , -> _i `uc -> _j `uc :s 1C ]
"112
[; ;main.c: 112:                                     delay(10);
[e ( _delay (1 -> -> 10 `i `ui ]
"113
[; ;main.c: 113:                                 }
}
[e ++ _j -> -> 1 `i `uc ]
[e $ <= -> _j `i -> 19 `i 152  ]
[e :U 153 ]
}
"114
[; ;main.c: 114:                             }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ <= -> _i `i -> 3 `i 149  ]
[e :U 150 ]
}
"116
[; ;main.c: 116:                             for(char i = 0; i <= 3; i++)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ <= -> _i `i -> 3 `i 155  ]
[e $U 156  ]
[e :U 155 ]
"117
[; ;main.c: 117:                             {
{
"118
[; ;main.c: 118:                                 for(char j = 0; j <= 19; j++)
{
[v _j `uc ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `uc ]
[e $ <= -> _j `i -> 19 `i 158  ]
[e $U 159  ]
[e :U 158 ]
"119
[; ;main.c: 119:                                 {
{
"120
[; ;main.c: 120:                                     IHM.printpos(i, j, " ");
[e ( *U . _IHM 2 (3 , , -> _i `uc -> _j `uc :s 2C ]
"121
[; ;main.c: 121:                                     delay(10);
[e ( _delay (1 -> -> 10 `i `ui ]
"122
[; ;main.c: 122:                                 }
}
[e ++ _j -> -> 1 `i `uc ]
[e $ <= -> _j `i -> 19 `i 158  ]
[e :U 159 ]
}
"123
[; ;main.c: 123:                             }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ <= -> _i `i -> 3 `i 155  ]
[e :U 156 ]
}
"124
[; ;main.c: 124:                             estado = 1;
[e = _estado -> -> 1 `i `uc ]
"125
[; ;main.c: 125:                             break;
[e $U 146  ]
"127
[; ;main.c: 127:             case 1:
[e :U 161 ]
"128
[; ;main.c: 128:                             IHM.printpos(1, 0, "      SEGGTTI       ");
[e ( *U . _IHM 2 (3 , , -> -> 1 `i `uc -> -> 0 `i `uc :s 3C ]
[v F1486 `uc ~T0 @X0 -> 20 `i s ]
[i F1486
:U ..
"130
[; ;main.c: 130:                             char lema[20] = "Mundo ao seu comando";
-> 77 `c
-> 117 `c
-> 110 `c
-> 100 `c
-> 111 `c
-> 32 `c
-> 97 `c
-> 111 `c
-> 32 `c
-> 115 `c
-> 101 `c
-> 117 `c
-> 32 `c
-> 99 `c
-> 111 `c
-> 109 `c
-> 97 `c
-> 110 `c
-> 100 `c
-> 111 `c
..
]
[v _lema `uc ~T0 @X0 -> 20 `i a ]
[e = _lema F1486 ]
"131
[; ;main.c: 131:                             char i = 0;
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
"132
[; ;main.c: 132:                             char *ptr;
[v _ptr `*uc ~T0 @X0 1 a ]
"134
[; ;main.c: 134:                             for(ptr = lema; *ptr != 0; ptr++)
{
[e = _ptr &U _lema ]
[e $U 165  ]
[e :U 162 ]
"135
[; ;main.c: 135:                             {
{
"136
[; ;main.c: 136:                                 dispLCD_lincol( 2, i );
[e ( _dispLCD_lincol (2 , -> -> 2 `i `uc -> _i `uc ]
"137
[; ;main.c: 137:                                 dispLCD_dataReg( *ptr );
[e ( _dispLCD_dataReg (1 -> *U _ptr `uc ]
"138
[; ;main.c: 138:                                 i++;
[e ++ _i -> -> 1 `i `uc ]
"139
[; ;main.c: 139:                                 delay(50);
[e ( _delay (1 -> -> 50 `i `ui ]
"140
[; ;main.c: 140:                             }
}
[e ++ _ptr * -> -> 1 `i `x -> -> # *U _ptr `i `x ]
[e :U 165 ]
[e $ != -> *U _ptr `i -> 0 `i 162  ]
[e :U 163 ]
}
"142
[; ;main.c: 142:                             setT1(1500);
[e ( _setT1 (1 -> -> -> 1500 `i `l `ul ]
"143
[; ;main.c: 143:                             estado = 2;
[e = _estado -> -> 2 `i `uc ]
"144
[; ;main.c: 144:                             break;
[e $U 146  ]
"146
[; ;main.c: 146:              case 2:
[e :U 166 ]
"147
[; ;main.c: 147:                             if(!statusT1())
[e $ ! ! != ( _statusT1 ..  -> -> -> 0 `i `l `ul 167  ]
"148
[; ;main.c: 148:                                 estado = 8;
[e = _estado -> -> 8 `i `uc ]
[e :U 167 ]
"149
[; ;main.c: 149:                             break;
[e $U 146  ]
"166
[; ;main.c: 166:              case 8:
[e :U 168 ]
"167
[; ;main.c: 167:                             init_atuadores();
[e ( _init_atuadores ..  ]
"168
[; ;main.c: 168:                             IHM.print("1: INSERIR SEQUENCIA\n"
[e ( *U . _IHM 1 (1 :s 4C ]
"172
[; ;main.c: 172:                             setT1(1000);
[e ( _setT1 (1 -> -> -> 1000 `i `l `ul ]
"173
[; ;main.c: 173:                             estado = 9;
[e = _estado -> -> 9 `i `uc ]
"174
[; ;main.c: 174:                             break;
[e $U 146  ]
"176
[; ;main.c: 176:             case 9:
[e :U 169 ]
"177
[; ;main.c: 177:                             if(!statusT1())
[e $ ! ! != ( _statusT1 ..  -> -> -> 0 `i `l `ul 170  ]
"178
[; ;main.c: 178:                                 estado = 71;
[e = _estado -> -> 71 `i `uc ]
[e :U 170 ]
"179
[; ;main.c: 179:                             break;
[e $U 146  ]
"181
[; ;main.c: 181:             case 71:
[e :U 171 ]
"182
[; ;main.c: 182:                             tecla = teclado_borda();
[e = _tecla -> ( _teclado_borda ..  `uc ]
"183
[; ;main.c: 183:                             switch(tecla)
[e $U 173  ]
"184
[; ;main.c: 184:                             {
{
"185
[; ;main.c: 185:                                 case '1': estado = 3; break;
[e :U 174 ]
[e = _estado -> -> 3 `i `uc ]
[e $U 172  ]
"186
[; ;main.c: 186:                                 case '2': estado = 72; break;
[e :U 175 ]
[e = _estado -> -> 72 `i `uc ]
[e $U 172  ]
"187
[; ;main.c: 187:                                 case '3': break;
[e :U 176 ]
[e $U 172  ]
"189
[; ;main.c: 189:                             }
}
[e $U 172  ]
[e :U 173 ]
[e [\ -> _tecla `i , $ -> -> 49 `ui `i 174
 , $ -> -> 50 `ui `i 175
 , $ -> -> 51 `ui `i 176
 172 ]
[e :U 172 ]
"190
[; ;main.c: 190:                             break;
[e $U 146  ]
"263
[; ;main.c: 263:              case 72:
[e :U 177 ]
"264
[; ;main.c: 264:                             IHM.clr();
[e ( *U . _IHM 4 ..  ]
"265
[; ;main.c: 265:                             IHM.print(" ESCOLHA A MEMORIA \n"
[e ( *U . _IHM 1 (1 :s 5C ]
"269
[; ;main.c: 269:                             estado = 73;
[e = _estado -> -> 73 `i `uc ]
"271
[; ;main.c: 271:              case 73:
[e :U 178 ]
"272
[; ;main.c: 272:                             tecla = teclado_borda();
[e = _tecla -> ( _teclado_borda ..  `uc ]
"273
[; ;main.c: 273:                             switch(tecla)
[e $U 180  ]
"274
[; ;main.c: 274:                             {
{
"275
[; ;main.c: 275:                                 case '0':
[e :U 181 ]
"276
[; ;main.c: 276:                                 case '1':
[e :U 182 ]
"277
[; ;main.c: 277:                                 case '2':
[e :U 183 ]
"278
[; ;main.c: 278:                                 case '3':
[e :U 184 ]
"279
[; ;main.c: 279:                                 case '4':
[e :U 185 ]
"280
[; ;main.c: 280:                                 case '5':
[e :U 186 ]
"281
[; ;main.c: 281:                                 case '6':
[e :U 187 ]
"282
[; ;main.c: 282:                                 case '7':
[e :U 188 ]
"283
[; ;main.c: 283:                                 case '8':
[e :U 189 ]
"284
[; ;main.c: 284:                                 case '9':
[e :U 190 ]
"285
[; ;main.c: 285:                                            buscar_dado(10, tecla % 0x30, &init_cond);
[e ( _buscar_dado (3 , , -> -> 10 `i `uc -> % -> _tecla `i -> 48 `i `uc -> &U _init_cond `*uc ]
"286
[; ;main.c: 286:                                            manipula_atuadores_init(init_cond);
[e ( _manipula_atuadores_init (1 _init_cond ]
"288
[; ;main.c: 288:                                            EEPROM.buscar(tecla % 0x30, vetor_aux);
[e ( *U . _EEPROM 1 (2 , -> % -> _tecla `i -> 48 `i `uc -> &U _vetor_aux `*uc ]
"289
[; ;main.c: 289:                                            pt = vetor_aux;
[e = _pt &U _vetor_aux ]
"291
[; ;main.c: 291:                                            if(*pt == 0xFF)
[e $ ! == -> *U _pt `i -> 255 `i 191  ]
"292
[; ;main.c: 292:                                            {
{
"293
[; ;main.c: 293:                                                EEPROM.deletar(tecla % 0x30);
[e ( *U . _EEPROM 2 (1 -> % -> _tecla `i -> 48 `i `uc ]
"294
[; ;main.c: 294:                                                vetor_aux[0] = 0;
[e = *U + &U _vetor_aux * -> -> -> 0 `i `ui `ux -> -> # *U &U _vetor_aux `ui `ux -> -> 0 `i `uc ]
"295
[; ;main.c: 295:                                            }
}
[e :U 191 ]
"298
[; ;main.c: 298:                                            for(char *ptr = vetor_aux; *ptr != 0; ptr++)
{
[v _ptr `*uc ~T0 @X0 1 a ]
[e = _ptr &U _vetor_aux ]
[e $U 195  ]
[e :U 192 ]
"299
[; ;main.c: 299:                                            {
{
"300
[; ;main.c: 300:                                                 if(*ptr & 0x80)
[e $ ! != & -> *U _ptr `i -> 128 `i -> 0 `i 196  ]
"301
[; ;main.c: 301:                                                 {
{
"302
[; ;main.c: 302:                                                     fifo_add_tempo(*ptr);
[e ( _fifo_add_tempo (1 *U _ptr ]
"303
[; ;main.c: 303:                                                 }
}
[e $U 197  ]
"304
[; ;main.c: 304:                                                 else
[e :U 196 ]
"305
[; ;main.c: 305:                                                 {
{
"306
[; ;main.c: 306:                                                     switch( *ptr )
[e $U 199  ]
"307
[; ;main.c: 307:                                                     {
{
"308
[; ;main.c: 308:                                                         case 'A':
[e :U 200 ]
"309
[; ;main.c: 309:                                                         case 'B':
[e :U 201 ]
"310
[; ;main.c: 310:                                                         case 'C':
[e :U 202 ]
"311
[; ;main.c: 311:                                                         case 'D':
[e :U 203 ]
"312
[; ;main.c: 312:                                                         case 'a':
[e :U 204 ]
"313
[; ;main.c: 313:                                                         case 'b':
[e :U 205 ]
"314
[; ;main.c: 314:                                                         case 'c':
[e :U 206 ]
"315
[; ;main.c: 315:                                                         case 'd':
[e :U 207 ]
"316
[; ;main.c: 316:                                                                 *ptr &= ~0x20;
[e =& *U _ptr -> ~ -> 32 `i `uc ]
"317
[; ;main.c: 317:                                                                 break;
[e $U 198  ]
"318
[; ;main.c: 318:                                                     }
}
[e $U 198  ]
[e :U 199 ]
[e [\ -> *U _ptr `i , $ -> -> 65 `ui `i 200
 , $ -> -> 66 `ui `i 201
 , $ -> -> 67 `ui `i 202
 , $ -> -> 68 `ui `i 203
 , $ -> -> 97 `ui `i 204
 , $ -> -> 98 `ui `i 205
 , $ -> -> 99 `ui `i 206
 , $ -> -> 100 `ui `i 207
 198 ]
[e :U 198 ]
"319
[; ;main.c: 319:                                                     alt_atuador(*ptr);
[e ( _alt_atuador (1 *U _ptr ]
"320
[; ;main.c: 320:                                                     fifo_add( ler_atuador(*ptr) ? *ptr : *ptr|0x20 );
[e ( _fifo_add (1 -> ? != -> ( _ler_atuador (1 *U _ptr `i -> 0 `i : -> *U _ptr `i | -> *U _ptr `i -> 32 `i `uc ]
"321
[; ;main.c: 321:                                                 }
}
[e :U 197 ]
"322
[; ;main.c: 322:                                                 fifo_print();
[e ( _fifo_print ..  ]
"323
[; ;main.c: 323:                                            }
}
[e ++ _ptr * -> -> 1 `i `x -> -> # *U _ptr `i `x ]
[e :U 195 ]
[e $ != -> *U _ptr `i -> 0 `i 192  ]
[e :U 193 ]
}
"325
[; ;main.c: 325:                                            dispLCD_clr();
[e ( _dispLCD_clr ..  ]
"326
[; ;main.c: 326:                                            estado = 16;
[e = _estado -> -> 16 `i `uc ]
"327
[; ;main.c: 327:                                            break;
[e $U 179  ]
"329
[; ;main.c: 329:                                 case '*': estado = 8; break;
[e :U 208 ]
[e = _estado -> -> 8 `i `uc ]
[e $U 179  ]
"330
[; ;main.c: 330:                             }
}
[e $U 179  ]
[e :U 180 ]
[e [\ -> _tecla `i , $ -> -> 48 `ui `i 181
 , $ -> -> 49 `ui `i 182
 , $ -> -> 50 `ui `i 183
 , $ -> -> 51 `ui `i 184
 , $ -> -> 52 `ui `i 185
 , $ -> -> 53 `ui `i 186
 , $ -> -> 54 `ui `i 187
 , $ -> -> 55 `ui `i 188
 , $ -> -> 56 `ui `i 189
 , $ -> -> 57 `ui `i 190
 , $ -> -> 42 `ui `i 208
 179 ]
[e :U 179 ]
"331
[; ;main.c: 331:                             break;
[e $U 146  ]
"333
[; ;main.c: 333:              case 3:
[e :U 209 ]
"334
[; ;main.c: 334:                             IHM.clr();
[e ( *U . _IHM 4 ..  ]
"335
[; ;main.c: 335:                             IHM.printpos(0, 0, "   AJUSTE O INICIO  ");
[e ( *U . _IHM 2 (3 , , -> -> 0 `i `uc -> -> 0 `i `uc :s 6C ]
"336
[; ;main.c: 336:                             IHM.printpos(1, 0, "     DO SISTEMA     ");
[e ( *U . _IHM 2 (3 , , -> -> 1 `i `uc -> -> 0 `i `uc :s 7C ]
"337
[; ;main.c: 337:                             estado = 6;
[e = _estado -> -> 6 `i `uc ]
"338
[; ;main.c: 338:                             break;
[e $U 146  ]
"340
[; ;main.c: 340:             case 6:
[e :U 210 ]
"341
[; ;main.c: 341:                             IHM.printpos(3,0,"   A   B   C   D    ");
[e ( *U . _IHM 2 (3 , , -> -> 3 `i `uc -> -> 0 `i `uc :s 8C ]
"342
[; ;main.c: 342:                             dispLCD_lincol(3, 4); dispLCD_dataReg(ler_atuador('A') ? '+' : '-');
[e ( _dispLCD_lincol (2 , -> -> 3 `i `uc -> -> 4 `i `uc ]
[e ( _dispLCD_dataReg (1 -> ? != -> ( _ler_atuador (1 -> -> 65 `ui `uc `i -> 0 `i : -> 43 `ui -> 45 `ui `uc ]
"343
[; ;main.c: 343:                             dispLCD_lincol(3, 8);dispLCD_dataReg(ler_atuador('B') ? '+' : '-');
[e ( _dispLCD_lincol (2 , -> -> 3 `i `uc -> -> 8 `i `uc ]
[e ( _dispLCD_dataReg (1 -> ? != -> ( _ler_atuador (1 -> -> 66 `ui `uc `i -> 0 `i : -> 43 `ui -> 45 `ui `uc ]
"344
[; ;main.c: 344:                             dispLCD_lincol(3, 12);dispLCD_dataReg(ler_atuador('C') ? '+' : '-');
[e ( _dispLCD_lincol (2 , -> -> 3 `i `uc -> -> 12 `i `uc ]
[e ( _dispLCD_dataReg (1 -> ? != -> ( _ler_atuador (1 -> -> 67 `ui `uc `i -> 0 `i : -> 43 `ui -> 45 `ui `uc ]
"345
[; ;main.c: 345:                             dispLCD_lincol(3, 16);dispLCD_dataReg(ler_atuador('D') ? '+' : '-');
[e ( _dispLCD_lincol (2 , -> -> 3 `i `uc -> -> 16 `i `uc ]
[e ( _dispLCD_dataReg (1 -> ? != -> ( _ler_atuador (1 -> -> 68 `ui `uc `i -> 0 `i : -> 43 `ui -> 45 `ui `uc ]
"346
[; ;main.c: 346:                             estado = 7;
[e = _estado -> -> 7 `i `uc ]
"347
[; ;main.c: 347:                             break;
[e $U 146  ]
"349
[; ;main.c: 349:             case 7:
[e :U 211 ]
"350
[; ;main.c: 350:                             tecla = teclado_borda();
[e = _tecla -> ( _teclado_borda ..  `uc ]
"351
[; ;main.c: 351:                             switch(tecla)
[e $U 213  ]
"352
[; ;main.c: 352:                             {
{
"353
[; ;main.c: 353:                                 case 'A': alt_atuador(tecla); dispLCD_lincol(3, 4); dispLCD_dataReg(ler_atuador('A') ? '+' : '-'); break;
[e :U 214 ]
[e ( _alt_atuador (1 _tecla ]
[e ( _dispLCD_lincol (2 , -> -> 3 `i `uc -> -> 4 `i `uc ]
[e ( _dispLCD_dataReg (1 -> ? != -> ( _ler_atuador (1 -> -> 65 `ui `uc `i -> 0 `i : -> 43 `ui -> 45 `ui `uc ]
[e $U 212  ]
"354
[; ;main.c: 354:                                 case 'B': alt_atuador(tecla); dispLCD_lincol(3, 8); dispLCD_dataReg(ler_atuador('B') ? '+' : '-'); break;
[e :U 215 ]
[e ( _alt_atuador (1 _tecla ]
[e ( _dispLCD_lincol (2 , -> -> 3 `i `uc -> -> 8 `i `uc ]
[e ( _dispLCD_dataReg (1 -> ? != -> ( _ler_atuador (1 -> -> 66 `ui `uc `i -> 0 `i : -> 43 `ui -> 45 `ui `uc ]
[e $U 212  ]
"355
[; ;main.c: 355:                                 case 'C': alt_atuador(tecla); dispLCD_lincol(3,12); dispLCD_dataReg(ler_atuador('C') ? '+' : '-'); break;
[e :U 216 ]
[e ( _alt_atuador (1 _tecla ]
[e ( _dispLCD_lincol (2 , -> -> 3 `i `uc -> -> 12 `i `uc ]
[e ( _dispLCD_dataReg (1 -> ? != -> ( _ler_atuador (1 -> -> 67 `ui `uc `i -> 0 `i : -> 43 `ui -> 45 `ui `uc ]
[e $U 212  ]
"356
[; ;main.c: 356:                                 case 'D': alt_atuador(tecla); dispLCD_lincol(3,16); dispLCD_dataReg(ler_atuador('D') ? '+' : '-'); break;
[e :U 217 ]
[e ( _alt_atuador (1 _tecla ]
[e ( _dispLCD_lincol (2 , -> -> 3 `i `uc -> -> 16 `i `uc ]
[e ( _dispLCD_dataReg (1 -> ? != -> ( _ler_atuador (1 -> -> 68 `ui `uc `i -> 0 `i : -> 43 `ui -> 45 `ui `uc ]
[e $U 212  ]
"357
[; ;main.c: 357:                                 case '#': estado = 10; break;
[e :U 218 ]
[e = _estado -> -> 10 `i `uc ]
[e $U 212  ]
"358
[; ;main.c: 358:                                 case '*': estado = 8; break;
[e :U 219 ]
[e = _estado -> -> 8 `i `uc ]
[e $U 212  ]
"359
[; ;main.c: 359:                             }
}
[e $U 212  ]
[e :U 213 ]
[e [\ -> _tecla `i , $ -> -> 65 `ui `i 214
 , $ -> -> 66 `ui `i 215
 , $ -> -> 67 `ui `i 216
 , $ -> -> 68 `ui `i 217
 , $ -> -> 35 `ui `i 218
 , $ -> -> 42 `ui `i 219
 212 ]
[e :U 212 ]
"360
[; ;main.c: 360:                             break;
[e $U 146  ]
"364
[; ;main.c: 364:             case 10:
[e :U 220 ]
"365
[; ;main.c: 365:                             init_cond = salva_atuadores_init();
[e = _init_cond ( _salva_atuadores_init ..  ]
"366
[; ;main.c: 366:                             IHM.clr();
[e ( *U . _IHM 4 ..  ]
"367
[; ;main.c: 367:                             IHM.printpos(0, 0, "  INSIRA OS PASSOS  ");
[e ( *U . _IHM 2 (3 , , -> -> 0 `i `uc -> -> 0 `i `uc :s 9C ]
"368
[; ;main.c: 368:                             estado = 14;
[e = _estado -> -> 14 `i `uc ]
"369
[; ;main.c: 369:                             break;
[e $U 146  ]
"371
[; ;main.c: 371:              case 11:
[e :U 221 ]
"372
[; ;main.c: 372:                             tecla = teclado_borda();
[e = _tecla -> ( _teclado_borda ..  `uc ]
"373
[; ;main.c: 373:                             switch( tecla )
[e $U 223  ]
"374
[; ;main.c: 374:                             {
{
"375
[; ;main.c: 375:                                 case 'A':
[e :U 224 ]
"376
[; ;main.c: 376:                                 case 'B':
[e :U 225 ]
"377
[; ;main.c: 377:                                 case 'C':
[e :U 226 ]
"378
[; ;main.c: 378:                                 case 'D':
[e :U 227 ]
"379
[; ;main.c: 379:                                             if( fifo_disponivel() )
[e $ ! != -> ( _fifo_disponivel ..  `i -> 0 `i 228  ]
"380
[; ;main.c: 380:                                             {
{
"381
[; ;main.c: 381:                                                 alt_atuador(tecla);
[e ( _alt_atuador (1 _tecla ]
"382
[; ;main.c: 382:                                                 fifo_add( ler_atuador(tecla) ? tecla : tecla|0x20 );
[e ( _fifo_add (1 -> ? != -> ( _ler_atuador (1 _tecla `i -> 0 `i : -> _tecla `i | -> _tecla `i -> 32 `i `uc ]
"383
[; ;main.c: 383:                                                 estado = 16;
[e = _estado -> -> 16 `i `uc ]
"384
[; ;main.c: 384:                                             }
}
[e :U 228 ]
"385
[; ;main.c: 385:                                             break;
[e $U 222  ]
"386
[; ;main.c: 386:                                 case '6':
[e :U 229 ]
"387
[; ;main.c: 387:                                             fifo_indicePrint_inc();
[e ( _fifo_indicePrint_inc ..  ]
"388
[; ;main.c: 388:                                             estado = 16;
[e = _estado -> -> 16 `i `uc ]
"389
[; ;main.c: 389:                                             break;
[e $U 222  ]
"390
[; ;main.c: 390:                                 case '4':
[e :U 230 ]
"391
[; ;main.c: 391:                                             fifo_indicePrint_dec();
[e ( _fifo_indicePrint_dec ..  ]
"392
[; ;main.c: 392:                                             estado = 16;
[e = _estado -> -> 16 `i `uc ]
"393
[; ;main.c: 393:                                             break;
[e $U 222  ]
"395
[; ;main.c: 395:                                 case '*':
[e :U 231 ]
"396
[; ;main.c: 396:                                             if(fifo_indice() == 2 )
[e $ ! == -> ( _fifo_indice ..  `i -> 2 `i 232  ]
"397
[; ;main.c: 397:                                                 estado = 3;
[e = _estado -> -> 3 `i `uc ]
[e $U 233  ]
"398
[; ;main.c: 398:                                             else
[e :U 232 ]
"399
[; ;main.c: 399:                                             {
{
"400
[; ;main.c: 400:                                                 fifo_delete();
[e ( _fifo_delete ..  ]
"401
[; ;main.c: 401:                                                 estado = 16;
[e = _estado -> -> 16 `i `uc ]
"402
[; ;main.c: 402:                                             }
}
[e :U 233 ]
"403
[; ;main.c: 403:                                             break;
[e $U 222  ]
"405
[; ;main.c: 405:                                 case '#': estado = 74; break;
[e :U 234 ]
[e = _estado -> -> 74 `i `uc ]
[e $U 222  ]
"407
[; ;main.c: 407:                                 case '0': estado = 41; break;
[e :U 235 ]
[e = _estado -> -> 41 `i `uc ]
[e $U 222  ]
"409
[; ;main.c: 409:                                 case '9': estado = 90; break;
[e :U 236 ]
[e = _estado -> -> 90 `i `uc ]
[e $U 222  ]
"410
[; ;main.c: 410:                             }
}
[e $U 222  ]
[e :U 223 ]
[e [\ -> _tecla `i , $ -> -> 65 `ui `i 224
 , $ -> -> 66 `ui `i 225
 , $ -> -> 67 `ui `i 226
 , $ -> -> 68 `ui `i 227
 , $ -> -> 54 `ui `i 229
 , $ -> -> 52 `ui `i 230
 , $ -> -> 42 `ui `i 231
 , $ -> -> 35 `ui `i 234
 , $ -> -> 48 `ui `i 235
 , $ -> -> 57 `ui `i 236
 222 ]
[e :U 222 ]
"411
[; ;main.c: 411:                             break;
[e $U 146  ]
"413
[; ;main.c: 413:              case 16:
[e :U 237 ]
"414
[; ;main.c: 414:                             fifo_print();
[e ( _fifo_print ..  ]
"415
[; ;main.c: 415:                             estado = 14;
[e = _estado -> -> 14 `i `uc ]
"416
[; ;main.c: 416:                             break;
[e $U 146  ]
"418
[; ;main.c: 418:              case 14:
[e :U 238 ]
"419
[; ;main.c: 419:                             IHM.printpos(3,0,"<  /  >");
[e ( *U . _IHM 2 (3 , , -> -> 3 `i `uc -> -> 0 `i `uc :s 10C ]
"420
[; ;main.c: 420:                             IHM.printv(3, 1,( fifo_indice()-2 ), 2);
[e ( *U . _IHM 3 (4 , , , -> -> 3 `i `uc -> -> 1 `i `uc - -> ( _fifo_indice ..  `i -> 2 `i -> -> 2 `i `uc ]
"421
[; ;main.c: 421:                             IHM.printv(3, 4,( fifo_tam()-2 ), 2);
[e ( *U . _IHM 3 (4 , , , -> -> 3 `i `uc -> -> 4 `i `uc - -> ( _fifo_tam ..  `i -> 2 `i -> -> 2 `i `uc ]
"422
[; ;main.c: 422:                             estado = 11;
[e = _estado -> -> 11 `i `uc ]
"423
[; ;main.c: 423:                             break;
[e $U 146  ]
"425
[; ;main.c: 425:              case 30:
[e :U 239 ]
"427
[; ;main.c: 427:                             estado = 70;
[e = _estado -> -> 70 `i `uc ]
"428
[; ;main.c: 428:                             meAtuadores = 1;
[e = _meAtuadores -> -> 1 `i `uc ]
"429
[; ;main.c: 429:                             break;
[e $U 146  ]
"431
[; ;main.c: 431:              case 70:
[e :U 240 ]
"432
[; ;main.c: 432:                             if( meAtuadores == 3 && botao != 2 )
[e $ ! && == -> _meAtuadores `i -> 3 `i != -> _botao `i -> 2 `i 241  ]
"433
[; ;main.c: 433:                             {
{
"434
[; ;main.c: 434:                                 IHM.printpos(0, 0, "       [    ]       ");
[e ( *U . _IHM 2 (3 , , -> -> 0 `i `uc -> -> 0 `i `uc :s 11C ]
"435
[; ;main.c: 435:                                 printExec(1, -1);
[e ( _printExec (2 , -> -> 1 `i `uc -> -U -> 1 `i `uc ]
"436
[; ;main.c: 436:                                 printExec(9, 0);
[e ( _printExec (2 , -> -> 9 `i `uc -> -> 0 `i `uc ]
"437
[; ;main.c: 437:                                 printExec(14, 1);
[e ( _printExec (2 , -> -> 14 `i `uc -> -> 1 `i `uc ]
"438
[; ;main.c: 438:                                 IHM.printpos(2, 0, "<  /  > c:          ");
[e ( *U . _IHM 2 (3 , , -> -> 2 `i `uc -> -> 0 `i `uc :s 12C ]
"439
[; ;main.c: 439:                                 IHM.printv(2, 4,( fifo_indice() - 2 ), 2);
[e ( *U . _IHM 3 (4 , , , -> -> 2 `i `uc -> -> 4 `i `uc - -> ( _fifo_indice ..  `i -> 2 `i -> -> 2 `i `uc ]
"440
[; ;main.c: 440:                                 IHM.printv(2, 1, ( getIndicePassos() - 1 ), 2);
[e ( *U . _IHM 3 (4 , , , -> -> 2 `i `uc -> -> 1 `i `uc - -> ( _getIndicePassos ..  `i -> 1 `i -> -> 2 `i `uc ]
"441
[; ;main.c: 441:                                 IHM.printv(2, 11, ( getContCiclos() + 1 ), 5);
[e ( *U . _IHM 3 (4 , , , -> -> 2 `i `uc -> -> 11 `i `uc -> + ( _getContCiclos ..  -> -> 1 `i `ui `i -> -> 5 `i `uc ]
"443
[; ;main.c: 443:                             }
}
[e :U 241 ]
"444
[; ;main.c: 444:                             if(meAtuadores == 0)
[e $ ! == -> _meAtuadores `i -> 0 `i 242  ]
"445
[; ;main.c: 445:                             {
{
"446
[; ;main.c: 446:                                 estado = 16;
[e = _estado -> -> 16 `i `uc ]
"447
[; ;main.c: 447:                                 IHM.clr();
[e ( *U . _IHM 4 ..  ]
"448
[; ;main.c: 448:                             }
}
[e :U 242 ]
"449
[; ;main.c: 449:                             tecla = teclado_borda();
[e = _tecla -> ( _teclado_borda ..  `uc ]
"450
[; ;main.c: 450:                             switch(tecla)
[e $U 244  ]
"451
[; ;main.c: 451:                             {
{
"452
[; ;main.c: 452:                                 case '#':
[e :U 245 ]
"453
[; ;main.c: 453:                                     botao = 1;
[e = _botao -> -> 1 `i `uc ]
"454
[; ;main.c: 454:                                     break;
[e $U 243  ]
"456
[; ;main.c: 456:                                 case '5':
[e :U 246 ]
"457
[; ;main.c: 457:                                     botao = 2;
[e = _botao -> -> 2 `i `uc ]
"458
[; ;main.c: 458:                                     break;
[e $U 243  ]
"460
[; ;main.c: 460:                                 case '0':
[e :U 247 ]
"461
[; ;main.c: 461:                                     botao = 0;
[e = _botao -> -> 0 `i `uc ]
"462
[; ;main.c: 462:                                     break;
[e $U 243  ]
"464
[; ;main.c: 464:                                 case '1':
[e :U 248 ]
"465
[; ;main.c: 465:                                     if(botao == 2)
[e $ ! == -> _botao `i -> 2 `i 249  ]
"466
[; ;main.c: 466:                                         botao = 3;
[e = _botao -> -> 3 `i `uc ]
[e :U 249 ]
"467
[; ;main.c: 467:                                     break;
[e $U 243  ]
"468
[; ;main.c: 468:                             }
}
[e $U 243  ]
[e :U 244 ]
[e [\ -> _tecla `i , $ -> -> 35 `ui `i 245
 , $ -> -> 53 `ui `i 246
 , $ -> -> 48 `ui `i 247
 , $ -> -> 49 `ui `i 248
 243 ]
[e :U 243 ]
"469
[; ;main.c: 469:                             break;
[e $U 146  ]
"471
[; ;main.c: 471:              case 40:
[e :U 250 ]
"472
[; ;main.c: 472:                             tecla = teclado_borda();
[e = _tecla -> ( _teclado_borda ..  `uc ]
"473
[; ;main.c: 473:                             if(tecla >= '0' && tecla <= '9')
[e $ ! && >= -> _tecla `ui -> 48 `ui <= -> _tecla `ui -> 57 `ui 251  ]
"474
[; ;main.c: 474:                             {
{
"475
[; ;main.c: 475:                                 dignum_conc(tecla, &num);
[e ( _dignum_conc (2 , _tecla &U _num ]
"476
[; ;main.c: 476:                                 if(num > 120)
[e $ ! > _num -> -> 120 `i `ui 252  ]
"477
[; ;main.c: 477:                                     num = 120;
[e = _num -> -> 120 `i `ui ]
[e :U 252 ]
"478
[; ;main.c: 478:                                 estado = 41;
[e = _estado -> -> 41 `i `uc ]
"479
[; ;main.c: 479:                             }
}
[e :U 251 ]
"480
[; ;main.c: 480:                             if(tecla == '*')
[e $ ! == -> _tecla `ui -> 42 `ui 253  ]
"481
[; ;main.c: 481:                             {
{
"482
[; ;main.c: 482:                                 dignum_apagar(&num);
[e ( _dignum_apagar (1 &U _num ]
"483
[; ;main.c: 483:                                 estado = 41;
[e = _estado -> -> 41 `i `uc ]
"484
[; ;main.c: 484:                             }
}
[e :U 253 ]
"485
[; ;main.c: 485:                             if(tecla == '#')
[e $ ! == -> _tecla `ui -> 35 `ui 254  ]
"486
[; ;main.c: 486:                                 estado = 42;
[e = _estado -> -> 42 `i `uc ]
[e :U 254 ]
"487
[; ;main.c: 487:                             break;
[e $U 146  ]
"489
[; ;main.c: 489:              case 41:
[e :U 255 ]
"491
[; ;main.c: 491:                             IHM.printpos(2, 0, "config tempo:      s");
[e ( *U . _IHM 2 (3 , , -> -> 2 `i `uc -> -> 0 `i `uc :s 13C ]
"492
[; ;main.c: 492:                             IHM.printv(2, 15, num, 3);
[e ( *U . _IHM 3 (4 , , , -> -> 2 `i `uc -> -> 15 `i `uc -> _num `i -> -> 3 `i `uc ]
"493
[; ;main.c: 493:                             estado = 40;
[e = _estado -> -> 40 `i `uc ]
"494
[; ;main.c: 494:                             break;
[e $U 146  ]
"496
[; ;main.c: 496:              case 42:
[e :U 256 ]
"497
[; ;main.c: 497:                             fifo_add_tempo(num);
[e ( _fifo_add_tempo (1 -> _num `uc ]
"498
[; ;main.c: 498:                             IHM.clr();
[e ( *U . _IHM 4 ..  ]
"499
[; ;main.c: 499:                             estado = 16;
[e = _estado -> -> 16 `i `uc ]
"500
[; ;main.c: 500:                             break;
[e $U 146  ]
"530
[; ;main.c: 530:              case 52:
[e :U 257 ]
"531
[; ;main.c: 531:                             tecla = teclado_borda();
[e = _tecla -> ( _teclado_borda ..  `uc ]
"532
[; ;main.c: 532:                             if(tecla >= '0' && tecla <= '9')
[e $ ! && >= -> _tecla `ui -> 48 `ui <= -> _tecla `ui -> 57 `ui 258  ]
"533
[; ;main.c: 533:                                {
{
"534
[; ;main.c: 534:                                 dignum_conc(tecla, &ciclos);
[e ( _dignum_conc (2 , _tecla &U _ciclos ]
"535
[; ;main.c: 535:                                 if(ciclos > 10000)
[e $ ! > _ciclos -> -> 10000 `i `ui 259  ]
"536
[; ;main.c: 536:                                     ciclos = 10000;
[e = _ciclos -> -> 10000 `i `ui ]
[e :U 259 ]
"537
[; ;main.c: 537:                                 estado = 53;
[e = _estado -> -> 53 `i `uc ]
"538
[; ;main.c: 538:                                 break;
[e $U 146  ]
"539
[; ;main.c: 539:                                }
}
[e :U 258 ]
"540
[; ;main.c: 540:                             switch(tecla)
[e $U 261  ]
"541
[; ;main.c: 541:                                {
{
"542
[; ;main.c: 542:                                    case 'A':
[e :U 262 ]
"543
[; ;main.c: 543:                                    case 'B':
[e :U 263 ]
"544
[; ;main.c: 544:                                    case 'C':
[e :U 264 ]
"545
[; ;main.c: 545:                                    case 'D':
[e :U 265 ]
"546
[; ;main.c: 546:                                        dispLCD_clr();
[e ( _dispLCD_clr ..  ]
"547
[; ;main.c: 547:                                        estado = 16;
[e = _estado -> -> 16 `i `uc ]
"548
[; ;main.c: 548:                                        break;
[e $U 260  ]
"549
[; ;main.c: 549:                                    case '#':
[e :U 266 ]
"550
[; ;main.c: 550:                                        estado = 54;
[e = _estado -> -> 54 `i `uc ]
"551
[; ;main.c: 551:                                        break;
[e $U 260  ]
"552
[; ;main.c: 552:                                    case '*':
[e :U 267 ]
"553
[; ;main.c: 553:                                        dignum_apagar(&ciclos);
[e ( _dignum_apagar (1 &U _ciclos ]
"554
[; ;main.c: 554:                                        estado = 53;
[e = _estado -> -> 53 `i `uc ]
"555
[; ;main.c: 555:                                        break;
[e $U 260  ]
"556
[; ;main.c: 556:                                }
}
[e $U 260  ]
[e :U 261 ]
[e [\ -> _tecla `i , $ -> -> 65 `ui `i 262
 , $ -> -> 66 `ui `i 263
 , $ -> -> 67 `ui `i 264
 , $ -> -> 68 `ui `i 265
 , $ -> -> 35 `ui `i 266
 , $ -> -> 42 `ui `i 267
 260 ]
[e :U 260 ]
"557
[; ;main.c: 557:                             break;
[e $U 146  ]
"559
[; ;main.c: 559:              case 53:
[e :U 268 ]
"560
[; ;main.c: 560:                             IHM.clr();
[e ( *U . _IHM 4 ..  ]
"561
[; ;main.c: 561:                             IHM.printpos(0, 0, "Ciclos:             ");
[e ( *U . _IHM 2 (3 , , -> -> 0 `i `uc -> -> 0 `i `uc :s 14C ]
"562
[; ;main.c: 562:                             IHM.printv(0, 15, ciclos, 5);
[e ( *U . _IHM 3 (4 , , , -> -> 0 `i `uc -> -> 15 `i `uc -> _ciclos `i -> -> 5 `i `uc ]
"563
[; ;main.c: 563:                             IHM.printpos(2, 0, "0 - Ciclo continuo  ");
[e ( *U . _IHM 2 (3 , , -> -> 2 `i `uc -> -> 0 `i `uc :s 15C ]
"564
[; ;main.c: 564:                             estado = 52;
[e = _estado -> -> 52 `i `uc ]
"565
[; ;main.c: 565:                             break;
[e $U 146  ]
"567
[; ;main.c: 567:              case 74:
[e :U 269 ]
"568
[; ;main.c: 568:                             IHM.print("    DESEJA SALVAR\n"
[e ( *U . _IHM 1 (1 :s 16C ]
"572
[; ;main.c: 572:                             tecla = teclado_borda();
[e = _tecla -> ( _teclado_borda ..  `uc ]
"573
[; ;main.c: 573:                             switch(tecla)
[e $U 271  ]
"574
[; ;main.c: 574:                             {
{
"575
[; ;main.c: 575:                                 case '#': estado = 75; break;
[e :U 272 ]
[e = _estado -> -> 75 `i `uc ]
[e $U 270  ]
"576
[; ;main.c: 576:                                 case '*': dispLCD_clr(); estado = 53; break;
[e :U 273 ]
[e ( _dispLCD_clr ..  ]
[e = _estado -> -> 53 `i `uc ]
[e $U 270  ]
"577
[; ;main.c: 577:                             }
}
[e $U 270  ]
[e :U 271 ]
[e [\ -> _tecla `i , $ -> -> 35 `ui `i 272
 , $ -> -> 42 `ui `i 273
 270 ]
[e :U 270 ]
"578
[; ;main.c: 578:                             break;
[e $U 146  ]
"580
[; ;main.c: 580:              case 75:
[e :U 274 ]
"581
[; ;main.c: 581:                             IHM.clr();
[e ( *U . _IHM 4 ..  ]
"582
[; ;main.c: 582:                             IHM.print(" ESCOLHA A MEMORIA\n"
[e ( *U . _IHM 1 (1 :s 17C ]
"586
[; ;main.c: 586:                             estado = 76;
[e = _estado -> -> 76 `i `uc ]
"588
[; ;main.c: 588:              case 76:
[e :U 275 ]
"589
[; ;main.c: 589:                             tecla = teclado_borda();
[e = _tecla -> ( _teclado_borda ..  `uc ]
"590
[; ;main.c: 590:                             switch(tecla)
[e $U 277  ]
"591
[; ;main.c: 591:                             {
{
"592
[; ;main.c: 592:                                 case '0':
[e :U 278 ]
"593
[; ;main.c: 593:                                 case '1':
[e :U 279 ]
"594
[; ;main.c: 594:                                 case '2':
[e :U 280 ]
"595
[; ;main.c: 595:                                 case '3':
[e :U 281 ]
"596
[; ;main.c: 596:                                 case '4':
[e :U 282 ]
"597
[; ;main.c: 597:                                 case '5':
[e :U 283 ]
"598
[; ;main.c: 598:                                 case '6':
[e :U 284 ]
"599
[; ;main.c: 599:                                 case '7':
[e :U 285 ]
"600
[; ;main.c: 600:                                 case '8':
[e :U 286 ]
"601
[; ;main.c: 601:                                 case '9':
[e :U 287 ]
"602
[; ;main.c: 602:                                            salvar_dado(10, tecla % 0x30, init_cond);
[e ( _salvar_dado (3 , , -> -> 10 `i `uc -> % -> _tecla `i -> 48 `i `uc -> _init_cond `uc ]
"603
[; ;main.c: 603:                                            EEPROM.salvar(tecla % 0x30, fifo_adrs() + 2);
[e ( *U . _EEPROM 0 (2 , -> % -> _tecla `i -> 48 `i `uc -> + ( _fifo_adrs ..  * -> -> 2 `i `x -> -> # *U ( _fifo_adrs ..  `i `x `*uc ]
"604
[; ;main.c: 604:                                            estado = 77;
[e = _estado -> -> 77 `i `uc ]
"605
[; ;main.c: 605:                                            break;
[e $U 276  ]
"607
[; ;main.c: 607:                                 case '*': IHM.clr(); estado = 74; break;
[e :U 288 ]
[e ( *U . _IHM 4 ..  ]
[e = _estado -> -> 74 `i `uc ]
[e $U 276  ]
"608
[; ;main.c: 608:                             }
}
[e $U 276  ]
[e :U 277 ]
[e [\ -> _tecla `i , $ -> -> 48 `ui `i 278
 , $ -> -> 49 `ui `i 279
 , $ -> -> 50 `ui `i 280
 , $ -> -> 51 `ui `i 281
 , $ -> -> 52 `ui `i 282
 , $ -> -> 53 `ui `i 283
 , $ -> -> 54 `ui `i 284
 , $ -> -> 55 `ui `i 285
 , $ -> -> 56 `ui `i 286
 , $ -> -> 57 `ui `i 287
 , $ -> -> 42 `ui `i 288
 276 ]
[e :U 276 ]
"609
[; ;main.c: 609:                             break;
[e $U 146  ]
"611
[; ;main.c: 611:              case 77:
[e :U 289 ]
"612
[; ;main.c: 612:                             IHM.clr();
[e ( *U . _IHM 4 ..  ]
"613
[; ;main.c: 613:                             for(char i = 0; i <= 3; i++)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ <= -> _i `i -> 3 `i 290  ]
[e $U 291  ]
[e :U 290 ]
"614
[; ;main.c: 614:                             {
{
"615
[; ;main.c: 615:                                 for(char j = 0; j <= 19; j++)
{
[v _j `uc ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `uc ]
[e $ <= -> _j `i -> 19 `i 293  ]
[e $U 294  ]
[e :U 293 ]
"616
[; ;main.c: 616:                                 {
{
"617
[; ;main.c: 617:                                     IHM.printpos(i, j, "\377");
[e ( *U . _IHM 2 (3 , , -> _i `uc -> _j `uc :s 18C ]
"618
[; ;main.c: 618:                                     delay(10);
[e ( _delay (1 -> -> 10 `i `ui ]
"619
[; ;main.c: 619:                                 }
}
[e ++ _j -> -> 1 `i `uc ]
[e $ <= -> _j `i -> 19 `i 293  ]
[e :U 294 ]
}
"620
[; ;main.c: 620:                             }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ <= -> _i `i -> 3 `i 290  ]
[e :U 291 ]
}
"622
[; ;main.c: 622:                             for(char i = 0; i <= 3; i++)
{
[v _i `uc ~T0 @X0 1 a ]
[e = _i -> -> 0 `i `uc ]
[e $ <= -> _i `i -> 3 `i 296  ]
[e $U 297  ]
[e :U 296 ]
"623
[; ;main.c: 623:                             {
{
"624
[; ;main.c: 624:                                 for(char j = 0; j <= 19; j++)
{
[v _j `uc ~T0 @X0 1 a ]
[e = _j -> -> 0 `i `uc ]
[e $ <= -> _j `i -> 19 `i 299  ]
[e $U 300  ]
[e :U 299 ]
"625
[; ;main.c: 625:                                 {
{
"626
[; ;main.c: 626:                                     IHM.printpos(i, j, " ");
[e ( *U . _IHM 2 (3 , , -> _i `uc -> _j `uc :s 19C ]
"627
[; ;main.c: 627:                                     delay(10);
[e ( _delay (1 -> -> 10 `i `ui ]
"628
[; ;main.c: 628:                                 }
}
[e ++ _j -> -> 1 `i `uc ]
[e $ <= -> _j `i -> 19 `i 299  ]
[e :U 300 ]
}
"629
[; ;main.c: 629:                             }
}
[e ++ _i -> -> 1 `i `uc ]
[e $ <= -> _i `i -> 3 `i 296  ]
[e :U 297 ]
}
"630
[; ;main.c: 630:                             IHM.printpos(1, 0, "      SEQUENCIA     ");
[e ( *U . _IHM 2 (3 , , -> -> 1 `i `uc -> -> 0 `i `uc :s 20C ]
"631
[; ;main.c: 631:                             IHM.printpos(2, 0, "        SALVA       ");
[e ( *U . _IHM 2 (3 , , -> -> 2 `i `uc -> -> 0 `i `uc :s 21C ]
"633
[; ;main.c: 633:                             setT1(1000);
[e ( _setT1 (1 -> -> -> 1000 `i `l `ul ]
"634
[; ;main.c: 634:                             estado = 78;
[e = _estado -> -> 78 `i `uc ]
"635
[; ;main.c: 635:                             break;
[e $U 146  ]
"637
[; ;main.c: 637:              case 78:
[e :U 302 ]
"638
[; ;main.c: 638:                             if(!statusT1())
[e $ ! ! != ( _statusT1 ..  -> -> -> 0 `i `l `ul 303  ]
"639
[; ;main.c: 639:                                 estado = 53;
[e = _estado -> -> 53 `i `uc ]
[e :U 303 ]
"640
[; ;main.c: 640:                             break;
[e $U 146  ]
"642
[; ;main.c: 642:              case 90:
[e :U 304 ]
"643
[; ;main.c: 643:                             IHM.printpos(2, 0, "config contrl:     %");
[e ( *U . _IHM 2 (3 , , -> -> 2 `i `uc -> -> 0 `i `uc :s 22C ]
"644
[; ;main.c: 644:                             IHM.printv(2, 15, num, 3);
[e ( *U . _IHM 3 (4 , , , -> -> 2 `i `uc -> -> 15 `i `uc -> _num `i -> -> 3 `i `uc ]
"645
[; ;main.c: 645:                             estado = 91;
[e = _estado -> -> 91 `i `uc ]
"646
[; ;main.c: 646:                             break;
[e $U 146  ]
"648
[; ;main.c: 648:              case 91:
[e :U 305 ]
"649
[; ;main.c: 649:                             tecla = teclado_borda();
[e = _tecla -> ( _teclado_borda ..  `uc ]
"650
[; ;main.c: 650:                             if(tecla >= '0' && tecla <= '9')
[e $ ! && >= -> _tecla `ui -> 48 `ui <= -> _tecla `ui -> 57 `ui 306  ]
"651
[; ;main.c: 651:                             {
{
"652
[; ;main.c: 652:                                 dignum_conc(tecla, &num);
[e ( _dignum_conc (2 , _tecla &U _num ]
"653
[; ;main.c: 653:                                 if(num > 100)
[e $ ! > _num -> -> 100 `i `ui 307  ]
"654
[; ;main.c: 654:                                     num = 100;
[e = _num -> -> 100 `i `ui ]
[e :U 307 ]
"655
[; ;main.c: 655:                                 estado = 90;
[e = _estado -> -> 90 `i `uc ]
"656
[; ;main.c: 656:                             }
}
[e :U 306 ]
"657
[; ;main.c: 657:                             if(tecla == '*')
[e $ ! == -> _tecla `ui -> 42 `ui 308  ]
"658
[; ;main.c: 658:                             {
{
"659
[; ;main.c: 659:                                 dignum_apagar(&num);
[e ( _dignum_apagar (1 &U _num ]
"660
[; ;main.c: 660:                                 estado = 90;
[e = _estado -> -> 90 `i `uc ]
"661
[; ;main.c: 661:                             }
}
[e :U 308 ]
"662
[; ;main.c: 662:                             if(tecla == '#')
[e $ ! == -> _tecla `ui -> 35 `ui 309  ]
"663
[; ;main.c: 663:                                 estado = 92;
[e = _estado -> -> 92 `i `uc ]
[e :U 309 ]
"664
[; ;main.c: 664:                             break;
[e $U 146  ]
"666
[; ;main.c: 666:              case 92:
[e :U 310 ]
"667
[; ;main.c: 667:                             fifo_add_control(num);
[e ( _fifo_add_control (1 -> _num `uc ]
"668
[; ;main.c: 668:                             IHM.clr();
[e ( *U . _IHM 4 ..  ]
"669
[; ;main.c: 669:                             estado = 16;
[e = _estado -> -> 16 `i `uc ]
"670
[; ;main.c: 670:                             break;
[e $U 146  ]
"672
[; ;main.c: 672:              case 54:
[e :U 311 ]
"673
[; ;main.c: 673:                             fifo_add_ciclo(ciclos);
[e ( _fifo_add_ciclo (1 _ciclos ]
"674
[; ;main.c: 674:                             estado = 30;
[e = _estado -> -> 30 `i `uc ]
"675
[; ;main.c: 675:                             botao = 1;
[e = _botao -> -> 1 `i `uc ]
"676
[; ;main.c: 676:                             break;
[e $U 146  ]
"677
[; ;main.c: 677:         }
}
[e $U 146  ]
[e :U 147 ]
[e [\ -> _estado `i , $ -> 0 `i 148
 , $ -> 1 `i 161
 , $ -> 2 `i 166
 , $ -> 8 `i 168
 , $ -> 9 `i 169
 , $ -> 71 `i 171
 , $ -> 72 `i 177
 , $ -> 73 `i 178
 , $ -> 3 `i 209
 , $ -> 6 `i 210
 , $ -> 7 `i 211
 , $ -> 10 `i 220
 , $ -> 11 `i 221
 , $ -> 16 `i 237
 , $ -> 14 `i 238
 , $ -> 30 `i 239
 , $ -> 70 `i 240
 , $ -> 40 `i 250
 , $ -> 41 `i 255
 , $ -> 42 `i 256
 , $ -> 52 `i 257
 , $ -> 53 `i 268
 , $ -> 74 `i 269
 , $ -> 75 `i 274
 , $ -> 76 `i 275
 , $ -> 77 `i 289
 , $ -> 78 `i 302
 , $ -> 90 `i 304
 , $ -> 91 `i 305
 , $ -> 92 `i 310
 , $ -> 54 `i 311
 146 ]
[e :U 146 ]
"679
[; ;main.c: 679:         serialIOscan();
[e ( _serialIOscan ..  ]
"681
[; ;main.c: 681:         switch(meAtuadores)
[e $U 313  ]
"682
[; ;main.c: 682:         {
{
"683
[; ;main.c: 683:             case 0: break;
[e :U 314 ]
[e $U 312  ]
"685
[; ;main.c: 685:             case 1:
[e :U 315 ]
"686
[; ;main.c: 686:                             resetIndicePassos();
[e ( _resetIndicePassos ..  ]
"687
[; ;main.c: 687:                             resetContCiclos();
[e ( _resetContCiclos ..  ]
"688
[; ;main.c: 688:                             meAtuadores = 2;
[e = _meAtuadores -> -> 2 `i `uc ]
"689
[; ;main.c: 689:                             break;
[e $U 312  ]
"691
[; ;main.c: 691:             case 2:
[e :U 316 ]
"692
[; ;main.c: 692:                             auxPasso = fifo_lerPos(getIndicePassos());
[e = _auxPasso ( _fifo_lerPos (1 -> ( _getIndicePassos ..  `uc ]
"694
[; ;main.c: 694:                             if(botao == 1 || botao == 3 || botao == 0)
[e $ ! || || == -> _botao `i -> 1 `i == -> _botao `i -> 3 `i == -> _botao `i -> 0 `i 317  ]
"695
[; ;main.c: 695:                                 meAtuadores = 3;
[e = _meAtuadores -> -> 3 `i `uc ]
[e :U 317 ]
"696
[; ;main.c: 696:                             break;
[e $U 312  ]
"698
[; ;main.c: 698:             case 3:
[e :U 318 ]
"699
[; ;main.c: 699:                             if(auxPasso & 0x80)
[e $ ! != & -> _auxPasso `i -> 128 `i -> 0 `i 319  ]
"700
[; ;main.c: 700:                             {
{
"701
[; ;main.c: 701:                                 setT1( (unsigned long int)(auxPasso & 0x7F) * 1000 );
[e ( _setT1 (1 * -> & -> _auxPasso `i -> 127 `i `ul -> -> -> 1000 `i `l `ul ]
"702
[; ;main.c: 702:                                 meAtuadores = 4;
[e = _meAtuadores -> -> 4 `i `uc ]
"703
[; ;main.c: 703:                             }
}
[e $U 320  ]
"704
[; ;main.c: 704:                             else
[e :U 319 ]
"705
[; ;main.c: 705:                             {
{
"706
[; ;main.c: 706:                                 set_passo(auxPasso, vetorOut);
[e ( _set_passo (2 , _auxPasso &U _vetorOut ]
"707
[; ;main.c: 707:                                 meAtuadores = 5;
[e = _meAtuadores -> -> 5 `i `uc ]
"708
[; ;main.c: 708:                             }
}
[e :U 320 ]
"709
[; ;main.c: 709:                             break;
[e $U 312  ]
"711
[; ;main.c: 711:             case 4:
[e :U 321 ]
"712
[; ;main.c: 712:                             if(!statusT1())
[e $ ! ! != ( _statusT1 ..  -> -> -> 0 `i `l `ul 322  ]
"713
[; ;main.c: 713:                                 meAtuadores = 6;
[e = _meAtuadores -> -> 6 `i `uc ]
[e :U 322 ]
"714
[; ;main.c: 714:                             break;
[e $U 312  ]
"716
[; ;main.c: 716:             case 5:
[e :U 323 ]
"717
[; ;main.c: 717:                             if(ler_sensor(auxPasso, vetorIn))
[e $ ! != -> ( _ler_sensor (2 , _auxPasso &U _vetorIn `i -> 0 `i 324  ]
"718
[; ;main.c: 718:                                 meAtuadores = 6;
[e = _meAtuadores -> -> 6 `i `uc ]
[e :U 324 ]
"719
[; ;main.c: 719:                             break;
[e $U 312  ]
"721
[; ;main.c: 721:             case 6:
[e :U 325 ]
"722
[; ;main.c: 722:                             if(botao == 3)
[e $ ! == -> _botao `i -> 3 `i 326  ]
"723
[; ;main.c: 723:                             {
{
"724
[; ;main.c: 724:                                 botao = 2;
[e = _botao -> -> 2 `i `uc ]
"725
[; ;main.c: 725:                             }
}
[e :U 326 ]
"726
[; ;main.c: 726:                             meAtuadores = 7;
[e = _meAtuadores -> -> 7 `i `uc ]
"728
[; ;main.c: 728:                             break;
[e $U 312  ]
"730
[; ;main.c: 730:             case 7:
[e :U 327 ]
"731
[; ;main.c: 731:                             addIndicePassos();
[e ( _addIndicePassos ..  ]
"732
[; ;main.c: 732:                             if(getIndicePassos() < fifo_indice())
[e $ ! < -> ( _getIndicePassos ..  `i -> ( _fifo_indice ..  `i 328  ]
"733
[; ;main.c: 733:                                 meAtuadores = 2;
[e = _meAtuadores -> -> 2 `i `uc ]
[e $U 329  ]
"734
[; ;main.c: 734:                             else
[e :U 328 ]
"735
[; ;main.c: 735:                             {
{
"736
[; ;main.c: 736:                                 addContCiclos();
[e ( _addContCiclos ..  ]
"737
[; ;main.c: 737:                                 meAtuadores = 8;
[e = _meAtuadores -> -> 8 `i `uc ]
"738
[; ;main.c: 738:                             }
}
[e :U 329 ]
"739
[; ;main.c: 739:                             break;
[e $U 312  ]
"741
[; ;main.c: 741:             case 8:
[e :U 330 ]
"742
[; ;main.c: 742:                             if((botao != 0) && ((getContCiclos() < getCiclos()) || (getCiclos() == 0)))
[e $ ! && != -> _botao `i -> 0 `i || < ( _getContCiclos ..  ( _getCiclos ..  == ( _getCiclos ..  -> -> 0 `i `ui 331  ]
"743
[; ;main.c: 743:                             {
{
"744
[; ;main.c: 744:                                 resetIndicePassos();
[e ( _resetIndicePassos ..  ]
"745
[; ;main.c: 745:                                 meAtuadores = 2;
[e = _meAtuadores -> -> 2 `i `uc ]
"746
[; ;main.c: 746:                             }
}
[e $U 332  ]
"747
[; ;main.c: 747:                             else
[e :U 331 ]
"748
[; ;main.c: 748:                             {
{
"749
[; ;main.c: 749:                                 meAtuadores = 0;
[e = _meAtuadores -> -> 0 `i `uc ]
"750
[; ;main.c: 750:                             }
}
[e :U 332 ]
"751
[; ;main.c: 751:                             break;
[e $U 312  ]
"752
[; ;main.c: 752:         }
}
[e $U 312  ]
[e :U 313 ]
[e [\ -> _meAtuadores `i , $ -> 0 `i 314
 , $ -> 1 `i 315
 , $ -> 2 `i 316
 , $ -> 3 `i 318
 , $ -> 4 `i 321
 , $ -> 5 `i 323
 , $ -> 6 `i 325
 , $ -> 7 `i 327
 , $ -> 8 `i 330
 312 ]
[e :U 312 ]
"753
[; ;main.c: 753:     }
}
[e :U 143 ]
[e $U 144  ]
[e :U 145 ]
"754
[; ;main.c: 754:     return;
[e $UE 142  ]
"755
[; ;main.c: 755: }
[e :UE 142 ]
}
[a 13C 99 111 110 102 105 103 32 116 101 109 112 111 58 32 32 32 32 32 32 115 0 ]
[a 16C 32 32 32 32 68 69 83 69 74 65 32 83 65 76 86 65 82 10 32 32 32 32 32 83 69 81 85 69 78 67 73 65 32 63 10 10 35 32 45 32 83 73 77 32 32 32 32 32 32 42 32 45 32 78 65 79 0 ]
[a 10C 60 32 32 47 32 32 62 0 ]
[a 22C 99 111 110 102 105 103 32 99 111 110 116 114 108 58 32 32 32 32 32 37 0 ]
[a 15C 48 32 45 32 67 105 99 108 111 32 99 111 110 116 105 110 117 111 32 32 0 ]
[a 9C 32 32 73 78 83 73 82 65 32 79 83 32 80 65 83 83 79 83 32 32 0 ]
[a 6C 32 32 32 65 74 85 83 84 69 32 79 32 73 78 73 67 73 79 32 32 0 ]
[a 17C 32 69 83 67 79 76 72 65 32 65 32 77 69 77 79 82 73 65 10 32 81 85 69 32 68 69 83 69 74 65 32 83 65 76 86 65 82 10 32 48 32 32 32 49 32 32 32 50 32 32 32 51 32 32 32 52 10 32 53 32 32 32 54 32 32 32 55 32 32 32 56 32 32 32 57 32 32 0 ]
[a 4C 49 58 32 73 78 83 69 82 73 82 32 83 69 81 85 69 78 67 73 65 10 50 58 32 66 85 83 67 65 82 32 83 69 81 85 69 78 67 73 65 10 51 58 32 82 69 80 69 84 73 82 32 85 76 84 46 32 83 69 81 85 10 52 58 32 67 79 78 70 73 71 85 82 65 67 79 69 83 32 32 32 32 0 ]
[a 8C 32 32 32 65 32 32 32 66 32 32 32 67 32 32 32 68 32 32 32 32 0 ]
[a 7C 32 32 32 32 32 68 79 32 83 73 83 84 69 77 65 32 32 32 32 32 0 ]
[a 20C 32 32 32 32 32 32 83 69 81 85 69 78 67 73 65 32 32 32 32 32 0 ]
[a 11C 32 32 32 32 32 32 32 91 32 32 32 32 93 32 32 32 32 32 32 32 0 ]
[a 3C 32 32 32 32 32 32 83 69 71 71 84 84 73 32 32 32 32 32 32 32 0 ]
[a 21C 32 32 32 32 32 32 32 32 83 65 76 86 65 32 32 32 32 32 32 32 0 ]
[a 12C 60 32 32 47 32 32 62 32 99 58 32 32 32 32 32 32 32 32 32 32 0 ]
[a 14C 67 105 99 108 111 115 58 32 32 32 32 32 32 32 32 32 32 32 32 32 0 ]
[a 2C 32 0 ]
[a 19C 32 0 ]
[a 5C 32 69 83 67 79 76 72 65 32 65 32 77 69 77 79 82 73 65 32 10 81 85 69 32 68 69 83 69 74 65 32 69 88 69 67 85 84 65 82 10 32 48 32 32 32 49 32 32 32 50 32 32 32 51 32 32 32 52 32 10 32 53 32 32 32 54 32 32 32 55 32 32 32 56 32 32 32 57 32 10 0 ]
[a 1C 18446744073709551615 0 ]
[a 18C 18446744073709551615 0 ]
